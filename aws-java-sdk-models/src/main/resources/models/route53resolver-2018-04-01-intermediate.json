{
  "customizationConfig" : {
    "additionalShapeConstructors" : null,
    "authPolicyActions" : {
      "actionPrefix" : null,
      "additionalOperations" : null,
      "fileNamePrefix" : null,
      "skip" : true
    },
    "calculateCRC32FromCompressedData" : false,
    "contentTypeOverride" : null,
    "convenienceTypeOverloads" : [ ],
    "customClientConfigFactory" : null,
    "customCodeTemplates" : null,
    "customErrorCodeFieldName" : null,
    "customExceptionUnmarshallerImpl" : null,
    "customFileHeader" : null,
    "customResponseHandlerFqcn" : null,
    "customResponseMetadataClassName" : null,
    "customServiceMetadata" : null,
    "customServiceNameForRequest" : null,
    "customSignerProvider" : null,
    "deprecatedSuppressions" : [ "ClientMutationMethods", "ClientConstructors", "EnumSetterOverload" ],
    "emitLegacyEnumSetterFor" : null,
    "operationModifiers" : null,
    "operationsWithResponseStreamContentLengthValidation" : null,
    "presignersFqcn" : null,
    "renameShapes" : null,
    "requestMetrics" : null,
    "requiredParamValidationEnabled" : false,
    "s3ArnableFields" : null,
    "sdkModeledExceptionBaseClassName" : null,
    "sendEmptyAutoConstructedListAsEmptyList" : null,
    "sendExplicitlyEmptyListsForQuery" : false,
    "serviceClientHoldInputStream" : false,
    "shapeModifiers" : null,
    "shapeSubstitutions" : null,
    "simpleMethods" : null,
    "skipClientMethodForOperations" : [ ],
    "skipInterfaceAdditions" : false,
    "skipSmokeTests" : true,
    "transformDirectory" : "transform",
    "useAutoConstructList" : false,
    "useAutoConstructMap" : false,
    "useUidAsFilePrefix" : false
  },
  "metadata" : {
    "apiVersion" : "2018-04-01",
    "asyncClient" : "AmazonRoute53ResolverAsyncClient",
    "asyncClientBuilderClassName" : "AmazonRoute53ResolverAsyncClientBuilder",
    "asyncInterface" : "AmazonRoute53ResolverAsync",
    "cborProtocol" : false,
    "checksumFormat" : null,
    "contentType" : null,
    "cucumberModuleInjectorClassName" : "AmazonRoute53ResolverModuleInjector",
    "defaultEndpoint" : "route53resolver.us-east-1.amazonaws.com",
    "defaultEndpointWithoutHttpProtocol" : "route53resolver.us-east-1.amazonaws.com",
    "defaultRegion" : null,
    "documentation" : "<p>When you create a VPC using Amazon VPC, you automatically get DNS resolution within the VPC from Route 53 Resolver. By default, Resolver answers DNS queries for VPC domain names such as domain names for EC2 instances or ELB load balancers. Resolver performs recursive lookups against public name servers for all other domain names.</p> <p>You can also configure DNS resolution between your VPC and your network over a Direct Connect or VPN connection:</p> <p> <b>Forward DNS queries from resolvers on your network to Route 53 Resolver</b> </p> <p>DNS resolvers on your network can forward DNS queries to Resolver in a specified VPC. This allows your DNS resolvers to easily resolve domain names for AWS resources such as EC2 instances or records in a Route 53 private hosted zone. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/resolver.html#resolver-overview-forward-network-to-vpc\">How DNS Resolvers on Your Network Forward DNS Queries to Route 53 Resolver</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <p> <b>Conditionally forward queries from a VPC to resolvers on your network</b> </p> <p>You can configure Resolver to forward queries that it receives from EC2 instances in your VPCs to DNS resolvers on your network. To forward selected queries, you create Resolver rules that specify the domain names for the DNS queries that you want to forward (such as example.com), and the IP addresses of the DNS resolvers on your network that you want to forward the queries to. If a query matches multiple rules (example.com, acme.example.com), Resolver chooses the rule with the most specific match (acme.example.com) and forwards the query to the IP addresses that you specified in that rule. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/resolver.html#resolver-overview-forward-vpc-to-network\">How Route 53 Resolver Forwards DNS Queries from Your VPCs to Your Network</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <p>Like Amazon VPC, Resolver is regional. In each region where you have VPCs, you can choose whether to forward queries from your VPCs to your network (outbound queries), from your network to your VPCs (inbound queries), or both.</p>",
    "endpointPrefix" : "route53resolver",
    "hasApiWithStreamInput" : false,
    "ionProtocol" : false,
    "jsonProtocol" : true,
    "jsonVersion" : "1.1",
    "packageName" : "com.amazonaws.services.route53resolver",
    "packagePath" : "com/amazonaws/services/route53resolver",
    "protocol" : "json",
    "protocolDefaultExceptionUmarshallerImpl" : null,
    "protocolFactory" : "com.amazonaws.protocol.json.SdkJsonProtocolFactory",
    "requestBaseFqcn" : "com.amazonaws.AmazonWebServiceRequest",
    "requiresApiKey" : false,
    "requiresIamSigners" : false,
    "serviceAbbreviation" : "Route53Resolver",
    "serviceFullName" : "Amazon Route 53 Resolver",
    "serviceId" : "Route53Resolver",
    "serviceName" : "Route53Resolver",
    "signingName" : "route53resolver",
    "smokeTestsPackageName" : "com.amazonaws.services.route53resolver.smoketests",
    "syncClient" : "AmazonRoute53ResolverClient",
    "syncClientBuilderClassName" : "AmazonRoute53ResolverClientBuilder",
    "syncInterface" : "AmazonRoute53Resolver",
    "uid" : "route53resolver-2018-04-01",
    "unmarshallerClassSuffix" : "JsonUnmarshaller",
    "unmarshallerContextClassName" : "JsonUnmarshallerContext",
    "xmlProtocol" : false
  },
  "operations" : {
    "AssociateResolverEndpointIpAddress" : {
      "asyncCallableType" : "java.util.concurrent.Callable<AssociateResolverEndpointIpAddressResult>",
      "asyncFutureType" : "java.util.concurrent.Future<AssociateResolverEndpointIpAddressResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<AssociateResolverEndpointIpAddressRequest, AssociateResolverEndpointIpAddressResult>",
      "asyncReturnType" : "AssociateResolverEndpointIpAddressResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Adds IP addresses to an inbound or an outbound Resolver endpoint. If you want to add more than one IP address, submit one <code>AssociateResolverEndpointIpAddress</code> request for each IP address.</p> <p>To remove an IP address from an endpoint, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DisassociateResolverEndpointIpAddress.html\">DisassociateResolverEndpointIpAddress</a>. </p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceExistsException",
        "documentation" : "<p>The resource that you tried to create already exists.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>The request caused one or more limits to be exceeded.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "AssociateResolverEndpointIpAddressRequest",
        "variableName" : "associateResolverEndpointIpAddressRequest",
        "variableType" : "AssociateResolverEndpointIpAddressRequest",
        "documentation" : "",
        "simpleType" : "AssociateResolverEndpointIpAddressRequest",
        "variableSetterType" : "AssociateResolverEndpointIpAddressRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "associateResolverEndpointIpAddress",
      "operationName" : "AssociateResolverEndpointIpAddress",
      "returnType" : {
        "returnType" : "AssociateResolverEndpointIpAddressResult",
        "documentation" : null
      },
      "syncReturnType" : "AssociateResolverEndpointIpAddressResult"
    },
    "AssociateResolverQueryLogConfig" : {
      "asyncCallableType" : "java.util.concurrent.Callable<AssociateResolverQueryLogConfigResult>",
      "asyncFutureType" : "java.util.concurrent.Future<AssociateResolverQueryLogConfigResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<AssociateResolverQueryLogConfigRequest, AssociateResolverQueryLogConfigResult>",
      "asyncReturnType" : "AssociateResolverQueryLogConfigResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Associates an Amazon VPC with a specified query logging configuration. Route 53 Resolver logs DNS queries that originate in all of the Amazon VPCs that are associated with a specified query logging configuration. To associate more than one VPC with a configuration, submit one <code>AssociateResolverQueryLogConfig</code> request for each VPC.</p> <note> <p>The VPCs that you associate with a query logging configuration must be in the same Region as the configuration.</p> </note> <p>To remove a VPC from a query logging configuration, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DisassociateResolverQueryLogConfig.html\">DisassociateResolverQueryLogConfig</a>. </p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceExistsException",
        "documentation" : "<p>The resource that you tried to create already exists.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>The request caused one or more limits to be exceeded.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>The current account doesn't have the IAM permissions required to perform the specified Resolver operation.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "AssociateResolverQueryLogConfigRequest",
        "variableName" : "associateResolverQueryLogConfigRequest",
        "variableType" : "AssociateResolverQueryLogConfigRequest",
        "documentation" : "",
        "simpleType" : "AssociateResolverQueryLogConfigRequest",
        "variableSetterType" : "AssociateResolverQueryLogConfigRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "associateResolverQueryLogConfig",
      "operationName" : "AssociateResolverQueryLogConfig",
      "returnType" : {
        "returnType" : "AssociateResolverQueryLogConfigResult",
        "documentation" : null
      },
      "syncReturnType" : "AssociateResolverQueryLogConfigResult"
    },
    "AssociateResolverRule" : {
      "asyncCallableType" : "java.util.concurrent.Callable<AssociateResolverRuleResult>",
      "asyncFutureType" : "java.util.concurrent.Future<AssociateResolverRuleResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<AssociateResolverRuleRequest, AssociateResolverRuleResult>",
      "asyncReturnType" : "AssociateResolverRuleResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Associates a Resolver rule with a VPC. When you associate a rule with a VPC, Resolver forwards all DNS queries for the domain name that is specified in the rule and that originate in the VPC. The queries are forwarded to the IP addresses for the DNS resolvers that are specified in the rule. For more information about rules, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverRule.html\">CreateResolverRule</a>. </p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>The request caused one or more limits to be exceeded.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceUnavailableException",
        "documentation" : "<p>The specified resource isn't available.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceExistsException",
        "documentation" : "<p>The resource that you tried to create already exists.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "AssociateResolverRuleRequest",
        "variableName" : "associateResolverRuleRequest",
        "variableType" : "AssociateResolverRuleRequest",
        "documentation" : "",
        "simpleType" : "AssociateResolverRuleRequest",
        "variableSetterType" : "AssociateResolverRuleRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "associateResolverRule",
      "operationName" : "AssociateResolverRule",
      "returnType" : {
        "returnType" : "AssociateResolverRuleResult",
        "documentation" : null
      },
      "syncReturnType" : "AssociateResolverRuleResult"
    },
    "CreateResolverEndpoint" : {
      "asyncCallableType" : "java.util.concurrent.Callable<CreateResolverEndpointResult>",
      "asyncFutureType" : "java.util.concurrent.Future<CreateResolverEndpointResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreateResolverEndpointRequest, CreateResolverEndpointResult>",
      "asyncReturnType" : "CreateResolverEndpointResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Creates a Resolver endpoint. There are two types of Resolver endpoints, inbound and outbound:</p> <ul> <li> <p>An <i>inbound Resolver endpoint</i> forwards DNS queries to the DNS service for a VPC from your network.</p> </li> <li> <p>An <i>outbound Resolver endpoint</i> forwards DNS queries from the DNS service for a VPC to your network.</p> </li> </ul>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceExistsException",
        "documentation" : "<p>The resource that you tried to create already exists.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>The request caused one or more limits to be exceeded.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "CreateResolverEndpointRequest",
        "variableName" : "createResolverEndpointRequest",
        "variableType" : "CreateResolverEndpointRequest",
        "documentation" : "",
        "simpleType" : "CreateResolverEndpointRequest",
        "variableSetterType" : "CreateResolverEndpointRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "createResolverEndpoint",
      "operationName" : "CreateResolverEndpoint",
      "returnType" : {
        "returnType" : "CreateResolverEndpointResult",
        "documentation" : null
      },
      "syncReturnType" : "CreateResolverEndpointResult"
    },
    "CreateResolverQueryLogConfig" : {
      "asyncCallableType" : "java.util.concurrent.Callable<CreateResolverQueryLogConfigResult>",
      "asyncFutureType" : "java.util.concurrent.Future<CreateResolverQueryLogConfigResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreateResolverQueryLogConfigRequest, CreateResolverQueryLogConfigResult>",
      "asyncReturnType" : "CreateResolverQueryLogConfigResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Creates a Resolver query logging configuration, which defines where you want Resolver to save DNS query logs that originate in your VPCs. Resolver can log queries only for VPCs that are in the same Region as the query logging configuration.</p> <p>To specify which VPCs you want to log queries for, you use <code>AssociateResolverQueryLogConfig</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverQueryLogConfig.html\">AssociateResolverQueryLogConfig</a>. </p> <p>You can optionally use AWS Resource Access Manager (AWS RAM) to share a query logging configuration with other AWS accounts. The other accounts can then associate VPCs with the configuration. The query logs that Resolver creates for a configuration include all DNS queries that originate in all VPCs that are associated with the configuration.</p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceExistsException",
        "documentation" : "<p>The resource that you tried to create already exists.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>The request caused one or more limits to be exceeded.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>The current account doesn't have the IAM permissions required to perform the specified Resolver operation.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "CreateResolverQueryLogConfigRequest",
        "variableName" : "createResolverQueryLogConfigRequest",
        "variableType" : "CreateResolverQueryLogConfigRequest",
        "documentation" : "",
        "simpleType" : "CreateResolverQueryLogConfigRequest",
        "variableSetterType" : "CreateResolverQueryLogConfigRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "createResolverQueryLogConfig",
      "operationName" : "CreateResolverQueryLogConfig",
      "returnType" : {
        "returnType" : "CreateResolverQueryLogConfigResult",
        "documentation" : null
      },
      "syncReturnType" : "CreateResolverQueryLogConfigResult"
    },
    "CreateResolverRule" : {
      "asyncCallableType" : "java.util.concurrent.Callable<CreateResolverRuleResult>",
      "asyncFutureType" : "java.util.concurrent.Future<CreateResolverRuleResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreateResolverRuleRequest, CreateResolverRuleResult>",
      "asyncReturnType" : "CreateResolverRuleResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>For DNS queries that originate in your VPCs, specifies which Resolver endpoint the queries pass through, one domain name that you want to forward to your network, and the IP addresses of the DNS resolvers in your network.</p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>The request caused one or more limits to be exceeded.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceExistsException",
        "documentation" : "<p>The resource that you tried to create already exists.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceUnavailableException",
        "documentation" : "<p>The specified resource isn't available.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "CreateResolverRuleRequest",
        "variableName" : "createResolverRuleRequest",
        "variableType" : "CreateResolverRuleRequest",
        "documentation" : "",
        "simpleType" : "CreateResolverRuleRequest",
        "variableSetterType" : "CreateResolverRuleRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "createResolverRule",
      "operationName" : "CreateResolverRule",
      "returnType" : {
        "returnType" : "CreateResolverRuleResult",
        "documentation" : null
      },
      "syncReturnType" : "CreateResolverRuleResult"
    },
    "DeleteResolverEndpoint" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteResolverEndpointResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteResolverEndpointResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteResolverEndpointRequest, DeleteResolverEndpointResult>",
      "asyncReturnType" : "DeleteResolverEndpointResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Deletes a Resolver endpoint. The effect of deleting a Resolver endpoint depends on whether it's an inbound or an outbound Resolver endpoint:</p> <ul> <li> <p> <b>Inbound</b>: DNS queries from your network are no longer routed to the DNS service for the specified VPC.</p> </li> <li> <p> <b>Outbound</b>: DNS queries from a VPC are no longer routed to your network.</p> </li> </ul>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteResolverEndpointRequest",
        "variableName" : "deleteResolverEndpointRequest",
        "variableType" : "DeleteResolverEndpointRequest",
        "documentation" : "",
        "simpleType" : "DeleteResolverEndpointRequest",
        "variableSetterType" : "DeleteResolverEndpointRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "deleteResolverEndpoint",
      "operationName" : "DeleteResolverEndpoint",
      "returnType" : {
        "returnType" : "DeleteResolverEndpointResult",
        "documentation" : null
      },
      "syncReturnType" : "DeleteResolverEndpointResult"
    },
    "DeleteResolverQueryLogConfig" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteResolverQueryLogConfigResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteResolverQueryLogConfigResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteResolverQueryLogConfigRequest, DeleteResolverQueryLogConfigResult>",
      "asyncReturnType" : "DeleteResolverQueryLogConfigResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Deletes a query logging configuration. When you delete a configuration, Resolver stops logging DNS queries for all of the Amazon VPCs that are associated with the configuration. This also applies if the query logging configuration is shared with other AWS accounts, and the other accounts have associated VPCs with the shared configuration.</p> <p>Before you can delete a query logging configuration, you must first disassociate all VPCs from the configuration. See <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DisassociateResolverQueryLogConfig.html\">DisassociateResolverQueryLogConfig</a>.</p> <p>If you used Resource Access Manager (RAM) to share a query logging configuration with other accounts, you must stop sharing the configuration before you can delete a configuration. The accounts that you shared the configuration with can first disassociate VPCs that they associated with the configuration, but that's not necessary. If you stop sharing the configuration, those VPCs are automatically disassociated from the configuration.</p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>The current account doesn't have the IAM permissions required to perform the specified Resolver operation.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteResolverQueryLogConfigRequest",
        "variableName" : "deleteResolverQueryLogConfigRequest",
        "variableType" : "DeleteResolverQueryLogConfigRequest",
        "documentation" : "",
        "simpleType" : "DeleteResolverQueryLogConfigRequest",
        "variableSetterType" : "DeleteResolverQueryLogConfigRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "deleteResolverQueryLogConfig",
      "operationName" : "DeleteResolverQueryLogConfig",
      "returnType" : {
        "returnType" : "DeleteResolverQueryLogConfigResult",
        "documentation" : null
      },
      "syncReturnType" : "DeleteResolverQueryLogConfigResult"
    },
    "DeleteResolverRule" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteResolverRuleResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteResolverRuleResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteResolverRuleRequest, DeleteResolverRuleResult>",
      "asyncReturnType" : "DeleteResolverRuleResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Deletes a Resolver rule. Before you can delete a Resolver rule, you must disassociate it from all the VPCs that you associated the Resolver rule with. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DisassociateResolverRule.html\">DisassociateResolverRule</a>.</p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceInUseException",
        "documentation" : "<p>The resource that you tried to update or delete is currently in use.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteResolverRuleRequest",
        "variableName" : "deleteResolverRuleRequest",
        "variableType" : "DeleteResolverRuleRequest",
        "documentation" : "",
        "simpleType" : "DeleteResolverRuleRequest",
        "variableSetterType" : "DeleteResolverRuleRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "deleteResolverRule",
      "operationName" : "DeleteResolverRule",
      "returnType" : {
        "returnType" : "DeleteResolverRuleResult",
        "documentation" : null
      },
      "syncReturnType" : "DeleteResolverRuleResult"
    },
    "DisassociateResolverEndpointIpAddress" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DisassociateResolverEndpointIpAddressResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DisassociateResolverEndpointIpAddressResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DisassociateResolverEndpointIpAddressRequest, DisassociateResolverEndpointIpAddressResult>",
      "asyncReturnType" : "DisassociateResolverEndpointIpAddressResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Removes IP addresses from an inbound or an outbound Resolver endpoint. If you want to remove more than one IP address, submit one <code>DisassociateResolverEndpointIpAddress</code> request for each IP address.</p> <p>To add an IP address to an endpoint, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverEndpointIpAddress.html\">AssociateResolverEndpointIpAddress</a>. </p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceExistsException",
        "documentation" : "<p>The resource that you tried to create already exists.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DisassociateResolverEndpointIpAddressRequest",
        "variableName" : "disassociateResolverEndpointIpAddressRequest",
        "variableType" : "DisassociateResolverEndpointIpAddressRequest",
        "documentation" : "",
        "simpleType" : "DisassociateResolverEndpointIpAddressRequest",
        "variableSetterType" : "DisassociateResolverEndpointIpAddressRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "disassociateResolverEndpointIpAddress",
      "operationName" : "DisassociateResolverEndpointIpAddress",
      "returnType" : {
        "returnType" : "DisassociateResolverEndpointIpAddressResult",
        "documentation" : null
      },
      "syncReturnType" : "DisassociateResolverEndpointIpAddressResult"
    },
    "DisassociateResolverQueryLogConfig" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DisassociateResolverQueryLogConfigResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DisassociateResolverQueryLogConfigResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DisassociateResolverQueryLogConfigRequest, DisassociateResolverQueryLogConfigResult>",
      "asyncReturnType" : "DisassociateResolverQueryLogConfigResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Disassociates a VPC from a query logging configuration.</p> <note> <p>Before you can delete a query logging configuration, you must first disassociate all VPCs from the configuration. If you used Resource Access Manager (RAM) to share a query logging configuration with other accounts, VPCs can be disassociated from the configuration in the following ways:</p> <ul> <li> <p>The accounts that you shared the configuration with can disassociate VPCs from the configuration.</p> </li> <li> <p>You can stop sharing the configuration.</p> </li> </ul> </note>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>The current account doesn't have the IAM permissions required to perform the specified Resolver operation.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DisassociateResolverQueryLogConfigRequest",
        "variableName" : "disassociateResolverQueryLogConfigRequest",
        "variableType" : "DisassociateResolverQueryLogConfigRequest",
        "documentation" : "",
        "simpleType" : "DisassociateResolverQueryLogConfigRequest",
        "variableSetterType" : "DisassociateResolverQueryLogConfigRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "disassociateResolverQueryLogConfig",
      "operationName" : "DisassociateResolverQueryLogConfig",
      "returnType" : {
        "returnType" : "DisassociateResolverQueryLogConfigResult",
        "documentation" : null
      },
      "syncReturnType" : "DisassociateResolverQueryLogConfigResult"
    },
    "DisassociateResolverRule" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DisassociateResolverRuleResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DisassociateResolverRuleResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DisassociateResolverRuleRequest, DisassociateResolverRuleResult>",
      "asyncReturnType" : "DisassociateResolverRuleResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Removes the association between a specified Resolver rule and a specified VPC.</p> <important> <p>If you disassociate a Resolver rule from a VPC, Resolver stops forwarding DNS queries for the domain name that you specified in the Resolver rule. </p> </important>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DisassociateResolverRuleRequest",
        "variableName" : "disassociateResolverRuleRequest",
        "variableType" : "DisassociateResolverRuleRequest",
        "documentation" : "",
        "simpleType" : "DisassociateResolverRuleRequest",
        "variableSetterType" : "DisassociateResolverRuleRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "disassociateResolverRule",
      "operationName" : "DisassociateResolverRule",
      "returnType" : {
        "returnType" : "DisassociateResolverRuleResult",
        "documentation" : null
      },
      "syncReturnType" : "DisassociateResolverRuleResult"
    },
    "GetResolverDnssecConfig" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetResolverDnssecConfigResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetResolverDnssecConfigResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetResolverDnssecConfigRequest, GetResolverDnssecConfigResult>",
      "asyncReturnType" : "GetResolverDnssecConfigResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Gets DNSSEC validation information for a specified resource.</p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>The current account doesn't have the IAM permissions required to perform the specified Resolver operation.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetResolverDnssecConfigRequest",
        "variableName" : "getResolverDnssecConfigRequest",
        "variableType" : "GetResolverDnssecConfigRequest",
        "documentation" : "",
        "simpleType" : "GetResolverDnssecConfigRequest",
        "variableSetterType" : "GetResolverDnssecConfigRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getResolverDnssecConfig",
      "operationName" : "GetResolverDnssecConfig",
      "returnType" : {
        "returnType" : "GetResolverDnssecConfigResult",
        "documentation" : null
      },
      "syncReturnType" : "GetResolverDnssecConfigResult"
    },
    "GetResolverEndpoint" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetResolverEndpointResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetResolverEndpointResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetResolverEndpointRequest, GetResolverEndpointResult>",
      "asyncReturnType" : "GetResolverEndpointResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Gets information about a specified Resolver endpoint, such as whether it's an inbound or an outbound Resolver endpoint, and the current status of the endpoint.</p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetResolverEndpointRequest",
        "variableName" : "getResolverEndpointRequest",
        "variableType" : "GetResolverEndpointRequest",
        "documentation" : "",
        "simpleType" : "GetResolverEndpointRequest",
        "variableSetterType" : "GetResolverEndpointRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getResolverEndpoint",
      "operationName" : "GetResolverEndpoint",
      "returnType" : {
        "returnType" : "GetResolverEndpointResult",
        "documentation" : null
      },
      "syncReturnType" : "GetResolverEndpointResult"
    },
    "GetResolverQueryLogConfig" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetResolverQueryLogConfigResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetResolverQueryLogConfigResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetResolverQueryLogConfigRequest, GetResolverQueryLogConfigResult>",
      "asyncReturnType" : "GetResolverQueryLogConfigResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Gets information about a specified Resolver query logging configuration, such as the number of VPCs that the configuration is logging queries for and the location that logs are sent to. </p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>The current account doesn't have the IAM permissions required to perform the specified Resolver operation.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetResolverQueryLogConfigRequest",
        "variableName" : "getResolverQueryLogConfigRequest",
        "variableType" : "GetResolverQueryLogConfigRequest",
        "documentation" : "",
        "simpleType" : "GetResolverQueryLogConfigRequest",
        "variableSetterType" : "GetResolverQueryLogConfigRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getResolverQueryLogConfig",
      "operationName" : "GetResolverQueryLogConfig",
      "returnType" : {
        "returnType" : "GetResolverQueryLogConfigResult",
        "documentation" : null
      },
      "syncReturnType" : "GetResolverQueryLogConfigResult"
    },
    "GetResolverQueryLogConfigAssociation" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetResolverQueryLogConfigAssociationResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetResolverQueryLogConfigAssociationResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetResolverQueryLogConfigAssociationRequest, GetResolverQueryLogConfigAssociationResult>",
      "asyncReturnType" : "GetResolverQueryLogConfigAssociationResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Gets information about a specified association between a Resolver query logging configuration and an Amazon VPC. When you associate a VPC with a query logging configuration, Resolver logs DNS queries that originate in that VPC.</p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>The current account doesn't have the IAM permissions required to perform the specified Resolver operation.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetResolverQueryLogConfigAssociationRequest",
        "variableName" : "getResolverQueryLogConfigAssociationRequest",
        "variableType" : "GetResolverQueryLogConfigAssociationRequest",
        "documentation" : "",
        "simpleType" : "GetResolverQueryLogConfigAssociationRequest",
        "variableSetterType" : "GetResolverQueryLogConfigAssociationRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getResolverQueryLogConfigAssociation",
      "operationName" : "GetResolverQueryLogConfigAssociation",
      "returnType" : {
        "returnType" : "GetResolverQueryLogConfigAssociationResult",
        "documentation" : null
      },
      "syncReturnType" : "GetResolverQueryLogConfigAssociationResult"
    },
    "GetResolverQueryLogConfigPolicy" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetResolverQueryLogConfigPolicyResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetResolverQueryLogConfigPolicyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetResolverQueryLogConfigPolicyRequest, GetResolverQueryLogConfigPolicyResult>",
      "asyncReturnType" : "GetResolverQueryLogConfigPolicyResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Gets information about a query logging policy. A query logging policy specifies the Resolver query logging operations and resources that you want to allow another AWS account to be able to use.</p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "UnknownResourceException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>The current account doesn't have the IAM permissions required to perform the specified Resolver operation.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetResolverQueryLogConfigPolicyRequest",
        "variableName" : "getResolverQueryLogConfigPolicyRequest",
        "variableType" : "GetResolverQueryLogConfigPolicyRequest",
        "documentation" : "",
        "simpleType" : "GetResolverQueryLogConfigPolicyRequest",
        "variableSetterType" : "GetResolverQueryLogConfigPolicyRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getResolverQueryLogConfigPolicy",
      "operationName" : "GetResolverQueryLogConfigPolicy",
      "returnType" : {
        "returnType" : "GetResolverQueryLogConfigPolicyResult",
        "documentation" : null
      },
      "syncReturnType" : "GetResolverQueryLogConfigPolicyResult"
    },
    "GetResolverRule" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetResolverRuleResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetResolverRuleResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetResolverRuleRequest, GetResolverRuleResult>",
      "asyncReturnType" : "GetResolverRuleResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Gets information about a specified Resolver rule, such as the domain name that the rule forwards DNS queries for and the ID of the outbound Resolver endpoint that the rule is associated with.</p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetResolverRuleRequest",
        "variableName" : "getResolverRuleRequest",
        "variableType" : "GetResolverRuleRequest",
        "documentation" : "",
        "simpleType" : "GetResolverRuleRequest",
        "variableSetterType" : "GetResolverRuleRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getResolverRule",
      "operationName" : "GetResolverRule",
      "returnType" : {
        "returnType" : "GetResolverRuleResult",
        "documentation" : null
      },
      "syncReturnType" : "GetResolverRuleResult"
    },
    "GetResolverRuleAssociation" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetResolverRuleAssociationResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetResolverRuleAssociationResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetResolverRuleAssociationRequest, GetResolverRuleAssociationResult>",
      "asyncReturnType" : "GetResolverRuleAssociationResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Gets information about an association between a specified Resolver rule and a VPC. You associate a Resolver rule and a VPC using <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverRule.html\">AssociateResolverRule</a>. </p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetResolverRuleAssociationRequest",
        "variableName" : "getResolverRuleAssociationRequest",
        "variableType" : "GetResolverRuleAssociationRequest",
        "documentation" : "",
        "simpleType" : "GetResolverRuleAssociationRequest",
        "variableSetterType" : "GetResolverRuleAssociationRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getResolverRuleAssociation",
      "operationName" : "GetResolverRuleAssociation",
      "returnType" : {
        "returnType" : "GetResolverRuleAssociationResult",
        "documentation" : null
      },
      "syncReturnType" : "GetResolverRuleAssociationResult"
    },
    "GetResolverRulePolicy" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetResolverRulePolicyResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetResolverRulePolicyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetResolverRulePolicyRequest, GetResolverRulePolicyResult>",
      "asyncReturnType" : "GetResolverRulePolicyResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Gets information about the Resolver rule policy for a specified rule. A Resolver rule policy includes the rule that you want to share with another account, the account that you want to share the rule with, and the Resolver operations that you want to allow the account to use. </p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "UnknownResourceException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetResolverRulePolicyRequest",
        "variableName" : "getResolverRulePolicyRequest",
        "variableType" : "GetResolverRulePolicyRequest",
        "documentation" : "",
        "simpleType" : "GetResolverRulePolicyRequest",
        "variableSetterType" : "GetResolverRulePolicyRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getResolverRulePolicy",
      "operationName" : "GetResolverRulePolicy",
      "returnType" : {
        "returnType" : "GetResolverRulePolicyResult",
        "documentation" : null
      },
      "syncReturnType" : "GetResolverRulePolicyResult"
    },
    "ListResolverDnssecConfigs" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListResolverDnssecConfigsResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListResolverDnssecConfigsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListResolverDnssecConfigsRequest, ListResolverDnssecConfigsResult>",
      "asyncReturnType" : "ListResolverDnssecConfigsResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Lists the configurations for DNSSEC validation that are associated with the current AWS account.</p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidNextTokenException",
        "documentation" : "<p>The value that you specified for <code>NextToken</code> in a <code>List</code> request isn't valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>The current account doesn't have the IAM permissions required to perform the specified Resolver operation.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListResolverDnssecConfigsRequest",
        "variableName" : "listResolverDnssecConfigsRequest",
        "variableType" : "ListResolverDnssecConfigsRequest",
        "documentation" : "",
        "simpleType" : "ListResolverDnssecConfigsRequest",
        "variableSetterType" : "ListResolverDnssecConfigsRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listResolverDnssecConfigs",
      "operationName" : "ListResolverDnssecConfigs",
      "returnType" : {
        "returnType" : "ListResolverDnssecConfigsResult",
        "documentation" : null
      },
      "syncReturnType" : "ListResolverDnssecConfigsResult"
    },
    "ListResolverEndpointIpAddresses" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListResolverEndpointIpAddressesResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListResolverEndpointIpAddressesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListResolverEndpointIpAddressesRequest, ListResolverEndpointIpAddressesResult>",
      "asyncReturnType" : "ListResolverEndpointIpAddressesResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Gets the IP addresses for a specified Resolver endpoint.</p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidNextTokenException",
        "documentation" : "<p>The value that you specified for <code>NextToken</code> in a <code>List</code> request isn't valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListResolverEndpointIpAddressesRequest",
        "variableName" : "listResolverEndpointIpAddressesRequest",
        "variableType" : "ListResolverEndpointIpAddressesRequest",
        "documentation" : "",
        "simpleType" : "ListResolverEndpointIpAddressesRequest",
        "variableSetterType" : "ListResolverEndpointIpAddressesRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listResolverEndpointIpAddresses",
      "operationName" : "ListResolverEndpointIpAddresses",
      "returnType" : {
        "returnType" : "ListResolverEndpointIpAddressesResult",
        "documentation" : null
      },
      "syncReturnType" : "ListResolverEndpointIpAddressesResult"
    },
    "ListResolverEndpoints" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListResolverEndpointsResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListResolverEndpointsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListResolverEndpointsRequest, ListResolverEndpointsResult>",
      "asyncReturnType" : "ListResolverEndpointsResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Lists all the Resolver endpoints that were created using the current AWS account.</p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidNextTokenException",
        "documentation" : "<p>The value that you specified for <code>NextToken</code> in a <code>List</code> request isn't valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListResolverEndpointsRequest",
        "variableName" : "listResolverEndpointsRequest",
        "variableType" : "ListResolverEndpointsRequest",
        "documentation" : "",
        "simpleType" : "ListResolverEndpointsRequest",
        "variableSetterType" : "ListResolverEndpointsRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listResolverEndpoints",
      "operationName" : "ListResolverEndpoints",
      "returnType" : {
        "returnType" : "ListResolverEndpointsResult",
        "documentation" : null
      },
      "syncReturnType" : "ListResolverEndpointsResult"
    },
    "ListResolverQueryLogConfigAssociations" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListResolverQueryLogConfigAssociationsResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListResolverQueryLogConfigAssociationsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListResolverQueryLogConfigAssociationsRequest, ListResolverQueryLogConfigAssociationsResult>",
      "asyncReturnType" : "ListResolverQueryLogConfigAssociationsResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Lists information about associations between Amazon VPCs and query logging configurations.</p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>The request caused one or more limits to be exceeded.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>The current account doesn't have the IAM permissions required to perform the specified Resolver operation.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListResolverQueryLogConfigAssociationsRequest",
        "variableName" : "listResolverQueryLogConfigAssociationsRequest",
        "variableType" : "ListResolverQueryLogConfigAssociationsRequest",
        "documentation" : "",
        "simpleType" : "ListResolverQueryLogConfigAssociationsRequest",
        "variableSetterType" : "ListResolverQueryLogConfigAssociationsRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listResolverQueryLogConfigAssociations",
      "operationName" : "ListResolverQueryLogConfigAssociations",
      "returnType" : {
        "returnType" : "ListResolverQueryLogConfigAssociationsResult",
        "documentation" : null
      },
      "syncReturnType" : "ListResolverQueryLogConfigAssociationsResult"
    },
    "ListResolverQueryLogConfigs" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListResolverQueryLogConfigsResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListResolverQueryLogConfigsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListResolverQueryLogConfigsRequest, ListResolverQueryLogConfigsResult>",
      "asyncReturnType" : "ListResolverQueryLogConfigsResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Lists information about the specified query logging configurations. Each configuration defines where you want Resolver to save DNS query logs and specifies the VPCs that you want to log queries for.</p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidNextTokenException",
        "documentation" : "<p>The value that you specified for <code>NextToken</code> in a <code>List</code> request isn't valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>The current account doesn't have the IAM permissions required to perform the specified Resolver operation.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListResolverQueryLogConfigsRequest",
        "variableName" : "listResolverQueryLogConfigsRequest",
        "variableType" : "ListResolverQueryLogConfigsRequest",
        "documentation" : "",
        "simpleType" : "ListResolverQueryLogConfigsRequest",
        "variableSetterType" : "ListResolverQueryLogConfigsRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listResolverQueryLogConfigs",
      "operationName" : "ListResolverQueryLogConfigs",
      "returnType" : {
        "returnType" : "ListResolverQueryLogConfigsResult",
        "documentation" : null
      },
      "syncReturnType" : "ListResolverQueryLogConfigsResult"
    },
    "ListResolverRuleAssociations" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListResolverRuleAssociationsResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListResolverRuleAssociationsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListResolverRuleAssociationsRequest, ListResolverRuleAssociationsResult>",
      "asyncReturnType" : "ListResolverRuleAssociationsResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Lists the associations that were created between Resolver rules and VPCs using the current AWS account.</p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidNextTokenException",
        "documentation" : "<p>The value that you specified for <code>NextToken</code> in a <code>List</code> request isn't valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListResolverRuleAssociationsRequest",
        "variableName" : "listResolverRuleAssociationsRequest",
        "variableType" : "ListResolverRuleAssociationsRequest",
        "documentation" : "",
        "simpleType" : "ListResolverRuleAssociationsRequest",
        "variableSetterType" : "ListResolverRuleAssociationsRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listResolverRuleAssociations",
      "operationName" : "ListResolverRuleAssociations",
      "returnType" : {
        "returnType" : "ListResolverRuleAssociationsResult",
        "documentation" : null
      },
      "syncReturnType" : "ListResolverRuleAssociationsResult"
    },
    "ListResolverRules" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListResolverRulesResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListResolverRulesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListResolverRulesRequest, ListResolverRulesResult>",
      "asyncReturnType" : "ListResolverRulesResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Lists the Resolver rules that were created using the current AWS account.</p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidNextTokenException",
        "documentation" : "<p>The value that you specified for <code>NextToken</code> in a <code>List</code> request isn't valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListResolverRulesRequest",
        "variableName" : "listResolverRulesRequest",
        "variableType" : "ListResolverRulesRequest",
        "documentation" : "",
        "simpleType" : "ListResolverRulesRequest",
        "variableSetterType" : "ListResolverRulesRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listResolverRules",
      "operationName" : "ListResolverRules",
      "returnType" : {
        "returnType" : "ListResolverRulesResult",
        "documentation" : null
      },
      "syncReturnType" : "ListResolverRulesResult"
    },
    "ListTagsForResource" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListTagsForResourceResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListTagsForResourceResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListTagsForResourceRequest, ListTagsForResourceResult>",
      "asyncReturnType" : "ListTagsForResourceResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Lists the tags that you associated with the specified resource.</p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidNextTokenException",
        "documentation" : "<p>The value that you specified for <code>NextToken</code> in a <code>List</code> request isn't valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListTagsForResourceRequest",
        "variableName" : "listTagsForResourceRequest",
        "variableType" : "ListTagsForResourceRequest",
        "documentation" : "",
        "simpleType" : "ListTagsForResourceRequest",
        "variableSetterType" : "ListTagsForResourceRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listTagsForResource",
      "operationName" : "ListTagsForResource",
      "returnType" : {
        "returnType" : "ListTagsForResourceResult",
        "documentation" : null
      },
      "syncReturnType" : "ListTagsForResourceResult"
    },
    "PutResolverQueryLogConfigPolicy" : {
      "asyncCallableType" : "java.util.concurrent.Callable<PutResolverQueryLogConfigPolicyResult>",
      "asyncFutureType" : "java.util.concurrent.Future<PutResolverQueryLogConfigPolicyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<PutResolverQueryLogConfigPolicyRequest, PutResolverQueryLogConfigPolicyResult>",
      "asyncReturnType" : "PutResolverQueryLogConfigPolicyResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Specifies an AWS account that you want to share a query logging configuration with, the query logging configuration that you want to share, and the operations that you want the account to be able to perform on the configuration.</p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidPolicyDocumentException",
        "documentation" : "<p>The specified Resolver rule policy is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "UnknownResourceException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>The current account doesn't have the IAM permissions required to perform the specified Resolver operation.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "PutResolverQueryLogConfigPolicyRequest",
        "variableName" : "putResolverQueryLogConfigPolicyRequest",
        "variableType" : "PutResolverQueryLogConfigPolicyRequest",
        "documentation" : "",
        "simpleType" : "PutResolverQueryLogConfigPolicyRequest",
        "variableSetterType" : "PutResolverQueryLogConfigPolicyRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "putResolverQueryLogConfigPolicy",
      "operationName" : "PutResolverQueryLogConfigPolicy",
      "returnType" : {
        "returnType" : "PutResolverQueryLogConfigPolicyResult",
        "documentation" : "<p>The response to a <code>PutResolverQueryLogConfigPolicy</code> request.</p>"
      },
      "syncReturnType" : "PutResolverQueryLogConfigPolicyResult"
    },
    "PutResolverRulePolicy" : {
      "asyncCallableType" : "java.util.concurrent.Callable<PutResolverRulePolicyResult>",
      "asyncFutureType" : "java.util.concurrent.Future<PutResolverRulePolicyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<PutResolverRulePolicyRequest, PutResolverRulePolicyResult>",
      "asyncReturnType" : "PutResolverRulePolicyResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Specifies an AWS rule that you want to share with another account, the account that you want to share the rule with, and the operations that you want the account to be able to perform on the rule.</p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidPolicyDocumentException",
        "documentation" : "<p>The specified Resolver rule policy is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "UnknownResourceException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "PutResolverRulePolicyRequest",
        "variableName" : "putResolverRulePolicyRequest",
        "variableType" : "PutResolverRulePolicyRequest",
        "documentation" : "",
        "simpleType" : "PutResolverRulePolicyRequest",
        "variableSetterType" : "PutResolverRulePolicyRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "putResolverRulePolicy",
      "operationName" : "PutResolverRulePolicy",
      "returnType" : {
        "returnType" : "PutResolverRulePolicyResult",
        "documentation" : "<p>The response to a <code>PutResolverRulePolicy</code> request.</p>"
      },
      "syncReturnType" : "PutResolverRulePolicyResult"
    },
    "TagResource" : {
      "asyncCallableType" : "java.util.concurrent.Callable<TagResourceResult>",
      "asyncFutureType" : "java.util.concurrent.Future<TagResourceResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<TagResourceRequest, TagResourceResult>",
      "asyncReturnType" : "TagResourceResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Adds one or more tags to a specified resource.</p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>The request caused one or more limits to be exceeded.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidTagException",
        "documentation" : "<p>The specified tag is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "TagResourceRequest",
        "variableName" : "tagResourceRequest",
        "variableType" : "TagResourceRequest",
        "documentation" : "",
        "simpleType" : "TagResourceRequest",
        "variableSetterType" : "TagResourceRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "tagResource",
      "operationName" : "TagResource",
      "returnType" : {
        "returnType" : "TagResourceResult",
        "documentation" : null
      },
      "syncReturnType" : "TagResourceResult"
    },
    "UntagResource" : {
      "asyncCallableType" : "java.util.concurrent.Callable<UntagResourceResult>",
      "asyncFutureType" : "java.util.concurrent.Future<UntagResourceResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<UntagResourceRequest, UntagResourceResult>",
      "asyncReturnType" : "UntagResourceResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Removes one or more tags from a specified resource.</p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UntagResourceRequest",
        "variableName" : "untagResourceRequest",
        "variableType" : "UntagResourceRequest",
        "documentation" : "",
        "simpleType" : "UntagResourceRequest",
        "variableSetterType" : "UntagResourceRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "untagResource",
      "operationName" : "UntagResource",
      "returnType" : {
        "returnType" : "UntagResourceResult",
        "documentation" : null
      },
      "syncReturnType" : "UntagResourceResult"
    },
    "UpdateResolverDnssecConfig" : {
      "asyncCallableType" : "java.util.concurrent.Callable<UpdateResolverDnssecConfigResult>",
      "asyncFutureType" : "java.util.concurrent.Future<UpdateResolverDnssecConfigResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<UpdateResolverDnssecConfigRequest, UpdateResolverDnssecConfigResult>",
      "asyncReturnType" : "UpdateResolverDnssecConfigResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Updates an existing DNSSEC validation configuration. If there is no existing DNSSEC validation configuration, one is created.</p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>The current account doesn't have the IAM permissions required to perform the specified Resolver operation.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UpdateResolverDnssecConfigRequest",
        "variableName" : "updateResolverDnssecConfigRequest",
        "variableType" : "UpdateResolverDnssecConfigRequest",
        "documentation" : "",
        "simpleType" : "UpdateResolverDnssecConfigRequest",
        "variableSetterType" : "UpdateResolverDnssecConfigRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "updateResolverDnssecConfig",
      "operationName" : "UpdateResolverDnssecConfig",
      "returnType" : {
        "returnType" : "UpdateResolverDnssecConfigResult",
        "documentation" : null
      },
      "syncReturnType" : "UpdateResolverDnssecConfigResult"
    },
    "UpdateResolverEndpoint" : {
      "asyncCallableType" : "java.util.concurrent.Callable<UpdateResolverEndpointResult>",
      "asyncFutureType" : "java.util.concurrent.Future<UpdateResolverEndpointResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<UpdateResolverEndpointRequest, UpdateResolverEndpointResult>",
      "asyncReturnType" : "UpdateResolverEndpointResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Updates the name of an inbound or an outbound Resolver endpoint. </p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UpdateResolverEndpointRequest",
        "variableName" : "updateResolverEndpointRequest",
        "variableType" : "UpdateResolverEndpointRequest",
        "documentation" : "",
        "simpleType" : "UpdateResolverEndpointRequest",
        "variableSetterType" : "UpdateResolverEndpointRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "updateResolverEndpoint",
      "operationName" : "UpdateResolverEndpoint",
      "returnType" : {
        "returnType" : "UpdateResolverEndpointResult",
        "documentation" : null
      },
      "syncReturnType" : "UpdateResolverEndpointResult"
    },
    "UpdateResolverRule" : {
      "asyncCallableType" : "java.util.concurrent.Callable<UpdateResolverRuleResult>",
      "asyncFutureType" : "java.util.concurrent.Future<UpdateResolverRuleResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<UpdateResolverRuleRequest, UpdateResolverRuleResult>",
      "asyncReturnType" : "UpdateResolverRuleResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Updates settings for a specified Resolver rule. <code>ResolverRuleId</code> is required, and all other parameters are optional. If you don't specify a parameter, it retains its current value.</p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceUnavailableException",
        "documentation" : "<p>The specified resource isn't available.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>The request caused one or more limits to be exceeded.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UpdateResolverRuleRequest",
        "variableName" : "updateResolverRuleRequest",
        "variableType" : "UpdateResolverRuleRequest",
        "documentation" : "",
        "simpleType" : "UpdateResolverRuleRequest",
        "variableSetterType" : "UpdateResolverRuleRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "updateResolverRule",
      "operationName" : "UpdateResolverRule",
      "returnType" : {
        "returnType" : "UpdateResolverRuleResult",
        "documentation" : null
      },
      "syncReturnType" : "UpdateResolverRuleResult"
    }
  },
  "shapes" : {
    "AccessDeniedException" : {
      "c2jName" : "AccessDeniedException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The current account doesn't have the IAM permissions required to perform the specified Resolver operation.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : "AccessDeniedException",
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.exception.AccessDeniedException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.route53resolver.exception",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "AccessDeniedException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "AccessDeniedException",
        "variableName" : "accessDeniedException",
        "variableType" : "AccessDeniedException",
        "documentation" : null,
        "simpleType" : "AccessDeniedException",
        "variableSetterType" : "AccessDeniedException"
      },
      "wrapper" : false
    },
    "AssociateResolverEndpointIpAddressRequest" : {
      "c2jName" : "AssociateResolverEndpointIpAddressRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.request.AssociateResolverEndpointIpAddressRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "AssociateResolverEndpointIpAddress",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.AssociateResolverEndpointIpAddress",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResolverEndpointId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the Resolver endpoint that you want to associate IP addresses with.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to associate IP addresses with.</p>\n@param resolverEndpointId The ID of the Resolver endpoint that you want to associate IP addresses with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverEndpointId",
        "getterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to associate IP addresses with.</p>\n@return The ID of the Resolver endpoint that you want to associate IP addresses with.*/",
        "getterMethodName" : "getResolverEndpointId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverEndpointId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverEndpointId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverEndpointId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to associate IP addresses with.</p>\n@param resolverEndpointId The ID of the Resolver endpoint that you want to associate IP addresses with.*/",
        "setterMethodName" : "setResolverEndpointId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverEndpointId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to associate IP addresses with.</p>\n@param resolverEndpointId The ID of the Resolver endpoint that you want to associate IP addresses with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverEndpointId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the Resolver endpoint that you want to associate IP addresses with.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "IpAddress",
        "c2jShape" : "IpAddressUpdate",
        "deprecated" : false,
        "documentation" : "<p>Either the IPv4 address that you want to add to a Resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Either the IPv4 address that you want to add to a Resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.</p>\n@param ipAddress Either the IPv4 address that you want to add to a Resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withIpAddress",
        "getterDocumentation" : "/**<p>Either the IPv4 address that you want to add to a Resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.</p>\n@return Either the IPv4 address that you want to add to a Resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.*/",
        "getterMethodName" : "getIpAddress",
        "getterModel" : {
          "returnType" : "IpAddressUpdate",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "IpAddress",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "IpAddress",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "IpAddress",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Either the IPv4 address that you want to add to a Resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.</p>\n@param ipAddress Either the IPv4 address that you want to add to a Resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.*/",
        "setterMethodName" : "setIpAddress",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "IpAddressUpdate",
          "variableName" : "ipAddress",
          "variableType" : "IpAddressUpdate",
          "documentation" : "",
          "simpleType" : "IpAddressUpdate",
          "variableSetterType" : "IpAddressUpdate"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Either the IPv4 address that you want to add to a Resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.</p>\n@param ipAddress Either the IPv4 address that you want to add to a Resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "IpAddressUpdate",
          "variableName" : "ipAddress",
          "variableType" : "IpAddressUpdate",
          "documentation" : "<p>Either the IPv4 address that you want to add to a Resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.</p>",
          "simpleType" : "IpAddressUpdate",
          "variableSetterType" : "IpAddressUpdate"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "IpAddress" : {
          "c2jName" : "IpAddress",
          "c2jShape" : "IpAddressUpdate",
          "deprecated" : false,
          "documentation" : "<p>Either the IPv4 address that you want to add to a Resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Either the IPv4 address that you want to add to a Resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.</p>\n@param ipAddress Either the IPv4 address that you want to add to a Resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withIpAddress",
          "getterDocumentation" : "/**<p>Either the IPv4 address that you want to add to a Resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.</p>\n@return Either the IPv4 address that you want to add to a Resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.*/",
          "getterMethodName" : "getIpAddress",
          "getterModel" : {
            "returnType" : "IpAddressUpdate",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "IpAddress",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "IpAddress",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "IpAddress",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Either the IPv4 address that you want to add to a Resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.</p>\n@param ipAddress Either the IPv4 address that you want to add to a Resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.*/",
          "setterMethodName" : "setIpAddress",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "IpAddressUpdate",
            "variableName" : "ipAddress",
            "variableType" : "IpAddressUpdate",
            "documentation" : "",
            "simpleType" : "IpAddressUpdate",
            "variableSetterType" : "IpAddressUpdate"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Either the IPv4 address that you want to add to a Resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.</p>\n@param ipAddress Either the IPv4 address that you want to add to a Resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "IpAddressUpdate",
            "variableName" : "ipAddress",
            "variableType" : "IpAddressUpdate",
            "documentation" : "<p>Either the IPv4 address that you want to add to a Resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.</p>",
            "simpleType" : "IpAddressUpdate",
            "variableSetterType" : "IpAddressUpdate"
          },
          "xmlNameSpaceUri" : null
        },
        "ResolverEndpointId" : {
          "c2jName" : "ResolverEndpointId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the Resolver endpoint that you want to associate IP addresses with.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to associate IP addresses with.</p>\n@param resolverEndpointId The ID of the Resolver endpoint that you want to associate IP addresses with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverEndpointId",
          "getterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to associate IP addresses with.</p>\n@return The ID of the Resolver endpoint that you want to associate IP addresses with.*/",
          "getterMethodName" : "getResolverEndpointId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverEndpointId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverEndpointId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverEndpointId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to associate IP addresses with.</p>\n@param resolverEndpointId The ID of the Resolver endpoint that you want to associate IP addresses with.*/",
          "setterMethodName" : "setResolverEndpointId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverEndpointId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to associate IP addresses with.</p>\n@param resolverEndpointId The ID of the Resolver endpoint that you want to associate IP addresses with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverEndpointId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the Resolver endpoint that you want to associate IP addresses with.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResolverEndpointId", "IpAddress" ],
      "shapeName" : "AssociateResolverEndpointIpAddressRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "AssociateResolverEndpointIpAddressRequest",
        "variableName" : "associateResolverEndpointIpAddressRequest",
        "variableType" : "AssociateResolverEndpointIpAddressRequest",
        "documentation" : null,
        "simpleType" : "AssociateResolverEndpointIpAddressRequest",
        "variableSetterType" : "AssociateResolverEndpointIpAddressRequest"
      },
      "wrapper" : false
    },
    "AssociateResolverEndpointIpAddressResult" : {
      "c2jName" : "AssociateResolverEndpointIpAddressResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.response.AssociateResolverEndpointIpAddressResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResolverEndpoint",
        "c2jShape" : "ResolverEndpoint",
        "deprecated" : false,
        "documentation" : "<p>The response to an <code>AssociateResolverEndpointIpAddress</code> request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The response to an <code>AssociateResolverEndpointIpAddress</code> request.</p>\n@param resolverEndpoint The response to an <code>AssociateResolverEndpointIpAddress</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverEndpoint",
        "getterDocumentation" : "/**<p>The response to an <code>AssociateResolverEndpointIpAddress</code> request.</p>\n@return The response to an <code>AssociateResolverEndpointIpAddress</code> request.*/",
        "getterMethodName" : "getResolverEndpoint",
        "getterModel" : {
          "returnType" : "ResolverEndpoint",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverEndpoint",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverEndpoint",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ResolverEndpoint",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The response to an <code>AssociateResolverEndpointIpAddress</code> request.</p>\n@param resolverEndpoint The response to an <code>AssociateResolverEndpointIpAddress</code> request.*/",
        "setterMethodName" : "setResolverEndpoint",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverEndpoint",
          "variableName" : "resolverEndpoint",
          "variableType" : "ResolverEndpoint",
          "documentation" : "",
          "simpleType" : "ResolverEndpoint",
          "variableSetterType" : "ResolverEndpoint"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The response to an <code>AssociateResolverEndpointIpAddress</code> request.</p>\n@param resolverEndpoint The response to an <code>AssociateResolverEndpointIpAddress</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverEndpoint",
          "variableName" : "resolverEndpoint",
          "variableType" : "ResolverEndpoint",
          "documentation" : "<p>The response to an <code>AssociateResolverEndpointIpAddress</code> request.</p>",
          "simpleType" : "ResolverEndpoint",
          "variableSetterType" : "ResolverEndpoint"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverEndpoint" : {
          "c2jName" : "ResolverEndpoint",
          "c2jShape" : "ResolverEndpoint",
          "deprecated" : false,
          "documentation" : "<p>The response to an <code>AssociateResolverEndpointIpAddress</code> request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The response to an <code>AssociateResolverEndpointIpAddress</code> request.</p>\n@param resolverEndpoint The response to an <code>AssociateResolverEndpointIpAddress</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverEndpoint",
          "getterDocumentation" : "/**<p>The response to an <code>AssociateResolverEndpointIpAddress</code> request.</p>\n@return The response to an <code>AssociateResolverEndpointIpAddress</code> request.*/",
          "getterMethodName" : "getResolverEndpoint",
          "getterModel" : {
            "returnType" : "ResolverEndpoint",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverEndpoint",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverEndpoint",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ResolverEndpoint",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The response to an <code>AssociateResolverEndpointIpAddress</code> request.</p>\n@param resolverEndpoint The response to an <code>AssociateResolverEndpointIpAddress</code> request.*/",
          "setterMethodName" : "setResolverEndpoint",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverEndpoint",
            "variableName" : "resolverEndpoint",
            "variableType" : "ResolverEndpoint",
            "documentation" : "",
            "simpleType" : "ResolverEndpoint",
            "variableSetterType" : "ResolverEndpoint"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The response to an <code>AssociateResolverEndpointIpAddress</code> request.</p>\n@param resolverEndpoint The response to an <code>AssociateResolverEndpointIpAddress</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverEndpoint",
            "variableName" : "resolverEndpoint",
            "variableType" : "ResolverEndpoint",
            "documentation" : "<p>The response to an <code>AssociateResolverEndpointIpAddress</code> request.</p>",
            "simpleType" : "ResolverEndpoint",
            "variableSetterType" : "ResolverEndpoint"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "AssociateResolverEndpointIpAddressResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "AssociateResolverEndpointIpAddressResult",
        "variableName" : "associateResolverEndpointIpAddressResult",
        "variableType" : "AssociateResolverEndpointIpAddressResult",
        "documentation" : null,
        "simpleType" : "AssociateResolverEndpointIpAddressResult",
        "variableSetterType" : "AssociateResolverEndpointIpAddressResult"
      },
      "wrapper" : false
    },
    "AssociateResolverQueryLogConfigRequest" : {
      "c2jName" : "AssociateResolverQueryLogConfigRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.request.AssociateResolverQueryLogConfigRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "AssociateResolverQueryLogConfig",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.AssociateResolverQueryLogConfig",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResolverQueryLogConfigId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the query logging configuration that you want to associate a VPC with.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the query logging configuration that you want to associate a VPC with.</p>\n@param resolverQueryLogConfigId The ID of the query logging configuration that you want to associate a VPC with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverQueryLogConfigId",
        "getterDocumentation" : "/**<p>The ID of the query logging configuration that you want to associate a VPC with.</p>\n@return The ID of the query logging configuration that you want to associate a VPC with.*/",
        "getterMethodName" : "getResolverQueryLogConfigId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverQueryLogConfigId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverQueryLogConfigId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverQueryLogConfigId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the query logging configuration that you want to associate a VPC with.</p>\n@param resolverQueryLogConfigId The ID of the query logging configuration that you want to associate a VPC with.*/",
        "setterMethodName" : "setResolverQueryLogConfigId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverQueryLogConfigId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the query logging configuration that you want to associate a VPC with.</p>\n@param resolverQueryLogConfigId The ID of the query logging configuration that you want to associate a VPC with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverQueryLogConfigId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the query logging configuration that you want to associate a VPC with.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ResourceId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of an Amazon VPC that you want this query logging configuration to log queries for.</p> <note> <p>The VPCs and the query logging configuration must be in the same Region.</p> </note>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of an Amazon VPC that you want this query logging configuration to log queries for.</p> <note> <p>The VPCs and the query logging configuration must be in the same Region.</p> </note>\n@param resourceId The ID of an Amazon VPC that you want this query logging configuration to log queries for.</p> <note> <p>The VPCs and the query logging configuration must be in the same Region.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceId",
        "getterDocumentation" : "/**<p>The ID of an Amazon VPC that you want this query logging configuration to log queries for.</p> <note> <p>The VPCs and the query logging configuration must be in the same Region.</p> </note>\n@return The ID of an Amazon VPC that you want this query logging configuration to log queries for.</p> <note> <p>The VPCs and the query logging configuration must be in the same Region.</p>*/",
        "getterMethodName" : "getResourceId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of an Amazon VPC that you want this query logging configuration to log queries for.</p> <note> <p>The VPCs and the query logging configuration must be in the same Region.</p> </note>\n@param resourceId The ID of an Amazon VPC that you want this query logging configuration to log queries for.</p> <note> <p>The VPCs and the query logging configuration must be in the same Region.</p>*/",
        "setterMethodName" : "setResourceId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of an Amazon VPC that you want this query logging configuration to log queries for.</p> <note> <p>The VPCs and the query logging configuration must be in the same Region.</p> </note>\n@param resourceId The ID of an Amazon VPC that you want this query logging configuration to log queries for.</p> <note> <p>The VPCs and the query logging configuration must be in the same Region.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceId",
          "variableType" : "String",
          "documentation" : "<p>The ID of an Amazon VPC that you want this query logging configuration to log queries for.</p> <note> <p>The VPCs and the query logging configuration must be in the same Region.</p> </note>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverQueryLogConfigId" : {
          "c2jName" : "ResolverQueryLogConfigId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the query logging configuration that you want to associate a VPC with.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the query logging configuration that you want to associate a VPC with.</p>\n@param resolverQueryLogConfigId The ID of the query logging configuration that you want to associate a VPC with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverQueryLogConfigId",
          "getterDocumentation" : "/**<p>The ID of the query logging configuration that you want to associate a VPC with.</p>\n@return The ID of the query logging configuration that you want to associate a VPC with.*/",
          "getterMethodName" : "getResolverQueryLogConfigId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverQueryLogConfigId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverQueryLogConfigId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverQueryLogConfigId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the query logging configuration that you want to associate a VPC with.</p>\n@param resolverQueryLogConfigId The ID of the query logging configuration that you want to associate a VPC with.*/",
          "setterMethodName" : "setResolverQueryLogConfigId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverQueryLogConfigId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the query logging configuration that you want to associate a VPC with.</p>\n@param resolverQueryLogConfigId The ID of the query logging configuration that you want to associate a VPC with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverQueryLogConfigId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the query logging configuration that you want to associate a VPC with.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResourceId" : {
          "c2jName" : "ResourceId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of an Amazon VPC that you want this query logging configuration to log queries for.</p> <note> <p>The VPCs and the query logging configuration must be in the same Region.</p> </note>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of an Amazon VPC that you want this query logging configuration to log queries for.</p> <note> <p>The VPCs and the query logging configuration must be in the same Region.</p> </note>\n@param resourceId The ID of an Amazon VPC that you want this query logging configuration to log queries for.</p> <note> <p>The VPCs and the query logging configuration must be in the same Region.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceId",
          "getterDocumentation" : "/**<p>The ID of an Amazon VPC that you want this query logging configuration to log queries for.</p> <note> <p>The VPCs and the query logging configuration must be in the same Region.</p> </note>\n@return The ID of an Amazon VPC that you want this query logging configuration to log queries for.</p> <note> <p>The VPCs and the query logging configuration must be in the same Region.</p>*/",
          "getterMethodName" : "getResourceId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of an Amazon VPC that you want this query logging configuration to log queries for.</p> <note> <p>The VPCs and the query logging configuration must be in the same Region.</p> </note>\n@param resourceId The ID of an Amazon VPC that you want this query logging configuration to log queries for.</p> <note> <p>The VPCs and the query logging configuration must be in the same Region.</p>*/",
          "setterMethodName" : "setResourceId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of an Amazon VPC that you want this query logging configuration to log queries for.</p> <note> <p>The VPCs and the query logging configuration must be in the same Region.</p> </note>\n@param resourceId The ID of an Amazon VPC that you want this query logging configuration to log queries for.</p> <note> <p>The VPCs and the query logging configuration must be in the same Region.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceId",
            "variableType" : "String",
            "documentation" : "<p>The ID of an Amazon VPC that you want this query logging configuration to log queries for.</p> <note> <p>The VPCs and the query logging configuration must be in the same Region.</p> </note>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResolverQueryLogConfigId", "ResourceId" ],
      "shapeName" : "AssociateResolverQueryLogConfigRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "AssociateResolverQueryLogConfigRequest",
        "variableName" : "associateResolverQueryLogConfigRequest",
        "variableType" : "AssociateResolverQueryLogConfigRequest",
        "documentation" : null,
        "simpleType" : "AssociateResolverQueryLogConfigRequest",
        "variableSetterType" : "AssociateResolverQueryLogConfigRequest"
      },
      "wrapper" : false
    },
    "AssociateResolverQueryLogConfigResult" : {
      "c2jName" : "AssociateResolverQueryLogConfigResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.response.AssociateResolverQueryLogConfigResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResolverQueryLogConfigAssociation",
        "c2jShape" : "ResolverQueryLogConfigAssociation",
        "deprecated" : false,
        "documentation" : "<p>A complex type that contains settings for a specified association between an Amazon VPC and a query logging configuration.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A complex type that contains settings for a specified association between an Amazon VPC and a query logging configuration.</p>\n@param resolverQueryLogConfigAssociation A complex type that contains settings for a specified association between an Amazon VPC and a query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverQueryLogConfigAssociation",
        "getterDocumentation" : "/**<p>A complex type that contains settings for a specified association between an Amazon VPC and a query logging configuration.</p>\n@return A complex type that contains settings for a specified association between an Amazon VPC and a query logging configuration.*/",
        "getterMethodName" : "getResolverQueryLogConfigAssociation",
        "getterModel" : {
          "returnType" : "ResolverQueryLogConfigAssociation",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverQueryLogConfigAssociation",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverQueryLogConfigAssociation",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ResolverQueryLogConfigAssociation",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A complex type that contains settings for a specified association between an Amazon VPC and a query logging configuration.</p>\n@param resolverQueryLogConfigAssociation A complex type that contains settings for a specified association between an Amazon VPC and a query logging configuration.*/",
        "setterMethodName" : "setResolverQueryLogConfigAssociation",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverQueryLogConfigAssociation",
          "variableName" : "resolverQueryLogConfigAssociation",
          "variableType" : "ResolverQueryLogConfigAssociation",
          "documentation" : "",
          "simpleType" : "ResolverQueryLogConfigAssociation",
          "variableSetterType" : "ResolverQueryLogConfigAssociation"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A complex type that contains settings for a specified association between an Amazon VPC and a query logging configuration.</p>\n@param resolverQueryLogConfigAssociation A complex type that contains settings for a specified association between an Amazon VPC and a query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverQueryLogConfigAssociation",
          "variableName" : "resolverQueryLogConfigAssociation",
          "variableType" : "ResolverQueryLogConfigAssociation",
          "documentation" : "<p>A complex type that contains settings for a specified association between an Amazon VPC and a query logging configuration.</p>",
          "simpleType" : "ResolverQueryLogConfigAssociation",
          "variableSetterType" : "ResolverQueryLogConfigAssociation"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverQueryLogConfigAssociation" : {
          "c2jName" : "ResolverQueryLogConfigAssociation",
          "c2jShape" : "ResolverQueryLogConfigAssociation",
          "deprecated" : false,
          "documentation" : "<p>A complex type that contains settings for a specified association between an Amazon VPC and a query logging configuration.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A complex type that contains settings for a specified association between an Amazon VPC and a query logging configuration.</p>\n@param resolverQueryLogConfigAssociation A complex type that contains settings for a specified association between an Amazon VPC and a query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverQueryLogConfigAssociation",
          "getterDocumentation" : "/**<p>A complex type that contains settings for a specified association between an Amazon VPC and a query logging configuration.</p>\n@return A complex type that contains settings for a specified association between an Amazon VPC and a query logging configuration.*/",
          "getterMethodName" : "getResolverQueryLogConfigAssociation",
          "getterModel" : {
            "returnType" : "ResolverQueryLogConfigAssociation",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverQueryLogConfigAssociation",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverQueryLogConfigAssociation",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ResolverQueryLogConfigAssociation",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A complex type that contains settings for a specified association between an Amazon VPC and a query logging configuration.</p>\n@param resolverQueryLogConfigAssociation A complex type that contains settings for a specified association between an Amazon VPC and a query logging configuration.*/",
          "setterMethodName" : "setResolverQueryLogConfigAssociation",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverQueryLogConfigAssociation",
            "variableName" : "resolverQueryLogConfigAssociation",
            "variableType" : "ResolverQueryLogConfigAssociation",
            "documentation" : "",
            "simpleType" : "ResolverQueryLogConfigAssociation",
            "variableSetterType" : "ResolverQueryLogConfigAssociation"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A complex type that contains settings for a specified association between an Amazon VPC and a query logging configuration.</p>\n@param resolverQueryLogConfigAssociation A complex type that contains settings for a specified association between an Amazon VPC and a query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverQueryLogConfigAssociation",
            "variableName" : "resolverQueryLogConfigAssociation",
            "variableType" : "ResolverQueryLogConfigAssociation",
            "documentation" : "<p>A complex type that contains settings for a specified association between an Amazon VPC and a query logging configuration.</p>",
            "simpleType" : "ResolverQueryLogConfigAssociation",
            "variableSetterType" : "ResolverQueryLogConfigAssociation"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "AssociateResolverQueryLogConfigResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "AssociateResolverQueryLogConfigResult",
        "variableName" : "associateResolverQueryLogConfigResult",
        "variableType" : "AssociateResolverQueryLogConfigResult",
        "documentation" : null,
        "simpleType" : "AssociateResolverQueryLogConfigResult",
        "variableSetterType" : "AssociateResolverQueryLogConfigResult"
      },
      "wrapper" : false
    },
    "AssociateResolverRuleRequest" : {
      "c2jName" : "AssociateResolverRuleRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.request.AssociateResolverRuleRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "AssociateResolverRule",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.AssociateResolverRule",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResolverRuleId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the Resolver rule that you want to associate with the VPC. To list the existing Resolver rules, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the Resolver rule that you want to associate with the VPC. To list the existing Resolver rules, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>.</p>\n@param resolverRuleId The ID of the Resolver rule that you want to associate with the VPC. To list the existing Resolver rules, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverRuleId",
        "getterDocumentation" : "/**<p>The ID of the Resolver rule that you want to associate with the VPC. To list the existing Resolver rules, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>.</p>\n@return The ID of the Resolver rule that you want to associate with the VPC. To list the existing Resolver rules, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>.*/",
        "getterMethodName" : "getResolverRuleId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverRuleId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverRuleId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverRuleId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the Resolver rule that you want to associate with the VPC. To list the existing Resolver rules, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>.</p>\n@param resolverRuleId The ID of the Resolver rule that you want to associate with the VPC. To list the existing Resolver rules, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>.*/",
        "setterMethodName" : "setResolverRuleId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverRuleId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the Resolver rule that you want to associate with the VPC. To list the existing Resolver rules, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>.</p>\n@param resolverRuleId The ID of the Resolver rule that you want to associate with the VPC. To list the existing Resolver rules, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverRuleId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the Resolver rule that you want to associate with the VPC. To list the existing Resolver rules, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Name",
        "c2jShape" : "Name",
        "deprecated" : false,
        "documentation" : "<p>A name for the association that you're creating between a Resolver rule and a VPC.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A name for the association that you're creating between a Resolver rule and a VPC.</p>\n@param name A name for the association that you're creating between a Resolver rule and a VPC.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>A name for the association that you're creating between a Resolver rule and a VPC.</p>\n@return A name for the association that you're creating between a Resolver rule and a VPC.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Name",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A name for the association that you're creating between a Resolver rule and a VPC.</p>\n@param name A name for the association that you're creating between a Resolver rule and a VPC.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A name for the association that you're creating between a Resolver rule and a VPC.</p>\n@param name A name for the association that you're creating between a Resolver rule and a VPC.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>A name for the association that you're creating between a Resolver rule and a VPC.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "VPCId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the VPC that you want to associate the Resolver rule with.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the VPC that you want to associate the Resolver rule with.</p>\n@param vPCId The ID of the VPC that you want to associate the Resolver rule with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withVPCId",
        "getterDocumentation" : "/**<p>The ID of the VPC that you want to associate the Resolver rule with.</p>\n@return The ID of the VPC that you want to associate the Resolver rule with.*/",
        "getterMethodName" : "getVPCId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "VPCId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "VPCId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "VPCId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the VPC that you want to associate the Resolver rule with.</p>\n@param vPCId The ID of the VPC that you want to associate the Resolver rule with.*/",
        "setterMethodName" : "setVPCId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "vPCId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the VPC that you want to associate the Resolver rule with.</p>\n@param vPCId The ID of the VPC that you want to associate the Resolver rule with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "vPCId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the VPC that you want to associate the Resolver rule with.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "Name",
          "deprecated" : false,
          "documentation" : "<p>A name for the association that you're creating between a Resolver rule and a VPC.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A name for the association that you're creating between a Resolver rule and a VPC.</p>\n@param name A name for the association that you're creating between a Resolver rule and a VPC.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>A name for the association that you're creating between a Resolver rule and a VPC.</p>\n@return A name for the association that you're creating between a Resolver rule and a VPC.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Name",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A name for the association that you're creating between a Resolver rule and a VPC.</p>\n@param name A name for the association that you're creating between a Resolver rule and a VPC.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A name for the association that you're creating between a Resolver rule and a VPC.</p>\n@param name A name for the association that you're creating between a Resolver rule and a VPC.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>A name for the association that you're creating between a Resolver rule and a VPC.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResolverRuleId" : {
          "c2jName" : "ResolverRuleId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the Resolver rule that you want to associate with the VPC. To list the existing Resolver rules, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the Resolver rule that you want to associate with the VPC. To list the existing Resolver rules, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>.</p>\n@param resolverRuleId The ID of the Resolver rule that you want to associate with the VPC. To list the existing Resolver rules, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverRuleId",
          "getterDocumentation" : "/**<p>The ID of the Resolver rule that you want to associate with the VPC. To list the existing Resolver rules, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>.</p>\n@return The ID of the Resolver rule that you want to associate with the VPC. To list the existing Resolver rules, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>.*/",
          "getterMethodName" : "getResolverRuleId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverRuleId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverRuleId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverRuleId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the Resolver rule that you want to associate with the VPC. To list the existing Resolver rules, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>.</p>\n@param resolverRuleId The ID of the Resolver rule that you want to associate with the VPC. To list the existing Resolver rules, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>.*/",
          "setterMethodName" : "setResolverRuleId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverRuleId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the Resolver rule that you want to associate with the VPC. To list the existing Resolver rules, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>.</p>\n@param resolverRuleId The ID of the Resolver rule that you want to associate with the VPC. To list the existing Resolver rules, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverRuleId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the Resolver rule that you want to associate with the VPC. To list the existing Resolver rules, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "VPCId" : {
          "c2jName" : "VPCId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the VPC that you want to associate the Resolver rule with.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the VPC that you want to associate the Resolver rule with.</p>\n@param vPCId The ID of the VPC that you want to associate the Resolver rule with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withVPCId",
          "getterDocumentation" : "/**<p>The ID of the VPC that you want to associate the Resolver rule with.</p>\n@return The ID of the VPC that you want to associate the Resolver rule with.*/",
          "getterMethodName" : "getVPCId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "VPCId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "VPCId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "VPCId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the VPC that you want to associate the Resolver rule with.</p>\n@param vPCId The ID of the VPC that you want to associate the Resolver rule with.*/",
          "setterMethodName" : "setVPCId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "vPCId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the VPC that you want to associate the Resolver rule with.</p>\n@param vPCId The ID of the VPC that you want to associate the Resolver rule with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "vPCId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the VPC that you want to associate the Resolver rule with.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResolverRuleId", "VPCId" ],
      "shapeName" : "AssociateResolverRuleRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "AssociateResolverRuleRequest",
        "variableName" : "associateResolverRuleRequest",
        "variableType" : "AssociateResolverRuleRequest",
        "documentation" : null,
        "simpleType" : "AssociateResolverRuleRequest",
        "variableSetterType" : "AssociateResolverRuleRequest"
      },
      "wrapper" : false
    },
    "AssociateResolverRuleResult" : {
      "c2jName" : "AssociateResolverRuleResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.response.AssociateResolverRuleResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResolverRuleAssociation",
        "c2jShape" : "ResolverRuleAssociation",
        "deprecated" : false,
        "documentation" : "<p>Information about the <code>AssociateResolverRule</code> request, including the status of the request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the <code>AssociateResolverRule</code> request, including the status of the request.</p>\n@param resolverRuleAssociation Information about the <code>AssociateResolverRule</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverRuleAssociation",
        "getterDocumentation" : "/**<p>Information about the <code>AssociateResolverRule</code> request, including the status of the request.</p>\n@return Information about the <code>AssociateResolverRule</code> request, including the status of the request.*/",
        "getterMethodName" : "getResolverRuleAssociation",
        "getterModel" : {
          "returnType" : "ResolverRuleAssociation",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverRuleAssociation",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverRuleAssociation",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ResolverRuleAssociation",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Information about the <code>AssociateResolverRule</code> request, including the status of the request.</p>\n@param resolverRuleAssociation Information about the <code>AssociateResolverRule</code> request, including the status of the request.*/",
        "setterMethodName" : "setResolverRuleAssociation",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverRuleAssociation",
          "variableName" : "resolverRuleAssociation",
          "variableType" : "ResolverRuleAssociation",
          "documentation" : "",
          "simpleType" : "ResolverRuleAssociation",
          "variableSetterType" : "ResolverRuleAssociation"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the <code>AssociateResolverRule</code> request, including the status of the request.</p>\n@param resolverRuleAssociation Information about the <code>AssociateResolverRule</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverRuleAssociation",
          "variableName" : "resolverRuleAssociation",
          "variableType" : "ResolverRuleAssociation",
          "documentation" : "<p>Information about the <code>AssociateResolverRule</code> request, including the status of the request.</p>",
          "simpleType" : "ResolverRuleAssociation",
          "variableSetterType" : "ResolverRuleAssociation"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverRuleAssociation" : {
          "c2jName" : "ResolverRuleAssociation",
          "c2jShape" : "ResolverRuleAssociation",
          "deprecated" : false,
          "documentation" : "<p>Information about the <code>AssociateResolverRule</code> request, including the status of the request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the <code>AssociateResolverRule</code> request, including the status of the request.</p>\n@param resolverRuleAssociation Information about the <code>AssociateResolverRule</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverRuleAssociation",
          "getterDocumentation" : "/**<p>Information about the <code>AssociateResolverRule</code> request, including the status of the request.</p>\n@return Information about the <code>AssociateResolverRule</code> request, including the status of the request.*/",
          "getterMethodName" : "getResolverRuleAssociation",
          "getterModel" : {
            "returnType" : "ResolverRuleAssociation",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverRuleAssociation",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverRuleAssociation",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ResolverRuleAssociation",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Information about the <code>AssociateResolverRule</code> request, including the status of the request.</p>\n@param resolverRuleAssociation Information about the <code>AssociateResolverRule</code> request, including the status of the request.*/",
          "setterMethodName" : "setResolverRuleAssociation",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverRuleAssociation",
            "variableName" : "resolverRuleAssociation",
            "variableType" : "ResolverRuleAssociation",
            "documentation" : "",
            "simpleType" : "ResolverRuleAssociation",
            "variableSetterType" : "ResolverRuleAssociation"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the <code>AssociateResolverRule</code> request, including the status of the request.</p>\n@param resolverRuleAssociation Information about the <code>AssociateResolverRule</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverRuleAssociation",
            "variableName" : "resolverRuleAssociation",
            "variableType" : "ResolverRuleAssociation",
            "documentation" : "<p>Information about the <code>AssociateResolverRule</code> request, including the status of the request.</p>",
            "simpleType" : "ResolverRuleAssociation",
            "variableSetterType" : "ResolverRuleAssociation"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "AssociateResolverRuleResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "AssociateResolverRuleResult",
        "variableName" : "associateResolverRuleResult",
        "variableType" : "AssociateResolverRuleResult",
        "documentation" : null,
        "simpleType" : "AssociateResolverRuleResult",
        "variableSetterType" : "AssociateResolverRuleResult"
      },
      "wrapper" : false
    },
    "CreateResolverEndpointRequest" : {
      "c2jName" : "CreateResolverEndpointRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.request.CreateResolverEndpointRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "CreateResolverEndpoint",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.CreateResolverEndpoint",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "CreatorRequestId",
        "c2jShape" : "CreatorRequestId",
        "deprecated" : false,
        "documentation" : "<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@param creatorRequestId A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCreatorRequestId",
        "getterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@return A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.*/",
        "getterMethodName" : "getCreatorRequestId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "CreatorRequestId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CreatorRequestId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CreatorRequestId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@param creatorRequestId A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.*/",
        "setterMethodName" : "setCreatorRequestId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "creatorRequestId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@param creatorRequestId A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "creatorRequestId",
          "variableType" : "String",
          "documentation" : "<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Name",
        "c2jShape" : "Name",
        "deprecated" : false,
        "documentation" : "<p>A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.</p>\n@param name A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.</p>\n@return A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Name",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.</p>\n@param name A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.</p>\n@param name A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "SecurityGroupIds",
        "c2jShape" : "SecurityGroupIds",
        "deprecated" : false,
        "documentation" : "<p>The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound Resolver endpoints) or outbound rules (for outbound Resolver endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound Resolver endpoints) or outbound rules (for outbound Resolver endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.</p>\n@param securityGroupIds The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound Resolver endpoints) or outbound rules (for outbound Resolver endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSecurityGroupIds",
        "getterDocumentation" : "/**<p>The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound Resolver endpoints) or outbound rules (for outbound Resolver endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.</p>\n@return The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound Resolver endpoints) or outbound rules (for outbound Resolver endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.*/",
        "getterMethodName" : "getSecurityGroupIds",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SecurityGroupIds",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SecurityGroupIds",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ResourceId",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "SecurityGroupIds",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound Resolver endpoints) or outbound rules (for outbound Resolver endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.</p>\n@param securityGroupIds The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound Resolver endpoints) or outbound rules (for outbound Resolver endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.*/",
        "setterMethodName" : "setSecurityGroupIds",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "securityGroupIds",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound Resolver endpoints) or outbound rules (for outbound Resolver endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setSecurityGroupIds(java.util.Collection)} or {@link #withSecurityGroupIds(java.util.Collection)} if you want to override the existing values.</p>\n@param securityGroupIds The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound Resolver endpoints) or outbound rules (for outbound Resolver endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "securityGroupIds",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound Resolver endpoints) or outbound rules (for outbound Resolver endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Direction",
        "c2jShape" : "ResolverEndpointDirection",
        "deprecated" : false,
        "documentation" : "<p>Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network</p> </li> </ul>",
        "endpointDiscoveryId" : false,
        "enumType" : "ResolverEndpointDirection",
        "fluentSetterDocumentation" : "/**<p>Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network</p> </li> </ul>\n@param direction Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverEndpointDirection*/",
        "fluentSetterMethodName" : "withDirection",
        "getterDocumentation" : "/**<p>Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network</p> </li> </ul>\n@return Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network</p> </li>\n@see ResolverEndpointDirection*/",
        "getterMethodName" : "getDirection",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Direction",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Direction",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Direction",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network</p> </li> </ul>\n@param direction Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network</p> </li>\n@see ResolverEndpointDirection*/",
        "setterMethodName" : "setDirection",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "direction",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network</p> </li> </ul>\n@param direction Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverEndpointDirection*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "direction",
          "variableType" : "String",
          "documentation" : "<p>Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network</p> </li> </ul>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "IpAddresses",
        "c2jShape" : "IpAddressesRequest",
        "deprecated" : false,
        "documentation" : "<p>The subnets and IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints). The subnet ID uniquely identifies a VPC. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The subnets and IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints). The subnet ID uniquely identifies a VPC. </p>\n@param ipAddresses The subnets and IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints). The subnet ID uniquely identifies a VPC.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withIpAddresses",
        "getterDocumentation" : "/**<p>The subnets and IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints). The subnet ID uniquely identifies a VPC. </p>\n@return The subnets and IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints). The subnet ID uniquely identifies a VPC.*/",
        "getterMethodName" : "getIpAddresses",
        "getterModel" : {
          "returnType" : "java.util.List<IpAddressRequest>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "IpAddresses",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "IpAddresses",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "IpAddressRequest",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "IpAddressRequest",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "IpAddressRequest",
              "variableName" : "member",
              "variableType" : "IpAddressRequest",
              "documentation" : "",
              "simpleType" : "IpAddressRequest",
              "variableSetterType" : "IpAddressRequest"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "IpAddressRequest",
              "variableName" : "member",
              "variableType" : "IpAddressRequest",
              "documentation" : "",
              "simpleType" : "IpAddressRequest",
              "variableSetterType" : "IpAddressRequest"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "IpAddressRequest",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "IpAddressRequest",
          "templateImplType" : "java.util.ArrayList<IpAddressRequest>",
          "templateType" : "java.util.List<IpAddressRequest>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "IpAddresses",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The subnets and IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints). The subnet ID uniquely identifies a VPC. </p>\n@param ipAddresses The subnets and IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints). The subnet ID uniquely identifies a VPC.*/",
        "setterMethodName" : "setIpAddresses",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<IpAddressRequest>",
          "variableName" : "ipAddresses",
          "variableType" : "java.util.List<IpAddressRequest>",
          "documentation" : "",
          "simpleType" : "List<IpAddressRequest>",
          "variableSetterType" : "java.util.Collection<IpAddressRequest>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The subnets and IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints). The subnet ID uniquely identifies a VPC. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setIpAddresses(java.util.Collection)} or {@link #withIpAddresses(java.util.Collection)} if you want to override the existing values.</p>\n@param ipAddresses The subnets and IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints). The subnet ID uniquely identifies a VPC.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<IpAddressRequest>",
          "variableName" : "ipAddresses",
          "variableType" : "java.util.List<IpAddressRequest>",
          "documentation" : "<p>The subnets and IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints). The subnet ID uniquely identifies a VPC. </p>",
          "simpleType" : "List<IpAddressRequest>",
          "variableSetterType" : "java.util.Collection<IpAddressRequest>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Tags",
        "c2jShape" : "TagList",
        "deprecated" : false,
        "documentation" : "<p>A list of the tag keys and values that you want to associate with the endpoint.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the endpoint.</p>\n@param tags A list of the tag keys and values that you want to associate with the endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTags",
        "getterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the endpoint.</p>\n@return A list of the tag keys and values that you want to associate with the endpoint.*/",
        "getterMethodName" : "getTags",
        "getterModel" : {
          "returnType" : "java.util.List<Tag>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Tags",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Tags",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Tag",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Tag",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Tag",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Tag",
          "templateImplType" : "java.util.ArrayList<Tag>",
          "templateType" : "java.util.List<Tag>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Tags",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the endpoint.</p>\n@param tags A list of the tag keys and values that you want to associate with the endpoint.*/",
        "setterMethodName" : "setTags",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the endpoint.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags A list of the tag keys and values that you want to associate with the endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "<p>A list of the tag keys and values that you want to associate with the endpoint.</p>",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CreatorRequestId" : {
          "c2jName" : "CreatorRequestId",
          "c2jShape" : "CreatorRequestId",
          "deprecated" : false,
          "documentation" : "<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@param creatorRequestId A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCreatorRequestId",
          "getterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@return A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.*/",
          "getterMethodName" : "getCreatorRequestId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "CreatorRequestId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CreatorRequestId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CreatorRequestId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@param creatorRequestId A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.*/",
          "setterMethodName" : "setCreatorRequestId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "creatorRequestId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@param creatorRequestId A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "creatorRequestId",
            "variableType" : "String",
            "documentation" : "<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Direction" : {
          "c2jName" : "Direction",
          "c2jShape" : "ResolverEndpointDirection",
          "deprecated" : false,
          "documentation" : "<p>Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network</p> </li> </ul>",
          "endpointDiscoveryId" : false,
          "enumType" : "ResolverEndpointDirection",
          "fluentSetterDocumentation" : "/**<p>Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network</p> </li> </ul>\n@param direction Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverEndpointDirection*/",
          "fluentSetterMethodName" : "withDirection",
          "getterDocumentation" : "/**<p>Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network</p> </li> </ul>\n@return Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network</p> </li>\n@see ResolverEndpointDirection*/",
          "getterMethodName" : "getDirection",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Direction",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Direction",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Direction",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network</p> </li> </ul>\n@param direction Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network</p> </li>\n@see ResolverEndpointDirection*/",
          "setterMethodName" : "setDirection",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "direction",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network</p> </li> </ul>\n@param direction Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverEndpointDirection*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "direction",
            "variableType" : "String",
            "documentation" : "<p>Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network</p> </li> </ul>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "IpAddresses" : {
          "c2jName" : "IpAddresses",
          "c2jShape" : "IpAddressesRequest",
          "deprecated" : false,
          "documentation" : "<p>The subnets and IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints). The subnet ID uniquely identifies a VPC. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The subnets and IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints). The subnet ID uniquely identifies a VPC. </p>\n@param ipAddresses The subnets and IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints). The subnet ID uniquely identifies a VPC.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withIpAddresses",
          "getterDocumentation" : "/**<p>The subnets and IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints). The subnet ID uniquely identifies a VPC. </p>\n@return The subnets and IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints). The subnet ID uniquely identifies a VPC.*/",
          "getterMethodName" : "getIpAddresses",
          "getterModel" : {
            "returnType" : "java.util.List<IpAddressRequest>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "IpAddresses",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "IpAddresses",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "IpAddressRequest",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "IpAddressRequest",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "IpAddressRequest",
                "variableName" : "member",
                "variableType" : "IpAddressRequest",
                "documentation" : "",
                "simpleType" : "IpAddressRequest",
                "variableSetterType" : "IpAddressRequest"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "IpAddressRequest",
                "variableName" : "member",
                "variableType" : "IpAddressRequest",
                "documentation" : "",
                "simpleType" : "IpAddressRequest",
                "variableSetterType" : "IpAddressRequest"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "IpAddressRequest",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "IpAddressRequest",
            "templateImplType" : "java.util.ArrayList<IpAddressRequest>",
            "templateType" : "java.util.List<IpAddressRequest>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "IpAddresses",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The subnets and IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints). The subnet ID uniquely identifies a VPC. </p>\n@param ipAddresses The subnets and IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints). The subnet ID uniquely identifies a VPC.*/",
          "setterMethodName" : "setIpAddresses",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<IpAddressRequest>",
            "variableName" : "ipAddresses",
            "variableType" : "java.util.List<IpAddressRequest>",
            "documentation" : "",
            "simpleType" : "List<IpAddressRequest>",
            "variableSetterType" : "java.util.Collection<IpAddressRequest>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The subnets and IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints). The subnet ID uniquely identifies a VPC. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setIpAddresses(java.util.Collection)} or {@link #withIpAddresses(java.util.Collection)} if you want to override the existing values.</p>\n@param ipAddresses The subnets and IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints). The subnet ID uniquely identifies a VPC.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<IpAddressRequest>",
            "variableName" : "ipAddresses",
            "variableType" : "java.util.List<IpAddressRequest>",
            "documentation" : "<p>The subnets and IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints). The subnet ID uniquely identifies a VPC. </p>",
            "simpleType" : "List<IpAddressRequest>",
            "variableSetterType" : "java.util.Collection<IpAddressRequest>"
          },
          "xmlNameSpaceUri" : null
        },
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "Name",
          "deprecated" : false,
          "documentation" : "<p>A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.</p>\n@param name A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.</p>\n@return A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Name",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.</p>\n@param name A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.</p>\n@param name A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SecurityGroupIds" : {
          "c2jName" : "SecurityGroupIds",
          "c2jShape" : "SecurityGroupIds",
          "deprecated" : false,
          "documentation" : "<p>The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound Resolver endpoints) or outbound rules (for outbound Resolver endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound Resolver endpoints) or outbound rules (for outbound Resolver endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.</p>\n@param securityGroupIds The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound Resolver endpoints) or outbound rules (for outbound Resolver endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSecurityGroupIds",
          "getterDocumentation" : "/**<p>The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound Resolver endpoints) or outbound rules (for outbound Resolver endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.</p>\n@return The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound Resolver endpoints) or outbound rules (for outbound Resolver endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.*/",
          "getterMethodName" : "getSecurityGroupIds",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SecurityGroupIds",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SecurityGroupIds",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ResourceId",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "SecurityGroupIds",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound Resolver endpoints) or outbound rules (for outbound Resolver endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.</p>\n@param securityGroupIds The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound Resolver endpoints) or outbound rules (for outbound Resolver endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.*/",
          "setterMethodName" : "setSecurityGroupIds",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "securityGroupIds",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound Resolver endpoints) or outbound rules (for outbound Resolver endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setSecurityGroupIds(java.util.Collection)} or {@link #withSecurityGroupIds(java.util.Collection)} if you want to override the existing values.</p>\n@param securityGroupIds The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound Resolver endpoints) or outbound rules (for outbound Resolver endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "securityGroupIds",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound Resolver endpoints) or outbound rules (for outbound Resolver endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "Tags" : {
          "c2jName" : "Tags",
          "c2jShape" : "TagList",
          "deprecated" : false,
          "documentation" : "<p>A list of the tag keys and values that you want to associate with the endpoint.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the endpoint.</p>\n@param tags A list of the tag keys and values that you want to associate with the endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTags",
          "getterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the endpoint.</p>\n@return A list of the tag keys and values that you want to associate with the endpoint.*/",
          "getterMethodName" : "getTags",
          "getterModel" : {
            "returnType" : "java.util.List<Tag>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Tags",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Tags",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Tag",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Tag",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Tag",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Tag",
            "templateImplType" : "java.util.ArrayList<Tag>",
            "templateType" : "java.util.List<Tag>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Tags",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the endpoint.</p>\n@param tags A list of the tag keys and values that you want to associate with the endpoint.*/",
          "setterMethodName" : "setTags",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the endpoint.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags A list of the tag keys and values that you want to associate with the endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "<p>A list of the tag keys and values that you want to associate with the endpoint.</p>",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "CreatorRequestId", "SecurityGroupIds", "Direction", "IpAddresses" ],
      "shapeName" : "CreateResolverEndpointRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "CreateResolverEndpointRequest",
        "variableName" : "createResolverEndpointRequest",
        "variableType" : "CreateResolverEndpointRequest",
        "documentation" : null,
        "simpleType" : "CreateResolverEndpointRequest",
        "variableSetterType" : "CreateResolverEndpointRequest"
      },
      "wrapper" : false
    },
    "CreateResolverEndpointResult" : {
      "c2jName" : "CreateResolverEndpointResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.response.CreateResolverEndpointResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResolverEndpoint",
        "c2jShape" : "ResolverEndpoint",
        "deprecated" : false,
        "documentation" : "<p>Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.</p>\n@param resolverEndpoint Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverEndpoint",
        "getterDocumentation" : "/**<p>Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.</p>\n@return Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.*/",
        "getterMethodName" : "getResolverEndpoint",
        "getterModel" : {
          "returnType" : "ResolverEndpoint",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverEndpoint",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverEndpoint",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ResolverEndpoint",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.</p>\n@param resolverEndpoint Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.*/",
        "setterMethodName" : "setResolverEndpoint",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverEndpoint",
          "variableName" : "resolverEndpoint",
          "variableType" : "ResolverEndpoint",
          "documentation" : "",
          "simpleType" : "ResolverEndpoint",
          "variableSetterType" : "ResolverEndpoint"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.</p>\n@param resolverEndpoint Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverEndpoint",
          "variableName" : "resolverEndpoint",
          "variableType" : "ResolverEndpoint",
          "documentation" : "<p>Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.</p>",
          "simpleType" : "ResolverEndpoint",
          "variableSetterType" : "ResolverEndpoint"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverEndpoint" : {
          "c2jName" : "ResolverEndpoint",
          "c2jShape" : "ResolverEndpoint",
          "deprecated" : false,
          "documentation" : "<p>Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.</p>\n@param resolverEndpoint Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverEndpoint",
          "getterDocumentation" : "/**<p>Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.</p>\n@return Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.*/",
          "getterMethodName" : "getResolverEndpoint",
          "getterModel" : {
            "returnType" : "ResolverEndpoint",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverEndpoint",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverEndpoint",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ResolverEndpoint",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.</p>\n@param resolverEndpoint Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.*/",
          "setterMethodName" : "setResolverEndpoint",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverEndpoint",
            "variableName" : "resolverEndpoint",
            "variableType" : "ResolverEndpoint",
            "documentation" : "",
            "simpleType" : "ResolverEndpoint",
            "variableSetterType" : "ResolverEndpoint"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.</p>\n@param resolverEndpoint Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverEndpoint",
            "variableName" : "resolverEndpoint",
            "variableType" : "ResolverEndpoint",
            "documentation" : "<p>Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.</p>",
            "simpleType" : "ResolverEndpoint",
            "variableSetterType" : "ResolverEndpoint"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CreateResolverEndpointResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "CreateResolverEndpointResult",
        "variableName" : "createResolverEndpointResult",
        "variableType" : "CreateResolverEndpointResult",
        "documentation" : null,
        "simpleType" : "CreateResolverEndpointResult",
        "variableSetterType" : "CreateResolverEndpointResult"
      },
      "wrapper" : false
    },
    "CreateResolverQueryLogConfigRequest" : {
      "c2jName" : "CreateResolverQueryLogConfigRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.request.CreateResolverQueryLogConfigRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "CreateResolverQueryLogConfig",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.CreateResolverQueryLogConfig",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "Name",
        "c2jShape" : "ResolverQueryLogConfigName",
        "deprecated" : false,
        "documentation" : "<p>The name that you want to give the query logging configuration</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name that you want to give the query logging configuration</p>\n@param name The name that you want to give the query logging configuration\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>The name that you want to give the query logging configuration</p>\n@return The name that you want to give the query logging configuration*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Name",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name that you want to give the query logging configuration</p>\n@param name The name that you want to give the query logging configuration*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name that you want to give the query logging configuration</p>\n@param name The name that you want to give the query logging configuration\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>The name that you want to give the query logging configuration</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "DestinationArn",
        "c2jShape" : "DestinationArn",
        "deprecated" : false,
        "documentation" : "<p>The ARN of the resource that you want Resolver to send query logs. You can send query logs to an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream. Examples of valid values include the following:</p> <ul> <li> <p> <b>S3 bucket</b>: </p> <p> <code>arn:aws:s3:::examplebucket</code> </p> <p>You can optionally append a file prefix to the end of the ARN.</p> <p> <code>arn:aws:s3:::examplebucket/development/</code> </p> </li> <li> <p> <b>CloudWatch Logs log group</b>: </p> <p> <code>arn:aws:logs:us-west-1:123456789012:log-group:/mystack-testgroup-12ABC1AB12A1:*</code> </p> </li> <li> <p> <b>Kinesis Data Firehose delivery stream</b>:</p> <p> <code>arn:aws:kinesis:us-east-2:0123456789:stream/my_stream_name</code> </p> </li> </ul>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ARN of the resource that you want Resolver to send query logs. You can send query logs to an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream. Examples of valid values include the following:</p> <ul> <li> <p> <b>S3 bucket</b>: </p> <p> <code>arn:aws:s3:::examplebucket</code> </p> <p>You can optionally append a file prefix to the end of the ARN.</p> <p> <code>arn:aws:s3:::examplebucket/development/</code> </p> </li> <li> <p> <b>CloudWatch Logs log group</b>: </p> <p> <code>arn:aws:logs:us-west-1:123456789012:log-group:/mystack-testgroup-12ABC1AB12A1:*</code> </p> </li> <li> <p> <b>Kinesis Data Firehose delivery stream</b>:</p> <p> <code>arn:aws:kinesis:us-east-2:0123456789:stream/my_stream_name</code> </p> </li> </ul>\n@param destinationArn The ARN of the resource that you want Resolver to send query logs. You can send query logs to an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream. Examples of valid values include the following:</p> <ul> <li> <p> <b>S3 bucket</b>: </p> <p> <code>arn:aws:s3:::examplebucket</code> </p> <p>You can optionally append a file prefix to the end of the ARN.</p> <p> <code>arn:aws:s3:::examplebucket/development/</code> </p> </li> <li> <p> <b>CloudWatch Logs log group</b>: </p> <p> <code>arn:aws:logs:us-west-1:123456789012:log-group:/mystack-testgroup-12ABC1AB12A1:*</code> </p> </li> <li> <p> <b>Kinesis Data Firehose delivery stream</b>:</p> <p> <code>arn:aws:kinesis:us-east-2:0123456789:stream/my_stream_name</code> </p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDestinationArn",
        "getterDocumentation" : "/**<p>The ARN of the resource that you want Resolver to send query logs. You can send query logs to an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream. Examples of valid values include the following:</p> <ul> <li> <p> <b>S3 bucket</b>: </p> <p> <code>arn:aws:s3:::examplebucket</code> </p> <p>You can optionally append a file prefix to the end of the ARN.</p> <p> <code>arn:aws:s3:::examplebucket/development/</code> </p> </li> <li> <p> <b>CloudWatch Logs log group</b>: </p> <p> <code>arn:aws:logs:us-west-1:123456789012:log-group:/mystack-testgroup-12ABC1AB12A1:*</code> </p> </li> <li> <p> <b>Kinesis Data Firehose delivery stream</b>:</p> <p> <code>arn:aws:kinesis:us-east-2:0123456789:stream/my_stream_name</code> </p> </li> </ul>\n@return The ARN of the resource that you want Resolver to send query logs. You can send query logs to an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream. Examples of valid values include the following:</p> <ul> <li> <p> <b>S3 bucket</b>: </p> <p> <code>arn:aws:s3:::examplebucket</code> </p> <p>You can optionally append a file prefix to the end of the ARN.</p> <p> <code>arn:aws:s3:::examplebucket/development/</code> </p> </li> <li> <p> <b>CloudWatch Logs log group</b>: </p> <p> <code>arn:aws:logs:us-west-1:123456789012:log-group:/mystack-testgroup-12ABC1AB12A1:*</code> </p> </li> <li> <p> <b>Kinesis Data Firehose delivery stream</b>:</p> <p> <code>arn:aws:kinesis:us-east-2:0123456789:stream/my_stream_name</code> </p> </li>*/",
        "getterMethodName" : "getDestinationArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "DestinationArn",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "DestinationArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "DestinationArn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ARN of the resource that you want Resolver to send query logs. You can send query logs to an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream. Examples of valid values include the following:</p> <ul> <li> <p> <b>S3 bucket</b>: </p> <p> <code>arn:aws:s3:::examplebucket</code> </p> <p>You can optionally append a file prefix to the end of the ARN.</p> <p> <code>arn:aws:s3:::examplebucket/development/</code> </p> </li> <li> <p> <b>CloudWatch Logs log group</b>: </p> <p> <code>arn:aws:logs:us-west-1:123456789012:log-group:/mystack-testgroup-12ABC1AB12A1:*</code> </p> </li> <li> <p> <b>Kinesis Data Firehose delivery stream</b>:</p> <p> <code>arn:aws:kinesis:us-east-2:0123456789:stream/my_stream_name</code> </p> </li> </ul>\n@param destinationArn The ARN of the resource that you want Resolver to send query logs. You can send query logs to an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream. Examples of valid values include the following:</p> <ul> <li> <p> <b>S3 bucket</b>: </p> <p> <code>arn:aws:s3:::examplebucket</code> </p> <p>You can optionally append a file prefix to the end of the ARN.</p> <p> <code>arn:aws:s3:::examplebucket/development/</code> </p> </li> <li> <p> <b>CloudWatch Logs log group</b>: </p> <p> <code>arn:aws:logs:us-west-1:123456789012:log-group:/mystack-testgroup-12ABC1AB12A1:*</code> </p> </li> <li> <p> <b>Kinesis Data Firehose delivery stream</b>:</p> <p> <code>arn:aws:kinesis:us-east-2:0123456789:stream/my_stream_name</code> </p> </li>*/",
        "setterMethodName" : "setDestinationArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "destinationArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ARN of the resource that you want Resolver to send query logs. You can send query logs to an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream. Examples of valid values include the following:</p> <ul> <li> <p> <b>S3 bucket</b>: </p> <p> <code>arn:aws:s3:::examplebucket</code> </p> <p>You can optionally append a file prefix to the end of the ARN.</p> <p> <code>arn:aws:s3:::examplebucket/development/</code> </p> </li> <li> <p> <b>CloudWatch Logs log group</b>: </p> <p> <code>arn:aws:logs:us-west-1:123456789012:log-group:/mystack-testgroup-12ABC1AB12A1:*</code> </p> </li> <li> <p> <b>Kinesis Data Firehose delivery stream</b>:</p> <p> <code>arn:aws:kinesis:us-east-2:0123456789:stream/my_stream_name</code> </p> </li> </ul>\n@param destinationArn The ARN of the resource that you want Resolver to send query logs. You can send query logs to an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream. Examples of valid values include the following:</p> <ul> <li> <p> <b>S3 bucket</b>: </p> <p> <code>arn:aws:s3:::examplebucket</code> </p> <p>You can optionally append a file prefix to the end of the ARN.</p> <p> <code>arn:aws:s3:::examplebucket/development/</code> </p> </li> <li> <p> <b>CloudWatch Logs log group</b>: </p> <p> <code>arn:aws:logs:us-west-1:123456789012:log-group:/mystack-testgroup-12ABC1AB12A1:*</code> </p> </li> <li> <p> <b>Kinesis Data Firehose delivery stream</b>:</p> <p> <code>arn:aws:kinesis:us-east-2:0123456789:stream/my_stream_name</code> </p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "destinationArn",
          "variableType" : "String",
          "documentation" : "<p>The ARN of the resource that you want Resolver to send query logs. You can send query logs to an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream. Examples of valid values include the following:</p> <ul> <li> <p> <b>S3 bucket</b>: </p> <p> <code>arn:aws:s3:::examplebucket</code> </p> <p>You can optionally append a file prefix to the end of the ARN.</p> <p> <code>arn:aws:s3:::examplebucket/development/</code> </p> </li> <li> <p> <b>CloudWatch Logs log group</b>: </p> <p> <code>arn:aws:logs:us-west-1:123456789012:log-group:/mystack-testgroup-12ABC1AB12A1:*</code> </p> </li> <li> <p> <b>Kinesis Data Firehose delivery stream</b>:</p> <p> <code>arn:aws:kinesis:us-east-2:0123456789:stream/my_stream_name</code> </p> </li> </ul>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "CreatorRequestId",
        "c2jShape" : "CreatorRequestId",
        "deprecated" : false,
        "documentation" : "<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@param creatorRequestId A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCreatorRequestId",
        "getterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@return A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.*/",
        "getterMethodName" : "getCreatorRequestId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "CreatorRequestId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CreatorRequestId",
          "uri" : false
        },
        "idempotencyToken" : true,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CreatorRequestId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@param creatorRequestId A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.*/",
        "setterMethodName" : "setCreatorRequestId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "creatorRequestId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@param creatorRequestId A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "creatorRequestId",
          "variableType" : "String",
          "documentation" : "<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Tags",
        "c2jShape" : "TagList",
        "deprecated" : false,
        "documentation" : "<p>A list of the tag keys and values that you want to associate with the query logging configuration.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the query logging configuration.</p>\n@param tags A list of the tag keys and values that you want to associate with the query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTags",
        "getterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the query logging configuration.</p>\n@return A list of the tag keys and values that you want to associate with the query logging configuration.*/",
        "getterMethodName" : "getTags",
        "getterModel" : {
          "returnType" : "java.util.List<Tag>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Tags",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Tags",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Tag",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Tag",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Tag",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Tag",
          "templateImplType" : "java.util.ArrayList<Tag>",
          "templateType" : "java.util.List<Tag>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Tags",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the query logging configuration.</p>\n@param tags A list of the tag keys and values that you want to associate with the query logging configuration.*/",
        "setterMethodName" : "setTags",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the query logging configuration.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags A list of the tag keys and values that you want to associate with the query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "<p>A list of the tag keys and values that you want to associate with the query logging configuration.</p>",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CreatorRequestId" : {
          "c2jName" : "CreatorRequestId",
          "c2jShape" : "CreatorRequestId",
          "deprecated" : false,
          "documentation" : "<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@param creatorRequestId A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCreatorRequestId",
          "getterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@return A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.*/",
          "getterMethodName" : "getCreatorRequestId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "CreatorRequestId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CreatorRequestId",
            "uri" : false
          },
          "idempotencyToken" : true,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CreatorRequestId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@param creatorRequestId A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.*/",
          "setterMethodName" : "setCreatorRequestId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "creatorRequestId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@param creatorRequestId A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "creatorRequestId",
            "variableType" : "String",
            "documentation" : "<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "DestinationArn" : {
          "c2jName" : "DestinationArn",
          "c2jShape" : "DestinationArn",
          "deprecated" : false,
          "documentation" : "<p>The ARN of the resource that you want Resolver to send query logs. You can send query logs to an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream. Examples of valid values include the following:</p> <ul> <li> <p> <b>S3 bucket</b>: </p> <p> <code>arn:aws:s3:::examplebucket</code> </p> <p>You can optionally append a file prefix to the end of the ARN.</p> <p> <code>arn:aws:s3:::examplebucket/development/</code> </p> </li> <li> <p> <b>CloudWatch Logs log group</b>: </p> <p> <code>arn:aws:logs:us-west-1:123456789012:log-group:/mystack-testgroup-12ABC1AB12A1:*</code> </p> </li> <li> <p> <b>Kinesis Data Firehose delivery stream</b>:</p> <p> <code>arn:aws:kinesis:us-east-2:0123456789:stream/my_stream_name</code> </p> </li> </ul>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ARN of the resource that you want Resolver to send query logs. You can send query logs to an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream. Examples of valid values include the following:</p> <ul> <li> <p> <b>S3 bucket</b>: </p> <p> <code>arn:aws:s3:::examplebucket</code> </p> <p>You can optionally append a file prefix to the end of the ARN.</p> <p> <code>arn:aws:s3:::examplebucket/development/</code> </p> </li> <li> <p> <b>CloudWatch Logs log group</b>: </p> <p> <code>arn:aws:logs:us-west-1:123456789012:log-group:/mystack-testgroup-12ABC1AB12A1:*</code> </p> </li> <li> <p> <b>Kinesis Data Firehose delivery stream</b>:</p> <p> <code>arn:aws:kinesis:us-east-2:0123456789:stream/my_stream_name</code> </p> </li> </ul>\n@param destinationArn The ARN of the resource that you want Resolver to send query logs. You can send query logs to an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream. Examples of valid values include the following:</p> <ul> <li> <p> <b>S3 bucket</b>: </p> <p> <code>arn:aws:s3:::examplebucket</code> </p> <p>You can optionally append a file prefix to the end of the ARN.</p> <p> <code>arn:aws:s3:::examplebucket/development/</code> </p> </li> <li> <p> <b>CloudWatch Logs log group</b>: </p> <p> <code>arn:aws:logs:us-west-1:123456789012:log-group:/mystack-testgroup-12ABC1AB12A1:*</code> </p> </li> <li> <p> <b>Kinesis Data Firehose delivery stream</b>:</p> <p> <code>arn:aws:kinesis:us-east-2:0123456789:stream/my_stream_name</code> </p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDestinationArn",
          "getterDocumentation" : "/**<p>The ARN of the resource that you want Resolver to send query logs. You can send query logs to an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream. Examples of valid values include the following:</p> <ul> <li> <p> <b>S3 bucket</b>: </p> <p> <code>arn:aws:s3:::examplebucket</code> </p> <p>You can optionally append a file prefix to the end of the ARN.</p> <p> <code>arn:aws:s3:::examplebucket/development/</code> </p> </li> <li> <p> <b>CloudWatch Logs log group</b>: </p> <p> <code>arn:aws:logs:us-west-1:123456789012:log-group:/mystack-testgroup-12ABC1AB12A1:*</code> </p> </li> <li> <p> <b>Kinesis Data Firehose delivery stream</b>:</p> <p> <code>arn:aws:kinesis:us-east-2:0123456789:stream/my_stream_name</code> </p> </li> </ul>\n@return The ARN of the resource that you want Resolver to send query logs. You can send query logs to an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream. Examples of valid values include the following:</p> <ul> <li> <p> <b>S3 bucket</b>: </p> <p> <code>arn:aws:s3:::examplebucket</code> </p> <p>You can optionally append a file prefix to the end of the ARN.</p> <p> <code>arn:aws:s3:::examplebucket/development/</code> </p> </li> <li> <p> <b>CloudWatch Logs log group</b>: </p> <p> <code>arn:aws:logs:us-west-1:123456789012:log-group:/mystack-testgroup-12ABC1AB12A1:*</code> </p> </li> <li> <p> <b>Kinesis Data Firehose delivery stream</b>:</p> <p> <code>arn:aws:kinesis:us-east-2:0123456789:stream/my_stream_name</code> </p> </li>*/",
          "getterMethodName" : "getDestinationArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "DestinationArn",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "DestinationArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "DestinationArn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ARN of the resource that you want Resolver to send query logs. You can send query logs to an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream. Examples of valid values include the following:</p> <ul> <li> <p> <b>S3 bucket</b>: </p> <p> <code>arn:aws:s3:::examplebucket</code> </p> <p>You can optionally append a file prefix to the end of the ARN.</p> <p> <code>arn:aws:s3:::examplebucket/development/</code> </p> </li> <li> <p> <b>CloudWatch Logs log group</b>: </p> <p> <code>arn:aws:logs:us-west-1:123456789012:log-group:/mystack-testgroup-12ABC1AB12A1:*</code> </p> </li> <li> <p> <b>Kinesis Data Firehose delivery stream</b>:</p> <p> <code>arn:aws:kinesis:us-east-2:0123456789:stream/my_stream_name</code> </p> </li> </ul>\n@param destinationArn The ARN of the resource that you want Resolver to send query logs. You can send query logs to an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream. Examples of valid values include the following:</p> <ul> <li> <p> <b>S3 bucket</b>: </p> <p> <code>arn:aws:s3:::examplebucket</code> </p> <p>You can optionally append a file prefix to the end of the ARN.</p> <p> <code>arn:aws:s3:::examplebucket/development/</code> </p> </li> <li> <p> <b>CloudWatch Logs log group</b>: </p> <p> <code>arn:aws:logs:us-west-1:123456789012:log-group:/mystack-testgroup-12ABC1AB12A1:*</code> </p> </li> <li> <p> <b>Kinesis Data Firehose delivery stream</b>:</p> <p> <code>arn:aws:kinesis:us-east-2:0123456789:stream/my_stream_name</code> </p> </li>*/",
          "setterMethodName" : "setDestinationArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "destinationArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ARN of the resource that you want Resolver to send query logs. You can send query logs to an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream. Examples of valid values include the following:</p> <ul> <li> <p> <b>S3 bucket</b>: </p> <p> <code>arn:aws:s3:::examplebucket</code> </p> <p>You can optionally append a file prefix to the end of the ARN.</p> <p> <code>arn:aws:s3:::examplebucket/development/</code> </p> </li> <li> <p> <b>CloudWatch Logs log group</b>: </p> <p> <code>arn:aws:logs:us-west-1:123456789012:log-group:/mystack-testgroup-12ABC1AB12A1:*</code> </p> </li> <li> <p> <b>Kinesis Data Firehose delivery stream</b>:</p> <p> <code>arn:aws:kinesis:us-east-2:0123456789:stream/my_stream_name</code> </p> </li> </ul>\n@param destinationArn The ARN of the resource that you want Resolver to send query logs. You can send query logs to an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream. Examples of valid values include the following:</p> <ul> <li> <p> <b>S3 bucket</b>: </p> <p> <code>arn:aws:s3:::examplebucket</code> </p> <p>You can optionally append a file prefix to the end of the ARN.</p> <p> <code>arn:aws:s3:::examplebucket/development/</code> </p> </li> <li> <p> <b>CloudWatch Logs log group</b>: </p> <p> <code>arn:aws:logs:us-west-1:123456789012:log-group:/mystack-testgroup-12ABC1AB12A1:*</code> </p> </li> <li> <p> <b>Kinesis Data Firehose delivery stream</b>:</p> <p> <code>arn:aws:kinesis:us-east-2:0123456789:stream/my_stream_name</code> </p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "destinationArn",
            "variableType" : "String",
            "documentation" : "<p>The ARN of the resource that you want Resolver to send query logs. You can send query logs to an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream. Examples of valid values include the following:</p> <ul> <li> <p> <b>S3 bucket</b>: </p> <p> <code>arn:aws:s3:::examplebucket</code> </p> <p>You can optionally append a file prefix to the end of the ARN.</p> <p> <code>arn:aws:s3:::examplebucket/development/</code> </p> </li> <li> <p> <b>CloudWatch Logs log group</b>: </p> <p> <code>arn:aws:logs:us-west-1:123456789012:log-group:/mystack-testgroup-12ABC1AB12A1:*</code> </p> </li> <li> <p> <b>Kinesis Data Firehose delivery stream</b>:</p> <p> <code>arn:aws:kinesis:us-east-2:0123456789:stream/my_stream_name</code> </p> </li> </ul>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "ResolverQueryLogConfigName",
          "deprecated" : false,
          "documentation" : "<p>The name that you want to give the query logging configuration</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name that you want to give the query logging configuration</p>\n@param name The name that you want to give the query logging configuration\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>The name that you want to give the query logging configuration</p>\n@return The name that you want to give the query logging configuration*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Name",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name that you want to give the query logging configuration</p>\n@param name The name that you want to give the query logging configuration*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name that you want to give the query logging configuration</p>\n@param name The name that you want to give the query logging configuration\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>The name that you want to give the query logging configuration</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Tags" : {
          "c2jName" : "Tags",
          "c2jShape" : "TagList",
          "deprecated" : false,
          "documentation" : "<p>A list of the tag keys and values that you want to associate with the query logging configuration.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the query logging configuration.</p>\n@param tags A list of the tag keys and values that you want to associate with the query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTags",
          "getterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the query logging configuration.</p>\n@return A list of the tag keys and values that you want to associate with the query logging configuration.*/",
          "getterMethodName" : "getTags",
          "getterModel" : {
            "returnType" : "java.util.List<Tag>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Tags",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Tags",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Tag",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Tag",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Tag",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Tag",
            "templateImplType" : "java.util.ArrayList<Tag>",
            "templateType" : "java.util.List<Tag>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Tags",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the query logging configuration.</p>\n@param tags A list of the tag keys and values that you want to associate with the query logging configuration.*/",
          "setterMethodName" : "setTags",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the query logging configuration.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags A list of the tag keys and values that you want to associate with the query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "<p>A list of the tag keys and values that you want to associate with the query logging configuration.</p>",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Name", "DestinationArn", "CreatorRequestId" ],
      "shapeName" : "CreateResolverQueryLogConfigRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "CreateResolverQueryLogConfigRequest",
        "variableName" : "createResolverQueryLogConfigRequest",
        "variableType" : "CreateResolverQueryLogConfigRequest",
        "documentation" : null,
        "simpleType" : "CreateResolverQueryLogConfigRequest",
        "variableSetterType" : "CreateResolverQueryLogConfigRequest"
      },
      "wrapper" : false
    },
    "CreateResolverQueryLogConfigResult" : {
      "c2jName" : "CreateResolverQueryLogConfigResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.response.CreateResolverQueryLogConfigResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResolverQueryLogConfig",
        "c2jShape" : "ResolverQueryLogConfig",
        "deprecated" : false,
        "documentation" : "<p>Information about the <code>CreateResolverQueryLogConfig</code> request, including the status of the request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the <code>CreateResolverQueryLogConfig</code> request, including the status of the request.</p>\n@param resolverQueryLogConfig Information about the <code>CreateResolverQueryLogConfig</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverQueryLogConfig",
        "getterDocumentation" : "/**<p>Information about the <code>CreateResolverQueryLogConfig</code> request, including the status of the request.</p>\n@return Information about the <code>CreateResolverQueryLogConfig</code> request, including the status of the request.*/",
        "getterMethodName" : "getResolverQueryLogConfig",
        "getterModel" : {
          "returnType" : "ResolverQueryLogConfig",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverQueryLogConfig",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverQueryLogConfig",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ResolverQueryLogConfig",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Information about the <code>CreateResolverQueryLogConfig</code> request, including the status of the request.</p>\n@param resolverQueryLogConfig Information about the <code>CreateResolverQueryLogConfig</code> request, including the status of the request.*/",
        "setterMethodName" : "setResolverQueryLogConfig",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverQueryLogConfig",
          "variableName" : "resolverQueryLogConfig",
          "variableType" : "ResolverQueryLogConfig",
          "documentation" : "",
          "simpleType" : "ResolverQueryLogConfig",
          "variableSetterType" : "ResolverQueryLogConfig"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the <code>CreateResolverQueryLogConfig</code> request, including the status of the request.</p>\n@param resolverQueryLogConfig Information about the <code>CreateResolverQueryLogConfig</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverQueryLogConfig",
          "variableName" : "resolverQueryLogConfig",
          "variableType" : "ResolverQueryLogConfig",
          "documentation" : "<p>Information about the <code>CreateResolverQueryLogConfig</code> request, including the status of the request.</p>",
          "simpleType" : "ResolverQueryLogConfig",
          "variableSetterType" : "ResolverQueryLogConfig"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverQueryLogConfig" : {
          "c2jName" : "ResolverQueryLogConfig",
          "c2jShape" : "ResolverQueryLogConfig",
          "deprecated" : false,
          "documentation" : "<p>Information about the <code>CreateResolverQueryLogConfig</code> request, including the status of the request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the <code>CreateResolverQueryLogConfig</code> request, including the status of the request.</p>\n@param resolverQueryLogConfig Information about the <code>CreateResolverQueryLogConfig</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverQueryLogConfig",
          "getterDocumentation" : "/**<p>Information about the <code>CreateResolverQueryLogConfig</code> request, including the status of the request.</p>\n@return Information about the <code>CreateResolverQueryLogConfig</code> request, including the status of the request.*/",
          "getterMethodName" : "getResolverQueryLogConfig",
          "getterModel" : {
            "returnType" : "ResolverQueryLogConfig",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverQueryLogConfig",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverQueryLogConfig",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ResolverQueryLogConfig",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Information about the <code>CreateResolverQueryLogConfig</code> request, including the status of the request.</p>\n@param resolverQueryLogConfig Information about the <code>CreateResolverQueryLogConfig</code> request, including the status of the request.*/",
          "setterMethodName" : "setResolverQueryLogConfig",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverQueryLogConfig",
            "variableName" : "resolverQueryLogConfig",
            "variableType" : "ResolverQueryLogConfig",
            "documentation" : "",
            "simpleType" : "ResolverQueryLogConfig",
            "variableSetterType" : "ResolverQueryLogConfig"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the <code>CreateResolverQueryLogConfig</code> request, including the status of the request.</p>\n@param resolverQueryLogConfig Information about the <code>CreateResolverQueryLogConfig</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverQueryLogConfig",
            "variableName" : "resolverQueryLogConfig",
            "variableType" : "ResolverQueryLogConfig",
            "documentation" : "<p>Information about the <code>CreateResolverQueryLogConfig</code> request, including the status of the request.</p>",
            "simpleType" : "ResolverQueryLogConfig",
            "variableSetterType" : "ResolverQueryLogConfig"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CreateResolverQueryLogConfigResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "CreateResolverQueryLogConfigResult",
        "variableName" : "createResolverQueryLogConfigResult",
        "variableType" : "CreateResolverQueryLogConfigResult",
        "documentation" : null,
        "simpleType" : "CreateResolverQueryLogConfigResult",
        "variableSetterType" : "CreateResolverQueryLogConfigResult"
      },
      "wrapper" : false
    },
    "CreateResolverRuleRequest" : {
      "c2jName" : "CreateResolverRuleRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.request.CreateResolverRuleRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "CreateResolverRule",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.CreateResolverRule",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "CreatorRequestId",
        "c2jShape" : "CreatorRequestId",
        "deprecated" : false,
        "documentation" : "<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@param creatorRequestId A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCreatorRequestId",
        "getterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@return A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.*/",
        "getterMethodName" : "getCreatorRequestId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "CreatorRequestId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CreatorRequestId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CreatorRequestId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@param creatorRequestId A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.*/",
        "setterMethodName" : "setCreatorRequestId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "creatorRequestId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@param creatorRequestId A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "creatorRequestId",
          "variableType" : "String",
          "documentation" : "<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Name",
        "c2jShape" : "Name",
        "deprecated" : false,
        "documentation" : "<p>A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.</p>\n@param name A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.</p>\n@return A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Name",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.</p>\n@param name A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.</p>\n@param name A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "RuleType",
        "c2jShape" : "RuleTypeOption",
        "deprecated" : false,
        "documentation" : "<p>When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : "RuleTypeOption",
        "fluentSetterDocumentation" : "/**<p>When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.</p>\n@param ruleType When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see RuleTypeOption*/",
        "fluentSetterMethodName" : "withRuleType",
        "getterDocumentation" : "/**<p>When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.</p>\n@return When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.\n@see RuleTypeOption*/",
        "getterMethodName" : "getRuleType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "RuleType",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "RuleType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RuleType",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.</p>\n@param ruleType When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.\n@see RuleTypeOption*/",
        "setterMethodName" : "setRuleType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ruleType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.</p>\n@param ruleType When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see RuleTypeOption*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ruleType",
          "variableType" : "String",
          "documentation" : "<p>When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "DomainName",
        "c2jShape" : "DomainName",
        "deprecated" : false,
        "documentation" : "<p>DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), outbound DNS queries are routed using the Resolver rule that contains the most specific domain name (www.example.com).</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), outbound DNS queries are routed using the Resolver rule that contains the most specific domain name (www.example.com).</p>\n@param domainName DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), outbound DNS queries are routed using the Resolver rule that contains the most specific domain name (www.example.com).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDomainName",
        "getterDocumentation" : "/**<p>DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), outbound DNS queries are routed using the Resolver rule that contains the most specific domain name (www.example.com).</p>\n@return DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), outbound DNS queries are routed using the Resolver rule that contains the most specific domain name (www.example.com).*/",
        "getterMethodName" : "getDomainName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "DomainName",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "DomainName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "DomainName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), outbound DNS queries are routed using the Resolver rule that contains the most specific domain name (www.example.com).</p>\n@param domainName DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), outbound DNS queries are routed using the Resolver rule that contains the most specific domain name (www.example.com).*/",
        "setterMethodName" : "setDomainName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "domainName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), outbound DNS queries are routed using the Resolver rule that contains the most specific domain name (www.example.com).</p>\n@param domainName DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), outbound DNS queries are routed using the Resolver rule that contains the most specific domain name (www.example.com).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "domainName",
          "variableType" : "String",
          "documentation" : "<p>DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), outbound DNS queries are routed using the Resolver rule that contains the most specific domain name (www.example.com).</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "TargetIps",
        "c2jShape" : "TargetList",
        "deprecated" : false,
        "documentation" : "<p>The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.</p> <p> <code>TargetIps</code> is available only when the value of <code>Rule type</code> is <code>FORWARD</code>.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.</p> <p> <code>TargetIps</code> is available only when the value of <code>Rule type</code> is <code>FORWARD</code>.</p>\n@param targetIps The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.</p> <p> <code>TargetIps</code> is available only when the value of <code>Rule type</code> is <code>FORWARD</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTargetIps",
        "getterDocumentation" : "/**<p>The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.</p> <p> <code>TargetIps</code> is available only when the value of <code>Rule type</code> is <code>FORWARD</code>.</p>\n@return The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.</p> <p> <code>TargetIps</code> is available only when the value of <code>Rule type</code> is <code>FORWARD</code>.*/",
        "getterMethodName" : "getTargetIps",
        "getterModel" : {
          "returnType" : "java.util.List<TargetAddress>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TargetIps",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TargetIps",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "TargetAddress",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "TargetAddress",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "TargetAddress",
              "variableName" : "member",
              "variableType" : "TargetAddress",
              "documentation" : "",
              "simpleType" : "TargetAddress",
              "variableSetterType" : "TargetAddress"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "TargetAddress",
              "variableName" : "member",
              "variableType" : "TargetAddress",
              "documentation" : "",
              "simpleType" : "TargetAddress",
              "variableSetterType" : "TargetAddress"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "TargetAddress",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "TargetAddress",
          "templateImplType" : "java.util.ArrayList<TargetAddress>",
          "templateType" : "java.util.List<TargetAddress>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "TargetIps",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.</p> <p> <code>TargetIps</code> is available only when the value of <code>Rule type</code> is <code>FORWARD</code>.</p>\n@param targetIps The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.</p> <p> <code>TargetIps</code> is available only when the value of <code>Rule type</code> is <code>FORWARD</code>.*/",
        "setterMethodName" : "setTargetIps",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<TargetAddress>",
          "variableName" : "targetIps",
          "variableType" : "java.util.List<TargetAddress>",
          "documentation" : "",
          "simpleType" : "List<TargetAddress>",
          "variableSetterType" : "java.util.Collection<TargetAddress>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.</p> <p> <code>TargetIps</code> is available only when the value of <code>Rule type</code> is <code>FORWARD</code>.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTargetIps(java.util.Collection)} or {@link #withTargetIps(java.util.Collection)} if you want to override the existing values.</p>\n@param targetIps The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.</p> <p> <code>TargetIps</code> is available only when the value of <code>Rule type</code> is <code>FORWARD</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<TargetAddress>",
          "variableName" : "targetIps",
          "variableType" : "java.util.List<TargetAddress>",
          "documentation" : "<p>The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.</p> <p> <code>TargetIps</code> is available only when the value of <code>Rule type</code> is <code>FORWARD</code>.</p>",
          "simpleType" : "List<TargetAddress>",
          "variableSetterType" : "java.util.Collection<TargetAddress>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ResolverEndpointId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>\n@param resolverEndpointId The ID of the outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverEndpointId",
        "getterDocumentation" : "/**<p>The ID of the outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>\n@return The ID of the outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.*/",
        "getterMethodName" : "getResolverEndpointId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverEndpointId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverEndpointId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverEndpointId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>\n@param resolverEndpointId The ID of the outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.*/",
        "setterMethodName" : "setResolverEndpointId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverEndpointId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>\n@param resolverEndpointId The ID of the outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverEndpointId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Tags",
        "c2jShape" : "TagList",
        "deprecated" : false,
        "documentation" : "<p>A list of the tag keys and values that you want to associate with the endpoint.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the endpoint.</p>\n@param tags A list of the tag keys and values that you want to associate with the endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTags",
        "getterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the endpoint.</p>\n@return A list of the tag keys and values that you want to associate with the endpoint.*/",
        "getterMethodName" : "getTags",
        "getterModel" : {
          "returnType" : "java.util.List<Tag>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Tags",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Tags",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Tag",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Tag",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Tag",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Tag",
          "templateImplType" : "java.util.ArrayList<Tag>",
          "templateType" : "java.util.List<Tag>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Tags",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the endpoint.</p>\n@param tags A list of the tag keys and values that you want to associate with the endpoint.*/",
        "setterMethodName" : "setTags",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the endpoint.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags A list of the tag keys and values that you want to associate with the endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "<p>A list of the tag keys and values that you want to associate with the endpoint.</p>",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CreatorRequestId" : {
          "c2jName" : "CreatorRequestId",
          "c2jShape" : "CreatorRequestId",
          "deprecated" : false,
          "documentation" : "<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@param creatorRequestId A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCreatorRequestId",
          "getterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@return A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.*/",
          "getterMethodName" : "getCreatorRequestId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "CreatorRequestId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CreatorRequestId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CreatorRequestId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@param creatorRequestId A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.*/",
          "setterMethodName" : "setCreatorRequestId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "creatorRequestId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@param creatorRequestId A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "creatorRequestId",
            "variableType" : "String",
            "documentation" : "<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "DomainName" : {
          "c2jName" : "DomainName",
          "c2jShape" : "DomainName",
          "deprecated" : false,
          "documentation" : "<p>DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), outbound DNS queries are routed using the Resolver rule that contains the most specific domain name (www.example.com).</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), outbound DNS queries are routed using the Resolver rule that contains the most specific domain name (www.example.com).</p>\n@param domainName DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), outbound DNS queries are routed using the Resolver rule that contains the most specific domain name (www.example.com).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDomainName",
          "getterDocumentation" : "/**<p>DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), outbound DNS queries are routed using the Resolver rule that contains the most specific domain name (www.example.com).</p>\n@return DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), outbound DNS queries are routed using the Resolver rule that contains the most specific domain name (www.example.com).*/",
          "getterMethodName" : "getDomainName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "DomainName",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "DomainName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "DomainName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), outbound DNS queries are routed using the Resolver rule that contains the most specific domain name (www.example.com).</p>\n@param domainName DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), outbound DNS queries are routed using the Resolver rule that contains the most specific domain name (www.example.com).*/",
          "setterMethodName" : "setDomainName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "domainName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), outbound DNS queries are routed using the Resolver rule that contains the most specific domain name (www.example.com).</p>\n@param domainName DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), outbound DNS queries are routed using the Resolver rule that contains the most specific domain name (www.example.com).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "domainName",
            "variableType" : "String",
            "documentation" : "<p>DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), outbound DNS queries are routed using the Resolver rule that contains the most specific domain name (www.example.com).</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "Name",
          "deprecated" : false,
          "documentation" : "<p>A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.</p>\n@param name A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.</p>\n@return A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Name",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.</p>\n@param name A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.</p>\n@param name A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResolverEndpointId" : {
          "c2jName" : "ResolverEndpointId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>\n@param resolverEndpointId The ID of the outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverEndpointId",
          "getterDocumentation" : "/**<p>The ID of the outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>\n@return The ID of the outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.*/",
          "getterMethodName" : "getResolverEndpointId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverEndpointId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverEndpointId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverEndpointId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>\n@param resolverEndpointId The ID of the outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.*/",
          "setterMethodName" : "setResolverEndpointId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverEndpointId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>\n@param resolverEndpointId The ID of the outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverEndpointId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RuleType" : {
          "c2jName" : "RuleType",
          "c2jShape" : "RuleTypeOption",
          "deprecated" : false,
          "documentation" : "<p>When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : "RuleTypeOption",
          "fluentSetterDocumentation" : "/**<p>When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.</p>\n@param ruleType When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see RuleTypeOption*/",
          "fluentSetterMethodName" : "withRuleType",
          "getterDocumentation" : "/**<p>When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.</p>\n@return When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.\n@see RuleTypeOption*/",
          "getterMethodName" : "getRuleType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "RuleType",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "RuleType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RuleType",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.</p>\n@param ruleType When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.\n@see RuleTypeOption*/",
          "setterMethodName" : "setRuleType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ruleType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.</p>\n@param ruleType When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see RuleTypeOption*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ruleType",
            "variableType" : "String",
            "documentation" : "<p>When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Tags" : {
          "c2jName" : "Tags",
          "c2jShape" : "TagList",
          "deprecated" : false,
          "documentation" : "<p>A list of the tag keys and values that you want to associate with the endpoint.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the endpoint.</p>\n@param tags A list of the tag keys and values that you want to associate with the endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTags",
          "getterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the endpoint.</p>\n@return A list of the tag keys and values that you want to associate with the endpoint.*/",
          "getterMethodName" : "getTags",
          "getterModel" : {
            "returnType" : "java.util.List<Tag>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Tags",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Tags",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Tag",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Tag",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Tag",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Tag",
            "templateImplType" : "java.util.ArrayList<Tag>",
            "templateType" : "java.util.List<Tag>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Tags",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the endpoint.</p>\n@param tags A list of the tag keys and values that you want to associate with the endpoint.*/",
          "setterMethodName" : "setTags",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the endpoint.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags A list of the tag keys and values that you want to associate with the endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "<p>A list of the tag keys and values that you want to associate with the endpoint.</p>",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "xmlNameSpaceUri" : null
        },
        "TargetIps" : {
          "c2jName" : "TargetIps",
          "c2jShape" : "TargetList",
          "deprecated" : false,
          "documentation" : "<p>The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.</p> <p> <code>TargetIps</code> is available only when the value of <code>Rule type</code> is <code>FORWARD</code>.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.</p> <p> <code>TargetIps</code> is available only when the value of <code>Rule type</code> is <code>FORWARD</code>.</p>\n@param targetIps The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.</p> <p> <code>TargetIps</code> is available only when the value of <code>Rule type</code> is <code>FORWARD</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTargetIps",
          "getterDocumentation" : "/**<p>The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.</p> <p> <code>TargetIps</code> is available only when the value of <code>Rule type</code> is <code>FORWARD</code>.</p>\n@return The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.</p> <p> <code>TargetIps</code> is available only when the value of <code>Rule type</code> is <code>FORWARD</code>.*/",
          "getterMethodName" : "getTargetIps",
          "getterModel" : {
            "returnType" : "java.util.List<TargetAddress>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TargetIps",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TargetIps",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "TargetAddress",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "TargetAddress",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "TargetAddress",
                "variableName" : "member",
                "variableType" : "TargetAddress",
                "documentation" : "",
                "simpleType" : "TargetAddress",
                "variableSetterType" : "TargetAddress"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "TargetAddress",
                "variableName" : "member",
                "variableType" : "TargetAddress",
                "documentation" : "",
                "simpleType" : "TargetAddress",
                "variableSetterType" : "TargetAddress"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "TargetAddress",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "TargetAddress",
            "templateImplType" : "java.util.ArrayList<TargetAddress>",
            "templateType" : "java.util.List<TargetAddress>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "TargetIps",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.</p> <p> <code>TargetIps</code> is available only when the value of <code>Rule type</code> is <code>FORWARD</code>.</p>\n@param targetIps The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.</p> <p> <code>TargetIps</code> is available only when the value of <code>Rule type</code> is <code>FORWARD</code>.*/",
          "setterMethodName" : "setTargetIps",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<TargetAddress>",
            "variableName" : "targetIps",
            "variableType" : "java.util.List<TargetAddress>",
            "documentation" : "",
            "simpleType" : "List<TargetAddress>",
            "variableSetterType" : "java.util.Collection<TargetAddress>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.</p> <p> <code>TargetIps</code> is available only when the value of <code>Rule type</code> is <code>FORWARD</code>.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTargetIps(java.util.Collection)} or {@link #withTargetIps(java.util.Collection)} if you want to override the existing values.</p>\n@param targetIps The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.</p> <p> <code>TargetIps</code> is available only when the value of <code>Rule type</code> is <code>FORWARD</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<TargetAddress>",
            "variableName" : "targetIps",
            "variableType" : "java.util.List<TargetAddress>",
            "documentation" : "<p>The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.</p> <p> <code>TargetIps</code> is available only when the value of <code>Rule type</code> is <code>FORWARD</code>.</p>",
            "simpleType" : "List<TargetAddress>",
            "variableSetterType" : "java.util.Collection<TargetAddress>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "CreatorRequestId", "RuleType", "DomainName" ],
      "shapeName" : "CreateResolverRuleRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "CreateResolverRuleRequest",
        "variableName" : "createResolverRuleRequest",
        "variableType" : "CreateResolverRuleRequest",
        "documentation" : null,
        "simpleType" : "CreateResolverRuleRequest",
        "variableSetterType" : "CreateResolverRuleRequest"
      },
      "wrapper" : false
    },
    "CreateResolverRuleResult" : {
      "c2jName" : "CreateResolverRuleResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.response.CreateResolverRuleResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResolverRule",
        "c2jShape" : "ResolverRule",
        "deprecated" : false,
        "documentation" : "<p>Information about the <code>CreateResolverRule</code> request, including the status of the request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the <code>CreateResolverRule</code> request, including the status of the request.</p>\n@param resolverRule Information about the <code>CreateResolverRule</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverRule",
        "getterDocumentation" : "/**<p>Information about the <code>CreateResolverRule</code> request, including the status of the request.</p>\n@return Information about the <code>CreateResolverRule</code> request, including the status of the request.*/",
        "getterMethodName" : "getResolverRule",
        "getterModel" : {
          "returnType" : "ResolverRule",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverRule",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverRule",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ResolverRule",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Information about the <code>CreateResolverRule</code> request, including the status of the request.</p>\n@param resolverRule Information about the <code>CreateResolverRule</code> request, including the status of the request.*/",
        "setterMethodName" : "setResolverRule",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverRule",
          "variableName" : "resolverRule",
          "variableType" : "ResolverRule",
          "documentation" : "",
          "simpleType" : "ResolverRule",
          "variableSetterType" : "ResolverRule"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the <code>CreateResolverRule</code> request, including the status of the request.</p>\n@param resolverRule Information about the <code>CreateResolverRule</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverRule",
          "variableName" : "resolverRule",
          "variableType" : "ResolverRule",
          "documentation" : "<p>Information about the <code>CreateResolverRule</code> request, including the status of the request.</p>",
          "simpleType" : "ResolverRule",
          "variableSetterType" : "ResolverRule"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverRule" : {
          "c2jName" : "ResolverRule",
          "c2jShape" : "ResolverRule",
          "deprecated" : false,
          "documentation" : "<p>Information about the <code>CreateResolverRule</code> request, including the status of the request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the <code>CreateResolverRule</code> request, including the status of the request.</p>\n@param resolverRule Information about the <code>CreateResolverRule</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverRule",
          "getterDocumentation" : "/**<p>Information about the <code>CreateResolverRule</code> request, including the status of the request.</p>\n@return Information about the <code>CreateResolverRule</code> request, including the status of the request.*/",
          "getterMethodName" : "getResolverRule",
          "getterModel" : {
            "returnType" : "ResolverRule",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverRule",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverRule",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ResolverRule",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Information about the <code>CreateResolverRule</code> request, including the status of the request.</p>\n@param resolverRule Information about the <code>CreateResolverRule</code> request, including the status of the request.*/",
          "setterMethodName" : "setResolverRule",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverRule",
            "variableName" : "resolverRule",
            "variableType" : "ResolverRule",
            "documentation" : "",
            "simpleType" : "ResolverRule",
            "variableSetterType" : "ResolverRule"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the <code>CreateResolverRule</code> request, including the status of the request.</p>\n@param resolverRule Information about the <code>CreateResolverRule</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverRule",
            "variableName" : "resolverRule",
            "variableType" : "ResolverRule",
            "documentation" : "<p>Information about the <code>CreateResolverRule</code> request, including the status of the request.</p>",
            "simpleType" : "ResolverRule",
            "variableSetterType" : "ResolverRule"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CreateResolverRuleResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "CreateResolverRuleResult",
        "variableName" : "createResolverRuleResult",
        "variableType" : "CreateResolverRuleResult",
        "documentation" : null,
        "simpleType" : "CreateResolverRuleResult",
        "variableSetterType" : "CreateResolverRuleResult"
      },
      "wrapper" : false
    },
    "DeleteResolverEndpointRequest" : {
      "c2jName" : "DeleteResolverEndpointRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.request.DeleteResolverEndpointRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DeleteResolverEndpoint",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.DeleteResolverEndpoint",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResolverEndpointId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the Resolver endpoint that you want to delete.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to delete.</p>\n@param resolverEndpointId The ID of the Resolver endpoint that you want to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverEndpointId",
        "getterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to delete.</p>\n@return The ID of the Resolver endpoint that you want to delete.*/",
        "getterMethodName" : "getResolverEndpointId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverEndpointId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverEndpointId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverEndpointId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to delete.</p>\n@param resolverEndpointId The ID of the Resolver endpoint that you want to delete.*/",
        "setterMethodName" : "setResolverEndpointId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverEndpointId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to delete.</p>\n@param resolverEndpointId The ID of the Resolver endpoint that you want to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverEndpointId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the Resolver endpoint that you want to delete.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverEndpointId" : {
          "c2jName" : "ResolverEndpointId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the Resolver endpoint that you want to delete.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to delete.</p>\n@param resolverEndpointId The ID of the Resolver endpoint that you want to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverEndpointId",
          "getterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to delete.</p>\n@return The ID of the Resolver endpoint that you want to delete.*/",
          "getterMethodName" : "getResolverEndpointId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverEndpointId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverEndpointId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverEndpointId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to delete.</p>\n@param resolverEndpointId The ID of the Resolver endpoint that you want to delete.*/",
          "setterMethodName" : "setResolverEndpointId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverEndpointId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to delete.</p>\n@param resolverEndpointId The ID of the Resolver endpoint that you want to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverEndpointId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the Resolver endpoint that you want to delete.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResolverEndpointId" ],
      "shapeName" : "DeleteResolverEndpointRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteResolverEndpointRequest",
        "variableName" : "deleteResolverEndpointRequest",
        "variableType" : "DeleteResolverEndpointRequest",
        "documentation" : null,
        "simpleType" : "DeleteResolverEndpointRequest",
        "variableSetterType" : "DeleteResolverEndpointRequest"
      },
      "wrapper" : false
    },
    "DeleteResolverEndpointResult" : {
      "c2jName" : "DeleteResolverEndpointResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.response.DeleteResolverEndpointResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResolverEndpoint",
        "c2jShape" : "ResolverEndpoint",
        "deprecated" : false,
        "documentation" : "<p>Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.</p>\n@param resolverEndpoint Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverEndpoint",
        "getterDocumentation" : "/**<p>Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.</p>\n@return Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.*/",
        "getterMethodName" : "getResolverEndpoint",
        "getterModel" : {
          "returnType" : "ResolverEndpoint",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverEndpoint",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverEndpoint",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ResolverEndpoint",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.</p>\n@param resolverEndpoint Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.*/",
        "setterMethodName" : "setResolverEndpoint",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverEndpoint",
          "variableName" : "resolverEndpoint",
          "variableType" : "ResolverEndpoint",
          "documentation" : "",
          "simpleType" : "ResolverEndpoint",
          "variableSetterType" : "ResolverEndpoint"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.</p>\n@param resolverEndpoint Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverEndpoint",
          "variableName" : "resolverEndpoint",
          "variableType" : "ResolverEndpoint",
          "documentation" : "<p>Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.</p>",
          "simpleType" : "ResolverEndpoint",
          "variableSetterType" : "ResolverEndpoint"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverEndpoint" : {
          "c2jName" : "ResolverEndpoint",
          "c2jShape" : "ResolverEndpoint",
          "deprecated" : false,
          "documentation" : "<p>Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.</p>\n@param resolverEndpoint Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverEndpoint",
          "getterDocumentation" : "/**<p>Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.</p>\n@return Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.*/",
          "getterMethodName" : "getResolverEndpoint",
          "getterModel" : {
            "returnType" : "ResolverEndpoint",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverEndpoint",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverEndpoint",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ResolverEndpoint",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.</p>\n@param resolverEndpoint Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.*/",
          "setterMethodName" : "setResolverEndpoint",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverEndpoint",
            "variableName" : "resolverEndpoint",
            "variableType" : "ResolverEndpoint",
            "documentation" : "",
            "simpleType" : "ResolverEndpoint",
            "variableSetterType" : "ResolverEndpoint"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.</p>\n@param resolverEndpoint Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverEndpoint",
            "variableName" : "resolverEndpoint",
            "variableType" : "ResolverEndpoint",
            "documentation" : "<p>Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.</p>",
            "simpleType" : "ResolverEndpoint",
            "variableSetterType" : "ResolverEndpoint"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DeleteResolverEndpointResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteResolverEndpointResult",
        "variableName" : "deleteResolverEndpointResult",
        "variableType" : "DeleteResolverEndpointResult",
        "documentation" : null,
        "simpleType" : "DeleteResolverEndpointResult",
        "variableSetterType" : "DeleteResolverEndpointResult"
      },
      "wrapper" : false
    },
    "DeleteResolverQueryLogConfigRequest" : {
      "c2jName" : "DeleteResolverQueryLogConfigRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.request.DeleteResolverQueryLogConfigRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DeleteResolverQueryLogConfig",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.DeleteResolverQueryLogConfig",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResolverQueryLogConfigId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the query logging configuration that you want to delete.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the query logging configuration that you want to delete.</p>\n@param resolverQueryLogConfigId The ID of the query logging configuration that you want to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverQueryLogConfigId",
        "getterDocumentation" : "/**<p>The ID of the query logging configuration that you want to delete.</p>\n@return The ID of the query logging configuration that you want to delete.*/",
        "getterMethodName" : "getResolverQueryLogConfigId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverQueryLogConfigId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverQueryLogConfigId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverQueryLogConfigId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the query logging configuration that you want to delete.</p>\n@param resolverQueryLogConfigId The ID of the query logging configuration that you want to delete.*/",
        "setterMethodName" : "setResolverQueryLogConfigId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverQueryLogConfigId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the query logging configuration that you want to delete.</p>\n@param resolverQueryLogConfigId The ID of the query logging configuration that you want to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverQueryLogConfigId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the query logging configuration that you want to delete.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverQueryLogConfigId" : {
          "c2jName" : "ResolverQueryLogConfigId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the query logging configuration that you want to delete.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the query logging configuration that you want to delete.</p>\n@param resolverQueryLogConfigId The ID of the query logging configuration that you want to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverQueryLogConfigId",
          "getterDocumentation" : "/**<p>The ID of the query logging configuration that you want to delete.</p>\n@return The ID of the query logging configuration that you want to delete.*/",
          "getterMethodName" : "getResolverQueryLogConfigId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverQueryLogConfigId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverQueryLogConfigId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverQueryLogConfigId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the query logging configuration that you want to delete.</p>\n@param resolverQueryLogConfigId The ID of the query logging configuration that you want to delete.*/",
          "setterMethodName" : "setResolverQueryLogConfigId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverQueryLogConfigId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the query logging configuration that you want to delete.</p>\n@param resolverQueryLogConfigId The ID of the query logging configuration that you want to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverQueryLogConfigId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the query logging configuration that you want to delete.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResolverQueryLogConfigId" ],
      "shapeName" : "DeleteResolverQueryLogConfigRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteResolverQueryLogConfigRequest",
        "variableName" : "deleteResolverQueryLogConfigRequest",
        "variableType" : "DeleteResolverQueryLogConfigRequest",
        "documentation" : null,
        "simpleType" : "DeleteResolverQueryLogConfigRequest",
        "variableSetterType" : "DeleteResolverQueryLogConfigRequest"
      },
      "wrapper" : false
    },
    "DeleteResolverQueryLogConfigResult" : {
      "c2jName" : "DeleteResolverQueryLogConfigResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.response.DeleteResolverQueryLogConfigResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResolverQueryLogConfig",
        "c2jShape" : "ResolverQueryLogConfig",
        "deprecated" : false,
        "documentation" : "<p>Information about the query logging configuration that you deleted, including the status of the request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the query logging configuration that you deleted, including the status of the request.</p>\n@param resolverQueryLogConfig Information about the query logging configuration that you deleted, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverQueryLogConfig",
        "getterDocumentation" : "/**<p>Information about the query logging configuration that you deleted, including the status of the request.</p>\n@return Information about the query logging configuration that you deleted, including the status of the request.*/",
        "getterMethodName" : "getResolverQueryLogConfig",
        "getterModel" : {
          "returnType" : "ResolverQueryLogConfig",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverQueryLogConfig",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverQueryLogConfig",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ResolverQueryLogConfig",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Information about the query logging configuration that you deleted, including the status of the request.</p>\n@param resolverQueryLogConfig Information about the query logging configuration that you deleted, including the status of the request.*/",
        "setterMethodName" : "setResolverQueryLogConfig",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverQueryLogConfig",
          "variableName" : "resolverQueryLogConfig",
          "variableType" : "ResolverQueryLogConfig",
          "documentation" : "",
          "simpleType" : "ResolverQueryLogConfig",
          "variableSetterType" : "ResolverQueryLogConfig"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the query logging configuration that you deleted, including the status of the request.</p>\n@param resolverQueryLogConfig Information about the query logging configuration that you deleted, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverQueryLogConfig",
          "variableName" : "resolverQueryLogConfig",
          "variableType" : "ResolverQueryLogConfig",
          "documentation" : "<p>Information about the query logging configuration that you deleted, including the status of the request.</p>",
          "simpleType" : "ResolverQueryLogConfig",
          "variableSetterType" : "ResolverQueryLogConfig"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverQueryLogConfig" : {
          "c2jName" : "ResolverQueryLogConfig",
          "c2jShape" : "ResolverQueryLogConfig",
          "deprecated" : false,
          "documentation" : "<p>Information about the query logging configuration that you deleted, including the status of the request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the query logging configuration that you deleted, including the status of the request.</p>\n@param resolverQueryLogConfig Information about the query logging configuration that you deleted, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverQueryLogConfig",
          "getterDocumentation" : "/**<p>Information about the query logging configuration that you deleted, including the status of the request.</p>\n@return Information about the query logging configuration that you deleted, including the status of the request.*/",
          "getterMethodName" : "getResolverQueryLogConfig",
          "getterModel" : {
            "returnType" : "ResolverQueryLogConfig",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverQueryLogConfig",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverQueryLogConfig",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ResolverQueryLogConfig",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Information about the query logging configuration that you deleted, including the status of the request.</p>\n@param resolverQueryLogConfig Information about the query logging configuration that you deleted, including the status of the request.*/",
          "setterMethodName" : "setResolverQueryLogConfig",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverQueryLogConfig",
            "variableName" : "resolverQueryLogConfig",
            "variableType" : "ResolverQueryLogConfig",
            "documentation" : "",
            "simpleType" : "ResolverQueryLogConfig",
            "variableSetterType" : "ResolverQueryLogConfig"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the query logging configuration that you deleted, including the status of the request.</p>\n@param resolverQueryLogConfig Information about the query logging configuration that you deleted, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverQueryLogConfig",
            "variableName" : "resolverQueryLogConfig",
            "variableType" : "ResolverQueryLogConfig",
            "documentation" : "<p>Information about the query logging configuration that you deleted, including the status of the request.</p>",
            "simpleType" : "ResolverQueryLogConfig",
            "variableSetterType" : "ResolverQueryLogConfig"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DeleteResolverQueryLogConfigResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteResolverQueryLogConfigResult",
        "variableName" : "deleteResolverQueryLogConfigResult",
        "variableType" : "DeleteResolverQueryLogConfigResult",
        "documentation" : null,
        "simpleType" : "DeleteResolverQueryLogConfigResult",
        "variableSetterType" : "DeleteResolverQueryLogConfigResult"
      },
      "wrapper" : false
    },
    "DeleteResolverRuleRequest" : {
      "c2jName" : "DeleteResolverRuleRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.request.DeleteResolverRuleRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DeleteResolverRule",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.DeleteResolverRule",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResolverRuleId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the Resolver rule that you want to delete.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the Resolver rule that you want to delete.</p>\n@param resolverRuleId The ID of the Resolver rule that you want to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverRuleId",
        "getterDocumentation" : "/**<p>The ID of the Resolver rule that you want to delete.</p>\n@return The ID of the Resolver rule that you want to delete.*/",
        "getterMethodName" : "getResolverRuleId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverRuleId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverRuleId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverRuleId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the Resolver rule that you want to delete.</p>\n@param resolverRuleId The ID of the Resolver rule that you want to delete.*/",
        "setterMethodName" : "setResolverRuleId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverRuleId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the Resolver rule that you want to delete.</p>\n@param resolverRuleId The ID of the Resolver rule that you want to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverRuleId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the Resolver rule that you want to delete.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverRuleId" : {
          "c2jName" : "ResolverRuleId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the Resolver rule that you want to delete.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the Resolver rule that you want to delete.</p>\n@param resolverRuleId The ID of the Resolver rule that you want to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverRuleId",
          "getterDocumentation" : "/**<p>The ID of the Resolver rule that you want to delete.</p>\n@return The ID of the Resolver rule that you want to delete.*/",
          "getterMethodName" : "getResolverRuleId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverRuleId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverRuleId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverRuleId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the Resolver rule that you want to delete.</p>\n@param resolverRuleId The ID of the Resolver rule that you want to delete.*/",
          "setterMethodName" : "setResolverRuleId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverRuleId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the Resolver rule that you want to delete.</p>\n@param resolverRuleId The ID of the Resolver rule that you want to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverRuleId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the Resolver rule that you want to delete.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResolverRuleId" ],
      "shapeName" : "DeleteResolverRuleRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteResolverRuleRequest",
        "variableName" : "deleteResolverRuleRequest",
        "variableType" : "DeleteResolverRuleRequest",
        "documentation" : null,
        "simpleType" : "DeleteResolverRuleRequest",
        "variableSetterType" : "DeleteResolverRuleRequest"
      },
      "wrapper" : false
    },
    "DeleteResolverRuleResult" : {
      "c2jName" : "DeleteResolverRuleResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.response.DeleteResolverRuleResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResolverRule",
        "c2jShape" : "ResolverRule",
        "deprecated" : false,
        "documentation" : "<p>Information about the <code>DeleteResolverRule</code> request, including the status of the request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the <code>DeleteResolverRule</code> request, including the status of the request.</p>\n@param resolverRule Information about the <code>DeleteResolverRule</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverRule",
        "getterDocumentation" : "/**<p>Information about the <code>DeleteResolverRule</code> request, including the status of the request.</p>\n@return Information about the <code>DeleteResolverRule</code> request, including the status of the request.*/",
        "getterMethodName" : "getResolverRule",
        "getterModel" : {
          "returnType" : "ResolverRule",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverRule",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverRule",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ResolverRule",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Information about the <code>DeleteResolverRule</code> request, including the status of the request.</p>\n@param resolverRule Information about the <code>DeleteResolverRule</code> request, including the status of the request.*/",
        "setterMethodName" : "setResolverRule",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverRule",
          "variableName" : "resolverRule",
          "variableType" : "ResolverRule",
          "documentation" : "",
          "simpleType" : "ResolverRule",
          "variableSetterType" : "ResolverRule"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the <code>DeleteResolverRule</code> request, including the status of the request.</p>\n@param resolverRule Information about the <code>DeleteResolverRule</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverRule",
          "variableName" : "resolverRule",
          "variableType" : "ResolverRule",
          "documentation" : "<p>Information about the <code>DeleteResolverRule</code> request, including the status of the request.</p>",
          "simpleType" : "ResolverRule",
          "variableSetterType" : "ResolverRule"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverRule" : {
          "c2jName" : "ResolverRule",
          "c2jShape" : "ResolverRule",
          "deprecated" : false,
          "documentation" : "<p>Information about the <code>DeleteResolverRule</code> request, including the status of the request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the <code>DeleteResolverRule</code> request, including the status of the request.</p>\n@param resolverRule Information about the <code>DeleteResolverRule</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverRule",
          "getterDocumentation" : "/**<p>Information about the <code>DeleteResolverRule</code> request, including the status of the request.</p>\n@return Information about the <code>DeleteResolverRule</code> request, including the status of the request.*/",
          "getterMethodName" : "getResolverRule",
          "getterModel" : {
            "returnType" : "ResolverRule",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverRule",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverRule",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ResolverRule",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Information about the <code>DeleteResolverRule</code> request, including the status of the request.</p>\n@param resolverRule Information about the <code>DeleteResolverRule</code> request, including the status of the request.*/",
          "setterMethodName" : "setResolverRule",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverRule",
            "variableName" : "resolverRule",
            "variableType" : "ResolverRule",
            "documentation" : "",
            "simpleType" : "ResolverRule",
            "variableSetterType" : "ResolverRule"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the <code>DeleteResolverRule</code> request, including the status of the request.</p>\n@param resolverRule Information about the <code>DeleteResolverRule</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverRule",
            "variableName" : "resolverRule",
            "variableType" : "ResolverRule",
            "documentation" : "<p>Information about the <code>DeleteResolverRule</code> request, including the status of the request.</p>",
            "simpleType" : "ResolverRule",
            "variableSetterType" : "ResolverRule"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DeleteResolverRuleResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteResolverRuleResult",
        "variableName" : "deleteResolverRuleResult",
        "variableType" : "DeleteResolverRuleResult",
        "documentation" : null,
        "simpleType" : "DeleteResolverRuleResult",
        "variableSetterType" : "DeleteResolverRuleResult"
      },
      "wrapper" : false
    },
    "DisassociateResolverEndpointIpAddressRequest" : {
      "c2jName" : "DisassociateResolverEndpointIpAddressRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.request.DisassociateResolverEndpointIpAddressRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DisassociateResolverEndpointIpAddress",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.DisassociateResolverEndpointIpAddress",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResolverEndpointId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the Resolver endpoint that you want to disassociate an IP address from.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to disassociate an IP address from.</p>\n@param resolverEndpointId The ID of the Resolver endpoint that you want to disassociate an IP address from.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverEndpointId",
        "getterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to disassociate an IP address from.</p>\n@return The ID of the Resolver endpoint that you want to disassociate an IP address from.*/",
        "getterMethodName" : "getResolverEndpointId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverEndpointId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverEndpointId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverEndpointId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to disassociate an IP address from.</p>\n@param resolverEndpointId The ID of the Resolver endpoint that you want to disassociate an IP address from.*/",
        "setterMethodName" : "setResolverEndpointId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverEndpointId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to disassociate an IP address from.</p>\n@param resolverEndpointId The ID of the Resolver endpoint that you want to disassociate an IP address from.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverEndpointId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the Resolver endpoint that you want to disassociate an IP address from.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "IpAddress",
        "c2jShape" : "IpAddressUpdate",
        "deprecated" : false,
        "documentation" : "<p>The IPv4 address that you want to remove from a Resolver endpoint.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The IPv4 address that you want to remove from a Resolver endpoint.</p>\n@param ipAddress The IPv4 address that you want to remove from a Resolver endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withIpAddress",
        "getterDocumentation" : "/**<p>The IPv4 address that you want to remove from a Resolver endpoint.</p>\n@return The IPv4 address that you want to remove from a Resolver endpoint.*/",
        "getterMethodName" : "getIpAddress",
        "getterModel" : {
          "returnType" : "IpAddressUpdate",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "IpAddress",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "IpAddress",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "IpAddress",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The IPv4 address that you want to remove from a Resolver endpoint.</p>\n@param ipAddress The IPv4 address that you want to remove from a Resolver endpoint.*/",
        "setterMethodName" : "setIpAddress",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "IpAddressUpdate",
          "variableName" : "ipAddress",
          "variableType" : "IpAddressUpdate",
          "documentation" : "",
          "simpleType" : "IpAddressUpdate",
          "variableSetterType" : "IpAddressUpdate"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The IPv4 address that you want to remove from a Resolver endpoint.</p>\n@param ipAddress The IPv4 address that you want to remove from a Resolver endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "IpAddressUpdate",
          "variableName" : "ipAddress",
          "variableType" : "IpAddressUpdate",
          "documentation" : "<p>The IPv4 address that you want to remove from a Resolver endpoint.</p>",
          "simpleType" : "IpAddressUpdate",
          "variableSetterType" : "IpAddressUpdate"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "IpAddress" : {
          "c2jName" : "IpAddress",
          "c2jShape" : "IpAddressUpdate",
          "deprecated" : false,
          "documentation" : "<p>The IPv4 address that you want to remove from a Resolver endpoint.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The IPv4 address that you want to remove from a Resolver endpoint.</p>\n@param ipAddress The IPv4 address that you want to remove from a Resolver endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withIpAddress",
          "getterDocumentation" : "/**<p>The IPv4 address that you want to remove from a Resolver endpoint.</p>\n@return The IPv4 address that you want to remove from a Resolver endpoint.*/",
          "getterMethodName" : "getIpAddress",
          "getterModel" : {
            "returnType" : "IpAddressUpdate",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "IpAddress",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "IpAddress",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "IpAddress",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The IPv4 address that you want to remove from a Resolver endpoint.</p>\n@param ipAddress The IPv4 address that you want to remove from a Resolver endpoint.*/",
          "setterMethodName" : "setIpAddress",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "IpAddressUpdate",
            "variableName" : "ipAddress",
            "variableType" : "IpAddressUpdate",
            "documentation" : "",
            "simpleType" : "IpAddressUpdate",
            "variableSetterType" : "IpAddressUpdate"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The IPv4 address that you want to remove from a Resolver endpoint.</p>\n@param ipAddress The IPv4 address that you want to remove from a Resolver endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "IpAddressUpdate",
            "variableName" : "ipAddress",
            "variableType" : "IpAddressUpdate",
            "documentation" : "<p>The IPv4 address that you want to remove from a Resolver endpoint.</p>",
            "simpleType" : "IpAddressUpdate",
            "variableSetterType" : "IpAddressUpdate"
          },
          "xmlNameSpaceUri" : null
        },
        "ResolverEndpointId" : {
          "c2jName" : "ResolverEndpointId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the Resolver endpoint that you want to disassociate an IP address from.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to disassociate an IP address from.</p>\n@param resolverEndpointId The ID of the Resolver endpoint that you want to disassociate an IP address from.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverEndpointId",
          "getterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to disassociate an IP address from.</p>\n@return The ID of the Resolver endpoint that you want to disassociate an IP address from.*/",
          "getterMethodName" : "getResolverEndpointId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverEndpointId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverEndpointId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverEndpointId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to disassociate an IP address from.</p>\n@param resolverEndpointId The ID of the Resolver endpoint that you want to disassociate an IP address from.*/",
          "setterMethodName" : "setResolverEndpointId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverEndpointId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to disassociate an IP address from.</p>\n@param resolverEndpointId The ID of the Resolver endpoint that you want to disassociate an IP address from.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverEndpointId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the Resolver endpoint that you want to disassociate an IP address from.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResolverEndpointId", "IpAddress" ],
      "shapeName" : "DisassociateResolverEndpointIpAddressRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DisassociateResolverEndpointIpAddressRequest",
        "variableName" : "disassociateResolverEndpointIpAddressRequest",
        "variableType" : "DisassociateResolverEndpointIpAddressRequest",
        "documentation" : null,
        "simpleType" : "DisassociateResolverEndpointIpAddressRequest",
        "variableSetterType" : "DisassociateResolverEndpointIpAddressRequest"
      },
      "wrapper" : false
    },
    "DisassociateResolverEndpointIpAddressResult" : {
      "c2jName" : "DisassociateResolverEndpointIpAddressResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.response.DisassociateResolverEndpointIpAddressResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResolverEndpoint",
        "c2jShape" : "ResolverEndpoint",
        "deprecated" : false,
        "documentation" : "<p>The response to an <code>DisassociateResolverEndpointIpAddress</code> request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The response to an <code>DisassociateResolverEndpointIpAddress</code> request.</p>\n@param resolverEndpoint The response to an <code>DisassociateResolverEndpointIpAddress</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverEndpoint",
        "getterDocumentation" : "/**<p>The response to an <code>DisassociateResolverEndpointIpAddress</code> request.</p>\n@return The response to an <code>DisassociateResolverEndpointIpAddress</code> request.*/",
        "getterMethodName" : "getResolverEndpoint",
        "getterModel" : {
          "returnType" : "ResolverEndpoint",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverEndpoint",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverEndpoint",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ResolverEndpoint",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The response to an <code>DisassociateResolverEndpointIpAddress</code> request.</p>\n@param resolverEndpoint The response to an <code>DisassociateResolverEndpointIpAddress</code> request.*/",
        "setterMethodName" : "setResolverEndpoint",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverEndpoint",
          "variableName" : "resolverEndpoint",
          "variableType" : "ResolverEndpoint",
          "documentation" : "",
          "simpleType" : "ResolverEndpoint",
          "variableSetterType" : "ResolverEndpoint"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The response to an <code>DisassociateResolverEndpointIpAddress</code> request.</p>\n@param resolverEndpoint The response to an <code>DisassociateResolverEndpointIpAddress</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverEndpoint",
          "variableName" : "resolverEndpoint",
          "variableType" : "ResolverEndpoint",
          "documentation" : "<p>The response to an <code>DisassociateResolverEndpointIpAddress</code> request.</p>",
          "simpleType" : "ResolverEndpoint",
          "variableSetterType" : "ResolverEndpoint"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverEndpoint" : {
          "c2jName" : "ResolverEndpoint",
          "c2jShape" : "ResolverEndpoint",
          "deprecated" : false,
          "documentation" : "<p>The response to an <code>DisassociateResolverEndpointIpAddress</code> request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The response to an <code>DisassociateResolverEndpointIpAddress</code> request.</p>\n@param resolverEndpoint The response to an <code>DisassociateResolverEndpointIpAddress</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverEndpoint",
          "getterDocumentation" : "/**<p>The response to an <code>DisassociateResolverEndpointIpAddress</code> request.</p>\n@return The response to an <code>DisassociateResolverEndpointIpAddress</code> request.*/",
          "getterMethodName" : "getResolverEndpoint",
          "getterModel" : {
            "returnType" : "ResolverEndpoint",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverEndpoint",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverEndpoint",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ResolverEndpoint",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The response to an <code>DisassociateResolverEndpointIpAddress</code> request.</p>\n@param resolverEndpoint The response to an <code>DisassociateResolverEndpointIpAddress</code> request.*/",
          "setterMethodName" : "setResolverEndpoint",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverEndpoint",
            "variableName" : "resolverEndpoint",
            "variableType" : "ResolverEndpoint",
            "documentation" : "",
            "simpleType" : "ResolverEndpoint",
            "variableSetterType" : "ResolverEndpoint"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The response to an <code>DisassociateResolverEndpointIpAddress</code> request.</p>\n@param resolverEndpoint The response to an <code>DisassociateResolverEndpointIpAddress</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverEndpoint",
            "variableName" : "resolverEndpoint",
            "variableType" : "ResolverEndpoint",
            "documentation" : "<p>The response to an <code>DisassociateResolverEndpointIpAddress</code> request.</p>",
            "simpleType" : "ResolverEndpoint",
            "variableSetterType" : "ResolverEndpoint"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DisassociateResolverEndpointIpAddressResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DisassociateResolverEndpointIpAddressResult",
        "variableName" : "disassociateResolverEndpointIpAddressResult",
        "variableType" : "DisassociateResolverEndpointIpAddressResult",
        "documentation" : null,
        "simpleType" : "DisassociateResolverEndpointIpAddressResult",
        "variableSetterType" : "DisassociateResolverEndpointIpAddressResult"
      },
      "wrapper" : false
    },
    "DisassociateResolverQueryLogConfigRequest" : {
      "c2jName" : "DisassociateResolverQueryLogConfigRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.request.DisassociateResolverQueryLogConfigRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DisassociateResolverQueryLogConfig",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.DisassociateResolverQueryLogConfig",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResolverQueryLogConfigId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the query logging configuration that you want to disassociate a specified VPC from.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the query logging configuration that you want to disassociate a specified VPC from.</p>\n@param resolverQueryLogConfigId The ID of the query logging configuration that you want to disassociate a specified VPC from.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverQueryLogConfigId",
        "getterDocumentation" : "/**<p>The ID of the query logging configuration that you want to disassociate a specified VPC from.</p>\n@return The ID of the query logging configuration that you want to disassociate a specified VPC from.*/",
        "getterMethodName" : "getResolverQueryLogConfigId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverQueryLogConfigId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverQueryLogConfigId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverQueryLogConfigId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the query logging configuration that you want to disassociate a specified VPC from.</p>\n@param resolverQueryLogConfigId The ID of the query logging configuration that you want to disassociate a specified VPC from.*/",
        "setterMethodName" : "setResolverQueryLogConfigId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverQueryLogConfigId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the query logging configuration that you want to disassociate a specified VPC from.</p>\n@param resolverQueryLogConfigId The ID of the query logging configuration that you want to disassociate a specified VPC from.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverQueryLogConfigId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the query logging configuration that you want to disassociate a specified VPC from.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ResourceId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the Amazon VPC that you want to disassociate from a specified query logging configuration.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the Amazon VPC that you want to disassociate from a specified query logging configuration.</p>\n@param resourceId The ID of the Amazon VPC that you want to disassociate from a specified query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceId",
        "getterDocumentation" : "/**<p>The ID of the Amazon VPC that you want to disassociate from a specified query logging configuration.</p>\n@return The ID of the Amazon VPC that you want to disassociate from a specified query logging configuration.*/",
        "getterMethodName" : "getResourceId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the Amazon VPC that you want to disassociate from a specified query logging configuration.</p>\n@param resourceId The ID of the Amazon VPC that you want to disassociate from a specified query logging configuration.*/",
        "setterMethodName" : "setResourceId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the Amazon VPC that you want to disassociate from a specified query logging configuration.</p>\n@param resourceId The ID of the Amazon VPC that you want to disassociate from a specified query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the Amazon VPC that you want to disassociate from a specified query logging configuration.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverQueryLogConfigId" : {
          "c2jName" : "ResolverQueryLogConfigId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the query logging configuration that you want to disassociate a specified VPC from.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the query logging configuration that you want to disassociate a specified VPC from.</p>\n@param resolverQueryLogConfigId The ID of the query logging configuration that you want to disassociate a specified VPC from.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverQueryLogConfigId",
          "getterDocumentation" : "/**<p>The ID of the query logging configuration that you want to disassociate a specified VPC from.</p>\n@return The ID of the query logging configuration that you want to disassociate a specified VPC from.*/",
          "getterMethodName" : "getResolverQueryLogConfigId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverQueryLogConfigId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverQueryLogConfigId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverQueryLogConfigId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the query logging configuration that you want to disassociate a specified VPC from.</p>\n@param resolverQueryLogConfigId The ID of the query logging configuration that you want to disassociate a specified VPC from.*/",
          "setterMethodName" : "setResolverQueryLogConfigId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverQueryLogConfigId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the query logging configuration that you want to disassociate a specified VPC from.</p>\n@param resolverQueryLogConfigId The ID of the query logging configuration that you want to disassociate a specified VPC from.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverQueryLogConfigId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the query logging configuration that you want to disassociate a specified VPC from.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResourceId" : {
          "c2jName" : "ResourceId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the Amazon VPC that you want to disassociate from a specified query logging configuration.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the Amazon VPC that you want to disassociate from a specified query logging configuration.</p>\n@param resourceId The ID of the Amazon VPC that you want to disassociate from a specified query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceId",
          "getterDocumentation" : "/**<p>The ID of the Amazon VPC that you want to disassociate from a specified query logging configuration.</p>\n@return The ID of the Amazon VPC that you want to disassociate from a specified query logging configuration.*/",
          "getterMethodName" : "getResourceId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the Amazon VPC that you want to disassociate from a specified query logging configuration.</p>\n@param resourceId The ID of the Amazon VPC that you want to disassociate from a specified query logging configuration.*/",
          "setterMethodName" : "setResourceId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the Amazon VPC that you want to disassociate from a specified query logging configuration.</p>\n@param resourceId The ID of the Amazon VPC that you want to disassociate from a specified query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the Amazon VPC that you want to disassociate from a specified query logging configuration.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResolverQueryLogConfigId", "ResourceId" ],
      "shapeName" : "DisassociateResolverQueryLogConfigRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DisassociateResolverQueryLogConfigRequest",
        "variableName" : "disassociateResolverQueryLogConfigRequest",
        "variableType" : "DisassociateResolverQueryLogConfigRequest",
        "documentation" : null,
        "simpleType" : "DisassociateResolverQueryLogConfigRequest",
        "variableSetterType" : "DisassociateResolverQueryLogConfigRequest"
      },
      "wrapper" : false
    },
    "DisassociateResolverQueryLogConfigResult" : {
      "c2jName" : "DisassociateResolverQueryLogConfigResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.response.DisassociateResolverQueryLogConfigResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResolverQueryLogConfigAssociation",
        "c2jShape" : "ResolverQueryLogConfigAssociation",
        "deprecated" : false,
        "documentation" : "<p>A complex type that contains settings for the association that you deleted between an Amazon VPC and a query logging configuration.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A complex type that contains settings for the association that you deleted between an Amazon VPC and a query logging configuration.</p>\n@param resolverQueryLogConfigAssociation A complex type that contains settings for the association that you deleted between an Amazon VPC and a query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverQueryLogConfigAssociation",
        "getterDocumentation" : "/**<p>A complex type that contains settings for the association that you deleted between an Amazon VPC and a query logging configuration.</p>\n@return A complex type that contains settings for the association that you deleted between an Amazon VPC and a query logging configuration.*/",
        "getterMethodName" : "getResolverQueryLogConfigAssociation",
        "getterModel" : {
          "returnType" : "ResolverQueryLogConfigAssociation",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverQueryLogConfigAssociation",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverQueryLogConfigAssociation",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ResolverQueryLogConfigAssociation",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A complex type that contains settings for the association that you deleted between an Amazon VPC and a query logging configuration.</p>\n@param resolverQueryLogConfigAssociation A complex type that contains settings for the association that you deleted between an Amazon VPC and a query logging configuration.*/",
        "setterMethodName" : "setResolverQueryLogConfigAssociation",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverQueryLogConfigAssociation",
          "variableName" : "resolverQueryLogConfigAssociation",
          "variableType" : "ResolverQueryLogConfigAssociation",
          "documentation" : "",
          "simpleType" : "ResolverQueryLogConfigAssociation",
          "variableSetterType" : "ResolverQueryLogConfigAssociation"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A complex type that contains settings for the association that you deleted between an Amazon VPC and a query logging configuration.</p>\n@param resolverQueryLogConfigAssociation A complex type that contains settings for the association that you deleted between an Amazon VPC and a query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverQueryLogConfigAssociation",
          "variableName" : "resolverQueryLogConfigAssociation",
          "variableType" : "ResolverQueryLogConfigAssociation",
          "documentation" : "<p>A complex type that contains settings for the association that you deleted between an Amazon VPC and a query logging configuration.</p>",
          "simpleType" : "ResolverQueryLogConfigAssociation",
          "variableSetterType" : "ResolverQueryLogConfigAssociation"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverQueryLogConfigAssociation" : {
          "c2jName" : "ResolverQueryLogConfigAssociation",
          "c2jShape" : "ResolverQueryLogConfigAssociation",
          "deprecated" : false,
          "documentation" : "<p>A complex type that contains settings for the association that you deleted between an Amazon VPC and a query logging configuration.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A complex type that contains settings for the association that you deleted between an Amazon VPC and a query logging configuration.</p>\n@param resolverQueryLogConfigAssociation A complex type that contains settings for the association that you deleted between an Amazon VPC and a query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverQueryLogConfigAssociation",
          "getterDocumentation" : "/**<p>A complex type that contains settings for the association that you deleted between an Amazon VPC and a query logging configuration.</p>\n@return A complex type that contains settings for the association that you deleted between an Amazon VPC and a query logging configuration.*/",
          "getterMethodName" : "getResolverQueryLogConfigAssociation",
          "getterModel" : {
            "returnType" : "ResolverQueryLogConfigAssociation",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverQueryLogConfigAssociation",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverQueryLogConfigAssociation",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ResolverQueryLogConfigAssociation",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A complex type that contains settings for the association that you deleted between an Amazon VPC and a query logging configuration.</p>\n@param resolverQueryLogConfigAssociation A complex type that contains settings for the association that you deleted between an Amazon VPC and a query logging configuration.*/",
          "setterMethodName" : "setResolverQueryLogConfigAssociation",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverQueryLogConfigAssociation",
            "variableName" : "resolverQueryLogConfigAssociation",
            "variableType" : "ResolverQueryLogConfigAssociation",
            "documentation" : "",
            "simpleType" : "ResolverQueryLogConfigAssociation",
            "variableSetterType" : "ResolverQueryLogConfigAssociation"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A complex type that contains settings for the association that you deleted between an Amazon VPC and a query logging configuration.</p>\n@param resolverQueryLogConfigAssociation A complex type that contains settings for the association that you deleted between an Amazon VPC and a query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverQueryLogConfigAssociation",
            "variableName" : "resolverQueryLogConfigAssociation",
            "variableType" : "ResolverQueryLogConfigAssociation",
            "documentation" : "<p>A complex type that contains settings for the association that you deleted between an Amazon VPC and a query logging configuration.</p>",
            "simpleType" : "ResolverQueryLogConfigAssociation",
            "variableSetterType" : "ResolverQueryLogConfigAssociation"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DisassociateResolverQueryLogConfigResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DisassociateResolverQueryLogConfigResult",
        "variableName" : "disassociateResolverQueryLogConfigResult",
        "variableType" : "DisassociateResolverQueryLogConfigResult",
        "documentation" : null,
        "simpleType" : "DisassociateResolverQueryLogConfigResult",
        "variableSetterType" : "DisassociateResolverQueryLogConfigResult"
      },
      "wrapper" : false
    },
    "DisassociateResolverRuleRequest" : {
      "c2jName" : "DisassociateResolverRuleRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.request.DisassociateResolverRuleRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DisassociateResolverRule",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.DisassociateResolverRule",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "VPCId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the VPC that you want to disassociate the Resolver rule from.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the VPC that you want to disassociate the Resolver rule from.</p>\n@param vPCId The ID of the VPC that you want to disassociate the Resolver rule from.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withVPCId",
        "getterDocumentation" : "/**<p>The ID of the VPC that you want to disassociate the Resolver rule from.</p>\n@return The ID of the VPC that you want to disassociate the Resolver rule from.*/",
        "getterMethodName" : "getVPCId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "VPCId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "VPCId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "VPCId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the VPC that you want to disassociate the Resolver rule from.</p>\n@param vPCId The ID of the VPC that you want to disassociate the Resolver rule from.*/",
        "setterMethodName" : "setVPCId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "vPCId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the VPC that you want to disassociate the Resolver rule from.</p>\n@param vPCId The ID of the VPC that you want to disassociate the Resolver rule from.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "vPCId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the VPC that you want to disassociate the Resolver rule from.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ResolverRuleId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the Resolver rule that you want to disassociate from the specified VPC.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the Resolver rule that you want to disassociate from the specified VPC.</p>\n@param resolverRuleId The ID of the Resolver rule that you want to disassociate from the specified VPC.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverRuleId",
        "getterDocumentation" : "/**<p>The ID of the Resolver rule that you want to disassociate from the specified VPC.</p>\n@return The ID of the Resolver rule that you want to disassociate from the specified VPC.*/",
        "getterMethodName" : "getResolverRuleId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverRuleId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverRuleId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverRuleId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the Resolver rule that you want to disassociate from the specified VPC.</p>\n@param resolverRuleId The ID of the Resolver rule that you want to disassociate from the specified VPC.*/",
        "setterMethodName" : "setResolverRuleId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverRuleId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the Resolver rule that you want to disassociate from the specified VPC.</p>\n@param resolverRuleId The ID of the Resolver rule that you want to disassociate from the specified VPC.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverRuleId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the Resolver rule that you want to disassociate from the specified VPC.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverRuleId" : {
          "c2jName" : "ResolverRuleId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the Resolver rule that you want to disassociate from the specified VPC.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the Resolver rule that you want to disassociate from the specified VPC.</p>\n@param resolverRuleId The ID of the Resolver rule that you want to disassociate from the specified VPC.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverRuleId",
          "getterDocumentation" : "/**<p>The ID of the Resolver rule that you want to disassociate from the specified VPC.</p>\n@return The ID of the Resolver rule that you want to disassociate from the specified VPC.*/",
          "getterMethodName" : "getResolverRuleId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverRuleId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverRuleId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverRuleId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the Resolver rule that you want to disassociate from the specified VPC.</p>\n@param resolverRuleId The ID of the Resolver rule that you want to disassociate from the specified VPC.*/",
          "setterMethodName" : "setResolverRuleId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverRuleId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the Resolver rule that you want to disassociate from the specified VPC.</p>\n@param resolverRuleId The ID of the Resolver rule that you want to disassociate from the specified VPC.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverRuleId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the Resolver rule that you want to disassociate from the specified VPC.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "VPCId" : {
          "c2jName" : "VPCId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the VPC that you want to disassociate the Resolver rule from.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the VPC that you want to disassociate the Resolver rule from.</p>\n@param vPCId The ID of the VPC that you want to disassociate the Resolver rule from.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withVPCId",
          "getterDocumentation" : "/**<p>The ID of the VPC that you want to disassociate the Resolver rule from.</p>\n@return The ID of the VPC that you want to disassociate the Resolver rule from.*/",
          "getterMethodName" : "getVPCId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "VPCId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "VPCId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "VPCId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the VPC that you want to disassociate the Resolver rule from.</p>\n@param vPCId The ID of the VPC that you want to disassociate the Resolver rule from.*/",
          "setterMethodName" : "setVPCId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "vPCId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the VPC that you want to disassociate the Resolver rule from.</p>\n@param vPCId The ID of the VPC that you want to disassociate the Resolver rule from.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "vPCId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the VPC that you want to disassociate the Resolver rule from.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "VPCId", "ResolverRuleId" ],
      "shapeName" : "DisassociateResolverRuleRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DisassociateResolverRuleRequest",
        "variableName" : "disassociateResolverRuleRequest",
        "variableType" : "DisassociateResolverRuleRequest",
        "documentation" : null,
        "simpleType" : "DisassociateResolverRuleRequest",
        "variableSetterType" : "DisassociateResolverRuleRequest"
      },
      "wrapper" : false
    },
    "DisassociateResolverRuleResult" : {
      "c2jName" : "DisassociateResolverRuleResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.response.DisassociateResolverRuleResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResolverRuleAssociation",
        "c2jShape" : "ResolverRuleAssociation",
        "deprecated" : false,
        "documentation" : "<p>Information about the <code>DisassociateResolverRule</code> request, including the status of the request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the <code>DisassociateResolverRule</code> request, including the status of the request.</p>\n@param resolverRuleAssociation Information about the <code>DisassociateResolverRule</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverRuleAssociation",
        "getterDocumentation" : "/**<p>Information about the <code>DisassociateResolverRule</code> request, including the status of the request.</p>\n@return Information about the <code>DisassociateResolverRule</code> request, including the status of the request.*/",
        "getterMethodName" : "getResolverRuleAssociation",
        "getterModel" : {
          "returnType" : "ResolverRuleAssociation",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverRuleAssociation",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverRuleAssociation",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ResolverRuleAssociation",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Information about the <code>DisassociateResolverRule</code> request, including the status of the request.</p>\n@param resolverRuleAssociation Information about the <code>DisassociateResolverRule</code> request, including the status of the request.*/",
        "setterMethodName" : "setResolverRuleAssociation",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverRuleAssociation",
          "variableName" : "resolverRuleAssociation",
          "variableType" : "ResolverRuleAssociation",
          "documentation" : "",
          "simpleType" : "ResolverRuleAssociation",
          "variableSetterType" : "ResolverRuleAssociation"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the <code>DisassociateResolverRule</code> request, including the status of the request.</p>\n@param resolverRuleAssociation Information about the <code>DisassociateResolverRule</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverRuleAssociation",
          "variableName" : "resolverRuleAssociation",
          "variableType" : "ResolverRuleAssociation",
          "documentation" : "<p>Information about the <code>DisassociateResolverRule</code> request, including the status of the request.</p>",
          "simpleType" : "ResolverRuleAssociation",
          "variableSetterType" : "ResolverRuleAssociation"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverRuleAssociation" : {
          "c2jName" : "ResolverRuleAssociation",
          "c2jShape" : "ResolverRuleAssociation",
          "deprecated" : false,
          "documentation" : "<p>Information about the <code>DisassociateResolverRule</code> request, including the status of the request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the <code>DisassociateResolverRule</code> request, including the status of the request.</p>\n@param resolverRuleAssociation Information about the <code>DisassociateResolverRule</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverRuleAssociation",
          "getterDocumentation" : "/**<p>Information about the <code>DisassociateResolverRule</code> request, including the status of the request.</p>\n@return Information about the <code>DisassociateResolverRule</code> request, including the status of the request.*/",
          "getterMethodName" : "getResolverRuleAssociation",
          "getterModel" : {
            "returnType" : "ResolverRuleAssociation",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverRuleAssociation",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverRuleAssociation",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ResolverRuleAssociation",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Information about the <code>DisassociateResolverRule</code> request, including the status of the request.</p>\n@param resolverRuleAssociation Information about the <code>DisassociateResolverRule</code> request, including the status of the request.*/",
          "setterMethodName" : "setResolverRuleAssociation",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverRuleAssociation",
            "variableName" : "resolverRuleAssociation",
            "variableType" : "ResolverRuleAssociation",
            "documentation" : "",
            "simpleType" : "ResolverRuleAssociation",
            "variableSetterType" : "ResolverRuleAssociation"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the <code>DisassociateResolverRule</code> request, including the status of the request.</p>\n@param resolverRuleAssociation Information about the <code>DisassociateResolverRule</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverRuleAssociation",
            "variableName" : "resolverRuleAssociation",
            "variableType" : "ResolverRuleAssociation",
            "documentation" : "<p>Information about the <code>DisassociateResolverRule</code> request, including the status of the request.</p>",
            "simpleType" : "ResolverRuleAssociation",
            "variableSetterType" : "ResolverRuleAssociation"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DisassociateResolverRuleResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DisassociateResolverRuleResult",
        "variableName" : "disassociateResolverRuleResult",
        "variableType" : "DisassociateResolverRuleResult",
        "documentation" : null,
        "simpleType" : "DisassociateResolverRuleResult",
        "variableSetterType" : "DisassociateResolverRuleResult"
      },
      "wrapper" : false
    },
    "Filter" : {
      "c2jName" : "Filter",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>For Resolver list operations (<a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigs.html\">ListResolverQueryLogConfigs</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigAssociations.html\">ListResolverQueryLogConfigAssociations</a>), and <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverDnssecConfigs.html\">ListResolverDnssecConfigs</a>), an optional specification to return a subset of objects.</p> <p>To filter objects, such as Resolver endpoints or Resolver rules, you specify <code>Name</code> and <code>Values</code>. For example, to list only inbound Resolver endpoints, specify <code>Direction</code> for <code>Name</code> and specify <code>INBOUND</code> for <code>Values</code>. </p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.model.Filter",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Name",
        "c2jShape" : "FilterName",
        "deprecated" : false,
        "documentation" : "<p>The name of the parameter that you want to use to filter objects.</p> <p>The valid values for <code>Name</code> depend on the action that you're including the filter in, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigs.html\">ListResolverQueryLogConfigs</a>, or <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigAssociations.html\">ListResolverQueryLogConfigAssociations</a>.</p> <note> <p>In early versions of Resolver, values for <code>Name</code> were listed as uppercase, with underscore (_) delimiters. For example, <code>CreatorRequestId</code> was originally listed as <code>CREATOR_REQUEST_ID</code>. Uppercase values for <code>Name</code> are still supported.</p> </note> <p> <b>ListResolverEndpoints</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Direction</code>: Whether you want to return inbound or outbound Resolver endpoints. If you specify <code>DIRECTION</code> for <code>Name</code>, specify <code>INBOUND</code> or <code>OUTBOUND</code> for <code>Values</code>.</p> </li> <li> <p> <code>HostVpcId</code>: The ID of the VPC that inbound DNS queries pass through on the way from your network to your VPCs in a region, or the VPC that outbound queries pass through on the way from your VPCs to your network. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request, <code>SubnetId</code> indirectly identifies the VPC. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> request, the VPC ID for a Resolver endpoint is returned in the <code>HostVPCId</code> element. </p> </li> <li> <p> <code>IpAddressCount</code>: The number of IP addresses that you have associated with the Resolver endpoint.</p> </li> <li> <p> <code>Name</code>: The name of the Resolver endpoint.</p> </li> <li> <p> <code>SecurityGroupIds</code>: The IDs of the VPC security groups that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver endpoint. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>OPERATIONAL</code>, <code>UPDATING</code>, <code>AUTO_RECOVERING</code>, <code>ACTION_NEEDED</code>, or <code>DELETING</code>. For more information, see <code>Status</code> in <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverEndpoint.html\">ResolverEndpoint</a>.</p> </li> </ul> <p> <b>ListResolverRules</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver rule.</p> </li> <li> <p> <code>DomainName</code>: The domain name for which Resolver is forwarding DNS queries to your network. In the value that you specify for <code>Values</code>, include a trailing dot (.) after the domain name. For example, if the domain name is example.com, specify the following value. Note the \".\" after <code>com</code>:</p> <p> <code>example.com.</code> </p> </li> <li> <p> <code>Name</code>: The name of the Resolver rule.</p> </li> <li> <p> <code>ResolverEndpointId</code>: The ID of the Resolver endpoint that the Resolver rule is associated with.</p> <note> <p>You can filter on the Resolver endpoint only for rules that have a value of <code>FORWARD</code> for <code>RuleType</code>.</p> </note> </li> <li> <p> <code>Status</code>: The status of the Resolver rule. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>COMPLETE</code>, <code>DELETING</code>, <code>UPDATING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>Type</code>: The type of the Resolver rule. If you specify <code>TYPE</code> for <code>Name</code>, specify <code>FORWARD</code> or <code>SYSTEM</code> for <code>Values</code>.</p> </li> </ul> <p> <b>ListResolverRuleAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Name</code>: The name of the Resolver rule association.</p> </li> <li> <p> <code>ResolverRuleId</code>: The ID of the Resolver rule that is associated with one or more VPCs.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver rule association. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>COMPLETE</code>, <code>DELETING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>VPCId</code>: The ID of the VPC that the Resolver rule is associated with.</p> </li> </ul> <p> <b>ListResolverQueryLogConfigs</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Arn</code>: The ARN for the query logging configuration.</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the query logging configuration.</p> </li> <li> <p> <code>CreationTime</code>: The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC). </p> </li> <li> <p> <code>CreatorRequestId</code>: A unique string that identifies the request that created the query logging configuration.</p> </li> <li> <p> <code>Destination</code>: The AWS service that you want to forward query logs to. Valid values include the following:</p> <ul> <li> <p> <code>S3</code> </p> </li> <li> <p> <code>CloudWatchLogs</code> </p> </li> <li> <p> <code>KinesisFirehose</code> </p> </li> </ul> </li> <li> <p> <code>DestinationArn</code>: The ARN of the location that Resolver is sending query logs to. This value can be the ARN for an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>Name</code>: The name of the query logging configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account ID for the account that created the query logging configuration.</p> </li> <li> <p> <code>ShareStatus</code>: An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Valid values include: <code>NOT_SHARED</code>, <code>SHARED_WITH_ME</code>, or <code>SHARED_BY_ME</code>.</p> </li> <li> <p> <code>Status</code>: The status of the query logging configuration. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfig.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfig-Status\">Status</a>. </p> </li> </ul> <p> <b>ListResolverQueryLogConfigAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreationTime</code>: The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, specify the cause: <code>DESTINATION_NOT_FOUND</code> or <code>ACCESS_DENIED</code>.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association.</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration that a VPC is associated with.</p> </li> <li> <p> <code>ResourceId</code>: The ID of the Amazon VPC that is associated with the query logging configuration.</p> </li> <li> <p> <code>Status</code>: The status of the query logging association. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfigAssociation.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfigAssociation-Status\">Status</a>. </p> </li> </ul>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the parameter that you want to use to filter objects.</p> <p>The valid values for <code>Name</code> depend on the action that you're including the filter in, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigs.html\">ListResolverQueryLogConfigs</a>, or <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigAssociations.html\">ListResolverQueryLogConfigAssociations</a>.</p> <note> <p>In early versions of Resolver, values for <code>Name</code> were listed as uppercase, with underscore (_) delimiters. For example, <code>CreatorRequestId</code> was originally listed as <code>CREATOR_REQUEST_ID</code>. Uppercase values for <code>Name</code> are still supported.</p> </note> <p> <b>ListResolverEndpoints</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Direction</code>: Whether you want to return inbound or outbound Resolver endpoints. If you specify <code>DIRECTION</code> for <code>Name</code>, specify <code>INBOUND</code> or <code>OUTBOUND</code> for <code>Values</code>.</p> </li> <li> <p> <code>HostVpcId</code>: The ID of the VPC that inbound DNS queries pass through on the way from your network to your VPCs in a region, or the VPC that outbound queries pass through on the way from your VPCs to your network. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request, <code>SubnetId</code> indirectly identifies the VPC. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> request, the VPC ID for a Resolver endpoint is returned in the <code>HostVPCId</code> element. </p> </li> <li> <p> <code>IpAddressCount</code>: The number of IP addresses that you have associated with the Resolver endpoint.</p> </li> <li> <p> <code>Name</code>: The name of the Resolver endpoint.</p> </li> <li> <p> <code>SecurityGroupIds</code>: The IDs of the VPC security groups that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver endpoint. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>OPERATIONAL</code>, <code>UPDATING</code>, <code>AUTO_RECOVERING</code>, <code>ACTION_NEEDED</code>, or <code>DELETING</code>. For more information, see <code>Status</code> in <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverEndpoint.html\">ResolverEndpoint</a>.</p> </li> </ul> <p> <b>ListResolverRules</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver rule.</p> </li> <li> <p> <code>DomainName</code>: The domain name for which Resolver is forwarding DNS queries to your network. In the value that you specify for <code>Values</code>, include a trailing dot (.) after the domain name. For example, if the domain name is example.com, specify the following value. Note the \".\" after <code>com</code>:</p> <p> <code>example.com.</code> </p> </li> <li> <p> <code>Name</code>: The name of the Resolver rule.</p> </li> <li> <p> <code>ResolverEndpointId</code>: The ID of the Resolver endpoint that the Resolver rule is associated with.</p> <note> <p>You can filter on the Resolver endpoint only for rules that have a value of <code>FORWARD</code> for <code>RuleType</code>.</p> </note> </li> <li> <p> <code>Status</code>: The status of the Resolver rule. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>COMPLETE</code>, <code>DELETING</code>, <code>UPDATING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>Type</code>: The type of the Resolver rule. If you specify <code>TYPE</code> for <code>Name</code>, specify <code>FORWARD</code> or <code>SYSTEM</code> for <code>Values</code>.</p> </li> </ul> <p> <b>ListResolverRuleAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Name</code>: The name of the Resolver rule association.</p> </li> <li> <p> <code>ResolverRuleId</code>: The ID of the Resolver rule that is associated with one or more VPCs.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver rule association. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>COMPLETE</code>, <code>DELETING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>VPCId</code>: The ID of the VPC that the Resolver rule is associated with.</p> </li> </ul> <p> <b>ListResolverQueryLogConfigs</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Arn</code>: The ARN for the query logging configuration.</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the query logging configuration.</p> </li> <li> <p> <code>CreationTime</code>: The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC). </p> </li> <li> <p> <code>CreatorRequestId</code>: A unique string that identifies the request that created the query logging configuration.</p> </li> <li> <p> <code>Destination</code>: The AWS service that you want to forward query logs to. Valid values include the following:</p> <ul> <li> <p> <code>S3</code> </p> </li> <li> <p> <code>CloudWatchLogs</code> </p> </li> <li> <p> <code>KinesisFirehose</code> </p> </li> </ul> </li> <li> <p> <code>DestinationArn</code>: The ARN of the location that Resolver is sending query logs to. This value can be the ARN for an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>Name</code>: The name of the query logging configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account ID for the account that created the query logging configuration.</p> </li> <li> <p> <code>ShareStatus</code>: An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Valid values include: <code>NOT_SHARED</code>, <code>SHARED_WITH_ME</code>, or <code>SHARED_BY_ME</code>.</p> </li> <li> <p> <code>Status</code>: The status of the query logging configuration. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfig.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfig-Status\">Status</a>. </p> </li> </ul> <p> <b>ListResolverQueryLogConfigAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreationTime</code>: The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, specify the cause: <code>DESTINATION_NOT_FOUND</code> or <code>ACCESS_DENIED</code>.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association.</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration that a VPC is associated with.</p> </li> <li> <p> <code>ResourceId</code>: The ID of the Amazon VPC that is associated with the query logging configuration.</p> </li> <li> <p> <code>Status</code>: The status of the query logging association. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfigAssociation.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfigAssociation-Status\">Status</a>. </p> </li> </ul>\n@param name The name of the parameter that you want to use to filter objects.</p> <p>The valid values for <code>Name</code> depend on the action that you're including the filter in, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigs.html\">ListResolverQueryLogConfigs</a>, or <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigAssociations.html\">ListResolverQueryLogConfigAssociations</a>.</p> <note> <p>In early versions of Resolver, values for <code>Name</code> were listed as uppercase, with underscore (_) delimiters. For example, <code>CreatorRequestId</code> was originally listed as <code>CREATOR_REQUEST_ID</code>. Uppercase values for <code>Name</code> are still supported.</p> </note> <p> <b>ListResolverEndpoints</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Direction</code>: Whether you want to return inbound or outbound Resolver endpoints. If you specify <code>DIRECTION</code> for <code>Name</code>, specify <code>INBOUND</code> or <code>OUTBOUND</code> for <code>Values</code>.</p> </li> <li> <p> <code>HostVpcId</code>: The ID of the VPC that inbound DNS queries pass through on the way from your network to your VPCs in a region, or the VPC that outbound queries pass through on the way from your VPCs to your network. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request, <code>SubnetId</code> indirectly identifies the VPC. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> request, the VPC ID for a Resolver endpoint is returned in the <code>HostVPCId</code> element. </p> </li> <li> <p> <code>IpAddressCount</code>: The number of IP addresses that you have associated with the Resolver endpoint.</p> </li> <li> <p> <code>Name</code>: The name of the Resolver endpoint.</p> </li> <li> <p> <code>SecurityGroupIds</code>: The IDs of the VPC security groups that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver endpoint. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>OPERATIONAL</code>, <code>UPDATING</code>, <code>AUTO_RECOVERING</code>, <code>ACTION_NEEDED</code>, or <code>DELETING</code>. For more information, see <code>Status</code> in <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverEndpoint.html\">ResolverEndpoint</a>.</p> </li> </ul> <p> <b>ListResolverRules</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver rule.</p> </li> <li> <p> <code>DomainName</code>: The domain name for which Resolver is forwarding DNS queries to your network. In the value that you specify for <code>Values</code>, include a trailing dot (.) after the domain name. For example, if the domain name is example.com, specify the following value. Note the \".\" after <code>com</code>:</p> <p> <code>example.com.</code> </p> </li> <li> <p> <code>Name</code>: The name of the Resolver rule.</p> </li> <li> <p> <code>ResolverEndpointId</code>: The ID of the Resolver endpoint that the Resolver rule is associated with.</p> <note> <p>You can filter on the Resolver endpoint only for rules that have a value of <code>FORWARD</code> for <code>RuleType</code>.</p> </note> </li> <li> <p> <code>Status</code>: The status of the Resolver rule. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>COMPLETE</code>, <code>DELETING</code>, <code>UPDATING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>Type</code>: The type of the Resolver rule. If you specify <code>TYPE</code> for <code>Name</code>, specify <code>FORWARD</code> or <code>SYSTEM</code> for <code>Values</code>.</p> </li> </ul> <p> <b>ListResolverRuleAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Name</code>: The name of the Resolver rule association.</p> </li> <li> <p> <code>ResolverRuleId</code>: The ID of the Resolver rule that is associated with one or more VPCs.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver rule association. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>COMPLETE</code>, <code>DELETING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>VPCId</code>: The ID of the VPC that the Resolver rule is associated with.</p> </li> </ul> <p> <b>ListResolverQueryLogConfigs</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Arn</code>: The ARN for the query logging configuration.</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the query logging configuration.</p> </li> <li> <p> <code>CreationTime</code>: The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC). </p> </li> <li> <p> <code>CreatorRequestId</code>: A unique string that identifies the request that created the query logging configuration.</p> </li> <li> <p> <code>Destination</code>: The AWS service that you want to forward query logs to. Valid values include the following:</p> <ul> <li> <p> <code>S3</code> </p> </li> <li> <p> <code>CloudWatchLogs</code> </p> </li> <li> <p> <code>KinesisFirehose</code> </p> </li> </ul> </li> <li> <p> <code>DestinationArn</code>: The ARN of the location that Resolver is sending query logs to. This value can be the ARN for an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>Name</code>: The name of the query logging configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account ID for the account that created the query logging configuration.</p> </li> <li> <p> <code>ShareStatus</code>: An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Valid values include: <code>NOT_SHARED</code>, <code>SHARED_WITH_ME</code>, or <code>SHARED_BY_ME</code>.</p> </li> <li> <p> <code>Status</code>: The status of the query logging configuration. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfig.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfig-Status\">Status</a>. </p> </li> </ul> <p> <b>ListResolverQueryLogConfigAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreationTime</code>: The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, specify the cause: <code>DESTINATION_NOT_FOUND</code> or <code>ACCESS_DENIED</code>.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association.</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration that a VPC is associated with.</p> </li> <li> <p> <code>ResourceId</code>: The ID of the Amazon VPC that is associated with the query logging configuration.</p> </li> <li> <p> <code>Status</code>: The status of the query logging association. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfigAssociation.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfigAssociation-Status\">Status</a>. </p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>The name of the parameter that you want to use to filter objects.</p> <p>The valid values for <code>Name</code> depend on the action that you're including the filter in, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigs.html\">ListResolverQueryLogConfigs</a>, or <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigAssociations.html\">ListResolverQueryLogConfigAssociations</a>.</p> <note> <p>In early versions of Resolver, values for <code>Name</code> were listed as uppercase, with underscore (_) delimiters. For example, <code>CreatorRequestId</code> was originally listed as <code>CREATOR_REQUEST_ID</code>. Uppercase values for <code>Name</code> are still supported.</p> </note> <p> <b>ListResolverEndpoints</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Direction</code>: Whether you want to return inbound or outbound Resolver endpoints. If you specify <code>DIRECTION</code> for <code>Name</code>, specify <code>INBOUND</code> or <code>OUTBOUND</code> for <code>Values</code>.</p> </li> <li> <p> <code>HostVpcId</code>: The ID of the VPC that inbound DNS queries pass through on the way from your network to your VPCs in a region, or the VPC that outbound queries pass through on the way from your VPCs to your network. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request, <code>SubnetId</code> indirectly identifies the VPC. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> request, the VPC ID for a Resolver endpoint is returned in the <code>HostVPCId</code> element. </p> </li> <li> <p> <code>IpAddressCount</code>: The number of IP addresses that you have associated with the Resolver endpoint.</p> </li> <li> <p> <code>Name</code>: The name of the Resolver endpoint.</p> </li> <li> <p> <code>SecurityGroupIds</code>: The IDs of the VPC security groups that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver endpoint. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>OPERATIONAL</code>, <code>UPDATING</code>, <code>AUTO_RECOVERING</code>, <code>ACTION_NEEDED</code>, or <code>DELETING</code>. For more information, see <code>Status</code> in <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverEndpoint.html\">ResolverEndpoint</a>.</p> </li> </ul> <p> <b>ListResolverRules</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver rule.</p> </li> <li> <p> <code>DomainName</code>: The domain name for which Resolver is forwarding DNS queries to your network. In the value that you specify for <code>Values</code>, include a trailing dot (.) after the domain name. For example, if the domain name is example.com, specify the following value. Note the \".\" after <code>com</code>:</p> <p> <code>example.com.</code> </p> </li> <li> <p> <code>Name</code>: The name of the Resolver rule.</p> </li> <li> <p> <code>ResolverEndpointId</code>: The ID of the Resolver endpoint that the Resolver rule is associated with.</p> <note> <p>You can filter on the Resolver endpoint only for rules that have a value of <code>FORWARD</code> for <code>RuleType</code>.</p> </note> </li> <li> <p> <code>Status</code>: The status of the Resolver rule. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>COMPLETE</code>, <code>DELETING</code>, <code>UPDATING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>Type</code>: The type of the Resolver rule. If you specify <code>TYPE</code> for <code>Name</code>, specify <code>FORWARD</code> or <code>SYSTEM</code> for <code>Values</code>.</p> </li> </ul> <p> <b>ListResolverRuleAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Name</code>: The name of the Resolver rule association.</p> </li> <li> <p> <code>ResolverRuleId</code>: The ID of the Resolver rule that is associated with one or more VPCs.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver rule association. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>COMPLETE</code>, <code>DELETING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>VPCId</code>: The ID of the VPC that the Resolver rule is associated with.</p> </li> </ul> <p> <b>ListResolverQueryLogConfigs</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Arn</code>: The ARN for the query logging configuration.</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the query logging configuration.</p> </li> <li> <p> <code>CreationTime</code>: The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC). </p> </li> <li> <p> <code>CreatorRequestId</code>: A unique string that identifies the request that created the query logging configuration.</p> </li> <li> <p> <code>Destination</code>: The AWS service that you want to forward query logs to. Valid values include the following:</p> <ul> <li> <p> <code>S3</code> </p> </li> <li> <p> <code>CloudWatchLogs</code> </p> </li> <li> <p> <code>KinesisFirehose</code> </p> </li> </ul> </li> <li> <p> <code>DestinationArn</code>: The ARN of the location that Resolver is sending query logs to. This value can be the ARN for an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>Name</code>: The name of the query logging configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account ID for the account that created the query logging configuration.</p> </li> <li> <p> <code>ShareStatus</code>: An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Valid values include: <code>NOT_SHARED</code>, <code>SHARED_WITH_ME</code>, or <code>SHARED_BY_ME</code>.</p> </li> <li> <p> <code>Status</code>: The status of the query logging configuration. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfig.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfig-Status\">Status</a>. </p> </li> </ul> <p> <b>ListResolverQueryLogConfigAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreationTime</code>: The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, specify the cause: <code>DESTINATION_NOT_FOUND</code> or <code>ACCESS_DENIED</code>.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association.</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration that a VPC is associated with.</p> </li> <li> <p> <code>ResourceId</code>: The ID of the Amazon VPC that is associated with the query logging configuration.</p> </li> <li> <p> <code>Status</code>: The status of the query logging association. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfigAssociation.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfigAssociation-Status\">Status</a>. </p> </li> </ul>\n@return The name of the parameter that you want to use to filter objects.</p> <p>The valid values for <code>Name</code> depend on the action that you're including the filter in, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigs.html\">ListResolverQueryLogConfigs</a>, or <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigAssociations.html\">ListResolverQueryLogConfigAssociations</a>.</p> <note> <p>In early versions of Resolver, values for <code>Name</code> were listed as uppercase, with underscore (_) delimiters. For example, <code>CreatorRequestId</code> was originally listed as <code>CREATOR_REQUEST_ID</code>. Uppercase values for <code>Name</code> are still supported.</p> </note> <p> <b>ListResolverEndpoints</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Direction</code>: Whether you want to return inbound or outbound Resolver endpoints. If you specify <code>DIRECTION</code> for <code>Name</code>, specify <code>INBOUND</code> or <code>OUTBOUND</code> for <code>Values</code>.</p> </li> <li> <p> <code>HostVpcId</code>: The ID of the VPC that inbound DNS queries pass through on the way from your network to your VPCs in a region, or the VPC that outbound queries pass through on the way from your VPCs to your network. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request, <code>SubnetId</code> indirectly identifies the VPC. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> request, the VPC ID for a Resolver endpoint is returned in the <code>HostVPCId</code> element. </p> </li> <li> <p> <code>IpAddressCount</code>: The number of IP addresses that you have associated with the Resolver endpoint.</p> </li> <li> <p> <code>Name</code>: The name of the Resolver endpoint.</p> </li> <li> <p> <code>SecurityGroupIds</code>: The IDs of the VPC security groups that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver endpoint. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>OPERATIONAL</code>, <code>UPDATING</code>, <code>AUTO_RECOVERING</code>, <code>ACTION_NEEDED</code>, or <code>DELETING</code>. For more information, see <code>Status</code> in <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverEndpoint.html\">ResolverEndpoint</a>.</p> </li> </ul> <p> <b>ListResolverRules</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver rule.</p> </li> <li> <p> <code>DomainName</code>: The domain name for which Resolver is forwarding DNS queries to your network. In the value that you specify for <code>Values</code>, include a trailing dot (.) after the domain name. For example, if the domain name is example.com, specify the following value. Note the \".\" after <code>com</code>:</p> <p> <code>example.com.</code> </p> </li> <li> <p> <code>Name</code>: The name of the Resolver rule.</p> </li> <li> <p> <code>ResolverEndpointId</code>: The ID of the Resolver endpoint that the Resolver rule is associated with.</p> <note> <p>You can filter on the Resolver endpoint only for rules that have a value of <code>FORWARD</code> for <code>RuleType</code>.</p> </note> </li> <li> <p> <code>Status</code>: The status of the Resolver rule. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>COMPLETE</code>, <code>DELETING</code>, <code>UPDATING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>Type</code>: The type of the Resolver rule. If you specify <code>TYPE</code> for <code>Name</code>, specify <code>FORWARD</code> or <code>SYSTEM</code> for <code>Values</code>.</p> </li> </ul> <p> <b>ListResolverRuleAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Name</code>: The name of the Resolver rule association.</p> </li> <li> <p> <code>ResolverRuleId</code>: The ID of the Resolver rule that is associated with one or more VPCs.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver rule association. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>COMPLETE</code>, <code>DELETING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>VPCId</code>: The ID of the VPC that the Resolver rule is associated with.</p> </li> </ul> <p> <b>ListResolverQueryLogConfigs</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Arn</code>: The ARN for the query logging configuration.</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the query logging configuration.</p> </li> <li> <p> <code>CreationTime</code>: The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC). </p> </li> <li> <p> <code>CreatorRequestId</code>: A unique string that identifies the request that created the query logging configuration.</p> </li> <li> <p> <code>Destination</code>: The AWS service that you want to forward query logs to. Valid values include the following:</p> <ul> <li> <p> <code>S3</code> </p> </li> <li> <p> <code>CloudWatchLogs</code> </p> </li> <li> <p> <code>KinesisFirehose</code> </p> </li> </ul> </li> <li> <p> <code>DestinationArn</code>: The ARN of the location that Resolver is sending query logs to. This value can be the ARN for an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>Name</code>: The name of the query logging configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account ID for the account that created the query logging configuration.</p> </li> <li> <p> <code>ShareStatus</code>: An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Valid values include: <code>NOT_SHARED</code>, <code>SHARED_WITH_ME</code>, or <code>SHARED_BY_ME</code>.</p> </li> <li> <p> <code>Status</code>: The status of the query logging configuration. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfig.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfig-Status\">Status</a>. </p> </li> </ul> <p> <b>ListResolverQueryLogConfigAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreationTime</code>: The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, specify the cause: <code>DESTINATION_NOT_FOUND</code> or <code>ACCESS_DENIED</code>.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association.</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration that a VPC is associated with.</p> </li> <li> <p> <code>ResourceId</code>: The ID of the Amazon VPC that is associated with the query logging configuration.</p> </li> <li> <p> <code>Status</code>: The status of the query logging association. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfigAssociation.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfigAssociation-Status\">Status</a>. </p> </li>*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Name",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the parameter that you want to use to filter objects.</p> <p>The valid values for <code>Name</code> depend on the action that you're including the filter in, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigs.html\">ListResolverQueryLogConfigs</a>, or <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigAssociations.html\">ListResolverQueryLogConfigAssociations</a>.</p> <note> <p>In early versions of Resolver, values for <code>Name</code> were listed as uppercase, with underscore (_) delimiters. For example, <code>CreatorRequestId</code> was originally listed as <code>CREATOR_REQUEST_ID</code>. Uppercase values for <code>Name</code> are still supported.</p> </note> <p> <b>ListResolverEndpoints</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Direction</code>: Whether you want to return inbound or outbound Resolver endpoints. If you specify <code>DIRECTION</code> for <code>Name</code>, specify <code>INBOUND</code> or <code>OUTBOUND</code> for <code>Values</code>.</p> </li> <li> <p> <code>HostVpcId</code>: The ID of the VPC that inbound DNS queries pass through on the way from your network to your VPCs in a region, or the VPC that outbound queries pass through on the way from your VPCs to your network. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request, <code>SubnetId</code> indirectly identifies the VPC. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> request, the VPC ID for a Resolver endpoint is returned in the <code>HostVPCId</code> element. </p> </li> <li> <p> <code>IpAddressCount</code>: The number of IP addresses that you have associated with the Resolver endpoint.</p> </li> <li> <p> <code>Name</code>: The name of the Resolver endpoint.</p> </li> <li> <p> <code>SecurityGroupIds</code>: The IDs of the VPC security groups that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver endpoint. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>OPERATIONAL</code>, <code>UPDATING</code>, <code>AUTO_RECOVERING</code>, <code>ACTION_NEEDED</code>, or <code>DELETING</code>. For more information, see <code>Status</code> in <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverEndpoint.html\">ResolverEndpoint</a>.</p> </li> </ul> <p> <b>ListResolverRules</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver rule.</p> </li> <li> <p> <code>DomainName</code>: The domain name for which Resolver is forwarding DNS queries to your network. In the value that you specify for <code>Values</code>, include a trailing dot (.) after the domain name. For example, if the domain name is example.com, specify the following value. Note the \".\" after <code>com</code>:</p> <p> <code>example.com.</code> </p> </li> <li> <p> <code>Name</code>: The name of the Resolver rule.</p> </li> <li> <p> <code>ResolverEndpointId</code>: The ID of the Resolver endpoint that the Resolver rule is associated with.</p> <note> <p>You can filter on the Resolver endpoint only for rules that have a value of <code>FORWARD</code> for <code>RuleType</code>.</p> </note> </li> <li> <p> <code>Status</code>: The status of the Resolver rule. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>COMPLETE</code>, <code>DELETING</code>, <code>UPDATING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>Type</code>: The type of the Resolver rule. If you specify <code>TYPE</code> for <code>Name</code>, specify <code>FORWARD</code> or <code>SYSTEM</code> for <code>Values</code>.</p> </li> </ul> <p> <b>ListResolverRuleAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Name</code>: The name of the Resolver rule association.</p> </li> <li> <p> <code>ResolverRuleId</code>: The ID of the Resolver rule that is associated with one or more VPCs.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver rule association. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>COMPLETE</code>, <code>DELETING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>VPCId</code>: The ID of the VPC that the Resolver rule is associated with.</p> </li> </ul> <p> <b>ListResolverQueryLogConfigs</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Arn</code>: The ARN for the query logging configuration.</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the query logging configuration.</p> </li> <li> <p> <code>CreationTime</code>: The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC). </p> </li> <li> <p> <code>CreatorRequestId</code>: A unique string that identifies the request that created the query logging configuration.</p> </li> <li> <p> <code>Destination</code>: The AWS service that you want to forward query logs to. Valid values include the following:</p> <ul> <li> <p> <code>S3</code> </p> </li> <li> <p> <code>CloudWatchLogs</code> </p> </li> <li> <p> <code>KinesisFirehose</code> </p> </li> </ul> </li> <li> <p> <code>DestinationArn</code>: The ARN of the location that Resolver is sending query logs to. This value can be the ARN for an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>Name</code>: The name of the query logging configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account ID for the account that created the query logging configuration.</p> </li> <li> <p> <code>ShareStatus</code>: An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Valid values include: <code>NOT_SHARED</code>, <code>SHARED_WITH_ME</code>, or <code>SHARED_BY_ME</code>.</p> </li> <li> <p> <code>Status</code>: The status of the query logging configuration. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfig.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfig-Status\">Status</a>. </p> </li> </ul> <p> <b>ListResolverQueryLogConfigAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreationTime</code>: The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, specify the cause: <code>DESTINATION_NOT_FOUND</code> or <code>ACCESS_DENIED</code>.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association.</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration that a VPC is associated with.</p> </li> <li> <p> <code>ResourceId</code>: The ID of the Amazon VPC that is associated with the query logging configuration.</p> </li> <li> <p> <code>Status</code>: The status of the query logging association. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfigAssociation.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfigAssociation-Status\">Status</a>. </p> </li> </ul>\n@param name The name of the parameter that you want to use to filter objects.</p> <p>The valid values for <code>Name</code> depend on the action that you're including the filter in, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigs.html\">ListResolverQueryLogConfigs</a>, or <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigAssociations.html\">ListResolverQueryLogConfigAssociations</a>.</p> <note> <p>In early versions of Resolver, values for <code>Name</code> were listed as uppercase, with underscore (_) delimiters. For example, <code>CreatorRequestId</code> was originally listed as <code>CREATOR_REQUEST_ID</code>. Uppercase values for <code>Name</code> are still supported.</p> </note> <p> <b>ListResolverEndpoints</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Direction</code>: Whether you want to return inbound or outbound Resolver endpoints. If you specify <code>DIRECTION</code> for <code>Name</code>, specify <code>INBOUND</code> or <code>OUTBOUND</code> for <code>Values</code>.</p> </li> <li> <p> <code>HostVpcId</code>: The ID of the VPC that inbound DNS queries pass through on the way from your network to your VPCs in a region, or the VPC that outbound queries pass through on the way from your VPCs to your network. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request, <code>SubnetId</code> indirectly identifies the VPC. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> request, the VPC ID for a Resolver endpoint is returned in the <code>HostVPCId</code> element. </p> </li> <li> <p> <code>IpAddressCount</code>: The number of IP addresses that you have associated with the Resolver endpoint.</p> </li> <li> <p> <code>Name</code>: The name of the Resolver endpoint.</p> </li> <li> <p> <code>SecurityGroupIds</code>: The IDs of the VPC security groups that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver endpoint. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>OPERATIONAL</code>, <code>UPDATING</code>, <code>AUTO_RECOVERING</code>, <code>ACTION_NEEDED</code>, or <code>DELETING</code>. For more information, see <code>Status</code> in <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverEndpoint.html\">ResolverEndpoint</a>.</p> </li> </ul> <p> <b>ListResolverRules</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver rule.</p> </li> <li> <p> <code>DomainName</code>: The domain name for which Resolver is forwarding DNS queries to your network. In the value that you specify for <code>Values</code>, include a trailing dot (.) after the domain name. For example, if the domain name is example.com, specify the following value. Note the \".\" after <code>com</code>:</p> <p> <code>example.com.</code> </p> </li> <li> <p> <code>Name</code>: The name of the Resolver rule.</p> </li> <li> <p> <code>ResolverEndpointId</code>: The ID of the Resolver endpoint that the Resolver rule is associated with.</p> <note> <p>You can filter on the Resolver endpoint only for rules that have a value of <code>FORWARD</code> for <code>RuleType</code>.</p> </note> </li> <li> <p> <code>Status</code>: The status of the Resolver rule. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>COMPLETE</code>, <code>DELETING</code>, <code>UPDATING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>Type</code>: The type of the Resolver rule. If you specify <code>TYPE</code> for <code>Name</code>, specify <code>FORWARD</code> or <code>SYSTEM</code> for <code>Values</code>.</p> </li> </ul> <p> <b>ListResolverRuleAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Name</code>: The name of the Resolver rule association.</p> </li> <li> <p> <code>ResolverRuleId</code>: The ID of the Resolver rule that is associated with one or more VPCs.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver rule association. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>COMPLETE</code>, <code>DELETING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>VPCId</code>: The ID of the VPC that the Resolver rule is associated with.</p> </li> </ul> <p> <b>ListResolverQueryLogConfigs</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Arn</code>: The ARN for the query logging configuration.</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the query logging configuration.</p> </li> <li> <p> <code>CreationTime</code>: The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC). </p> </li> <li> <p> <code>CreatorRequestId</code>: A unique string that identifies the request that created the query logging configuration.</p> </li> <li> <p> <code>Destination</code>: The AWS service that you want to forward query logs to. Valid values include the following:</p> <ul> <li> <p> <code>S3</code> </p> </li> <li> <p> <code>CloudWatchLogs</code> </p> </li> <li> <p> <code>KinesisFirehose</code> </p> </li> </ul> </li> <li> <p> <code>DestinationArn</code>: The ARN of the location that Resolver is sending query logs to. This value can be the ARN for an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>Name</code>: The name of the query logging configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account ID for the account that created the query logging configuration.</p> </li> <li> <p> <code>ShareStatus</code>: An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Valid values include: <code>NOT_SHARED</code>, <code>SHARED_WITH_ME</code>, or <code>SHARED_BY_ME</code>.</p> </li> <li> <p> <code>Status</code>: The status of the query logging configuration. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfig.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfig-Status\">Status</a>. </p> </li> </ul> <p> <b>ListResolverQueryLogConfigAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreationTime</code>: The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, specify the cause: <code>DESTINATION_NOT_FOUND</code> or <code>ACCESS_DENIED</code>.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association.</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration that a VPC is associated with.</p> </li> <li> <p> <code>ResourceId</code>: The ID of the Amazon VPC that is associated with the query logging configuration.</p> </li> <li> <p> <code>Status</code>: The status of the query logging association. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfigAssociation.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfigAssociation-Status\">Status</a>. </p> </li>*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the parameter that you want to use to filter objects.</p> <p>The valid values for <code>Name</code> depend on the action that you're including the filter in, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigs.html\">ListResolverQueryLogConfigs</a>, or <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigAssociations.html\">ListResolverQueryLogConfigAssociations</a>.</p> <note> <p>In early versions of Resolver, values for <code>Name</code> were listed as uppercase, with underscore (_) delimiters. For example, <code>CreatorRequestId</code> was originally listed as <code>CREATOR_REQUEST_ID</code>. Uppercase values for <code>Name</code> are still supported.</p> </note> <p> <b>ListResolverEndpoints</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Direction</code>: Whether you want to return inbound or outbound Resolver endpoints. If you specify <code>DIRECTION</code> for <code>Name</code>, specify <code>INBOUND</code> or <code>OUTBOUND</code> for <code>Values</code>.</p> </li> <li> <p> <code>HostVpcId</code>: The ID of the VPC that inbound DNS queries pass through on the way from your network to your VPCs in a region, or the VPC that outbound queries pass through on the way from your VPCs to your network. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request, <code>SubnetId</code> indirectly identifies the VPC. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> request, the VPC ID for a Resolver endpoint is returned in the <code>HostVPCId</code> element. </p> </li> <li> <p> <code>IpAddressCount</code>: The number of IP addresses that you have associated with the Resolver endpoint.</p> </li> <li> <p> <code>Name</code>: The name of the Resolver endpoint.</p> </li> <li> <p> <code>SecurityGroupIds</code>: The IDs of the VPC security groups that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver endpoint. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>OPERATIONAL</code>, <code>UPDATING</code>, <code>AUTO_RECOVERING</code>, <code>ACTION_NEEDED</code>, or <code>DELETING</code>. For more information, see <code>Status</code> in <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverEndpoint.html\">ResolverEndpoint</a>.</p> </li> </ul> <p> <b>ListResolverRules</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver rule.</p> </li> <li> <p> <code>DomainName</code>: The domain name for which Resolver is forwarding DNS queries to your network. In the value that you specify for <code>Values</code>, include a trailing dot (.) after the domain name. For example, if the domain name is example.com, specify the following value. Note the \".\" after <code>com</code>:</p> <p> <code>example.com.</code> </p> </li> <li> <p> <code>Name</code>: The name of the Resolver rule.</p> </li> <li> <p> <code>ResolverEndpointId</code>: The ID of the Resolver endpoint that the Resolver rule is associated with.</p> <note> <p>You can filter on the Resolver endpoint only for rules that have a value of <code>FORWARD</code> for <code>RuleType</code>.</p> </note> </li> <li> <p> <code>Status</code>: The status of the Resolver rule. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>COMPLETE</code>, <code>DELETING</code>, <code>UPDATING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>Type</code>: The type of the Resolver rule. If you specify <code>TYPE</code> for <code>Name</code>, specify <code>FORWARD</code> or <code>SYSTEM</code> for <code>Values</code>.</p> </li> </ul> <p> <b>ListResolverRuleAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Name</code>: The name of the Resolver rule association.</p> </li> <li> <p> <code>ResolverRuleId</code>: The ID of the Resolver rule that is associated with one or more VPCs.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver rule association. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>COMPLETE</code>, <code>DELETING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>VPCId</code>: The ID of the VPC that the Resolver rule is associated with.</p> </li> </ul> <p> <b>ListResolverQueryLogConfigs</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Arn</code>: The ARN for the query logging configuration.</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the query logging configuration.</p> </li> <li> <p> <code>CreationTime</code>: The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC). </p> </li> <li> <p> <code>CreatorRequestId</code>: A unique string that identifies the request that created the query logging configuration.</p> </li> <li> <p> <code>Destination</code>: The AWS service that you want to forward query logs to. Valid values include the following:</p> <ul> <li> <p> <code>S3</code> </p> </li> <li> <p> <code>CloudWatchLogs</code> </p> </li> <li> <p> <code>KinesisFirehose</code> </p> </li> </ul> </li> <li> <p> <code>DestinationArn</code>: The ARN of the location that Resolver is sending query logs to. This value can be the ARN for an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>Name</code>: The name of the query logging configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account ID for the account that created the query logging configuration.</p> </li> <li> <p> <code>ShareStatus</code>: An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Valid values include: <code>NOT_SHARED</code>, <code>SHARED_WITH_ME</code>, or <code>SHARED_BY_ME</code>.</p> </li> <li> <p> <code>Status</code>: The status of the query logging configuration. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfig.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfig-Status\">Status</a>. </p> </li> </ul> <p> <b>ListResolverQueryLogConfigAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreationTime</code>: The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, specify the cause: <code>DESTINATION_NOT_FOUND</code> or <code>ACCESS_DENIED</code>.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association.</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration that a VPC is associated with.</p> </li> <li> <p> <code>ResourceId</code>: The ID of the Amazon VPC that is associated with the query logging configuration.</p> </li> <li> <p> <code>Status</code>: The status of the query logging association. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfigAssociation.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfigAssociation-Status\">Status</a>. </p> </li> </ul>\n@param name The name of the parameter that you want to use to filter objects.</p> <p>The valid values for <code>Name</code> depend on the action that you're including the filter in, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigs.html\">ListResolverQueryLogConfigs</a>, or <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigAssociations.html\">ListResolverQueryLogConfigAssociations</a>.</p> <note> <p>In early versions of Resolver, values for <code>Name</code> were listed as uppercase, with underscore (_) delimiters. For example, <code>CreatorRequestId</code> was originally listed as <code>CREATOR_REQUEST_ID</code>. Uppercase values for <code>Name</code> are still supported.</p> </note> <p> <b>ListResolverEndpoints</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Direction</code>: Whether you want to return inbound or outbound Resolver endpoints. If you specify <code>DIRECTION</code> for <code>Name</code>, specify <code>INBOUND</code> or <code>OUTBOUND</code> for <code>Values</code>.</p> </li> <li> <p> <code>HostVpcId</code>: The ID of the VPC that inbound DNS queries pass through on the way from your network to your VPCs in a region, or the VPC that outbound queries pass through on the way from your VPCs to your network. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request, <code>SubnetId</code> indirectly identifies the VPC. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> request, the VPC ID for a Resolver endpoint is returned in the <code>HostVPCId</code> element. </p> </li> <li> <p> <code>IpAddressCount</code>: The number of IP addresses that you have associated with the Resolver endpoint.</p> </li> <li> <p> <code>Name</code>: The name of the Resolver endpoint.</p> </li> <li> <p> <code>SecurityGroupIds</code>: The IDs of the VPC security groups that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver endpoint. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>OPERATIONAL</code>, <code>UPDATING</code>, <code>AUTO_RECOVERING</code>, <code>ACTION_NEEDED</code>, or <code>DELETING</code>. For more information, see <code>Status</code> in <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverEndpoint.html\">ResolverEndpoint</a>.</p> </li> </ul> <p> <b>ListResolverRules</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver rule.</p> </li> <li> <p> <code>DomainName</code>: The domain name for which Resolver is forwarding DNS queries to your network. In the value that you specify for <code>Values</code>, include a trailing dot (.) after the domain name. For example, if the domain name is example.com, specify the following value. Note the \".\" after <code>com</code>:</p> <p> <code>example.com.</code> </p> </li> <li> <p> <code>Name</code>: The name of the Resolver rule.</p> </li> <li> <p> <code>ResolverEndpointId</code>: The ID of the Resolver endpoint that the Resolver rule is associated with.</p> <note> <p>You can filter on the Resolver endpoint only for rules that have a value of <code>FORWARD</code> for <code>RuleType</code>.</p> </note> </li> <li> <p> <code>Status</code>: The status of the Resolver rule. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>COMPLETE</code>, <code>DELETING</code>, <code>UPDATING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>Type</code>: The type of the Resolver rule. If you specify <code>TYPE</code> for <code>Name</code>, specify <code>FORWARD</code> or <code>SYSTEM</code> for <code>Values</code>.</p> </li> </ul> <p> <b>ListResolverRuleAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Name</code>: The name of the Resolver rule association.</p> </li> <li> <p> <code>ResolverRuleId</code>: The ID of the Resolver rule that is associated with one or more VPCs.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver rule association. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>COMPLETE</code>, <code>DELETING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>VPCId</code>: The ID of the VPC that the Resolver rule is associated with.</p> </li> </ul> <p> <b>ListResolverQueryLogConfigs</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Arn</code>: The ARN for the query logging configuration.</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the query logging configuration.</p> </li> <li> <p> <code>CreationTime</code>: The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC). </p> </li> <li> <p> <code>CreatorRequestId</code>: A unique string that identifies the request that created the query logging configuration.</p> </li> <li> <p> <code>Destination</code>: The AWS service that you want to forward query logs to. Valid values include the following:</p> <ul> <li> <p> <code>S3</code> </p> </li> <li> <p> <code>CloudWatchLogs</code> </p> </li> <li> <p> <code>KinesisFirehose</code> </p> </li> </ul> </li> <li> <p> <code>DestinationArn</code>: The ARN of the location that Resolver is sending query logs to. This value can be the ARN for an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>Name</code>: The name of the query logging configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account ID for the account that created the query logging configuration.</p> </li> <li> <p> <code>ShareStatus</code>: An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Valid values include: <code>NOT_SHARED</code>, <code>SHARED_WITH_ME</code>, or <code>SHARED_BY_ME</code>.</p> </li> <li> <p> <code>Status</code>: The status of the query logging configuration. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfig.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfig-Status\">Status</a>. </p> </li> </ul> <p> <b>ListResolverQueryLogConfigAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreationTime</code>: The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, specify the cause: <code>DESTINATION_NOT_FOUND</code> or <code>ACCESS_DENIED</code>.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association.</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration that a VPC is associated with.</p> </li> <li> <p> <code>ResourceId</code>: The ID of the Amazon VPC that is associated with the query logging configuration.</p> </li> <li> <p> <code>Status</code>: The status of the query logging association. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfigAssociation.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfigAssociation-Status\">Status</a>. </p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>The name of the parameter that you want to use to filter objects.</p> <p>The valid values for <code>Name</code> depend on the action that you're including the filter in, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigs.html\">ListResolverQueryLogConfigs</a>, or <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigAssociations.html\">ListResolverQueryLogConfigAssociations</a>.</p> <note> <p>In early versions of Resolver, values for <code>Name</code> were listed as uppercase, with underscore (_) delimiters. For example, <code>CreatorRequestId</code> was originally listed as <code>CREATOR_REQUEST_ID</code>. Uppercase values for <code>Name</code> are still supported.</p> </note> <p> <b>ListResolverEndpoints</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Direction</code>: Whether you want to return inbound or outbound Resolver endpoints. If you specify <code>DIRECTION</code> for <code>Name</code>, specify <code>INBOUND</code> or <code>OUTBOUND</code> for <code>Values</code>.</p> </li> <li> <p> <code>HostVpcId</code>: The ID of the VPC that inbound DNS queries pass through on the way from your network to your VPCs in a region, or the VPC that outbound queries pass through on the way from your VPCs to your network. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request, <code>SubnetId</code> indirectly identifies the VPC. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> request, the VPC ID for a Resolver endpoint is returned in the <code>HostVPCId</code> element. </p> </li> <li> <p> <code>IpAddressCount</code>: The number of IP addresses that you have associated with the Resolver endpoint.</p> </li> <li> <p> <code>Name</code>: The name of the Resolver endpoint.</p> </li> <li> <p> <code>SecurityGroupIds</code>: The IDs of the VPC security groups that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver endpoint. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>OPERATIONAL</code>, <code>UPDATING</code>, <code>AUTO_RECOVERING</code>, <code>ACTION_NEEDED</code>, or <code>DELETING</code>. For more information, see <code>Status</code> in <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverEndpoint.html\">ResolverEndpoint</a>.</p> </li> </ul> <p> <b>ListResolverRules</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver rule.</p> </li> <li> <p> <code>DomainName</code>: The domain name for which Resolver is forwarding DNS queries to your network. In the value that you specify for <code>Values</code>, include a trailing dot (.) after the domain name. For example, if the domain name is example.com, specify the following value. Note the \".\" after <code>com</code>:</p> <p> <code>example.com.</code> </p> </li> <li> <p> <code>Name</code>: The name of the Resolver rule.</p> </li> <li> <p> <code>ResolverEndpointId</code>: The ID of the Resolver endpoint that the Resolver rule is associated with.</p> <note> <p>You can filter on the Resolver endpoint only for rules that have a value of <code>FORWARD</code> for <code>RuleType</code>.</p> </note> </li> <li> <p> <code>Status</code>: The status of the Resolver rule. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>COMPLETE</code>, <code>DELETING</code>, <code>UPDATING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>Type</code>: The type of the Resolver rule. If you specify <code>TYPE</code> for <code>Name</code>, specify <code>FORWARD</code> or <code>SYSTEM</code> for <code>Values</code>.</p> </li> </ul> <p> <b>ListResolverRuleAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Name</code>: The name of the Resolver rule association.</p> </li> <li> <p> <code>ResolverRuleId</code>: The ID of the Resolver rule that is associated with one or more VPCs.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver rule association. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>COMPLETE</code>, <code>DELETING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>VPCId</code>: The ID of the VPC that the Resolver rule is associated with.</p> </li> </ul> <p> <b>ListResolverQueryLogConfigs</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Arn</code>: The ARN for the query logging configuration.</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the query logging configuration.</p> </li> <li> <p> <code>CreationTime</code>: The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC). </p> </li> <li> <p> <code>CreatorRequestId</code>: A unique string that identifies the request that created the query logging configuration.</p> </li> <li> <p> <code>Destination</code>: The AWS service that you want to forward query logs to. Valid values include the following:</p> <ul> <li> <p> <code>S3</code> </p> </li> <li> <p> <code>CloudWatchLogs</code> </p> </li> <li> <p> <code>KinesisFirehose</code> </p> </li> </ul> </li> <li> <p> <code>DestinationArn</code>: The ARN of the location that Resolver is sending query logs to. This value can be the ARN for an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>Name</code>: The name of the query logging configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account ID for the account that created the query logging configuration.</p> </li> <li> <p> <code>ShareStatus</code>: An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Valid values include: <code>NOT_SHARED</code>, <code>SHARED_WITH_ME</code>, or <code>SHARED_BY_ME</code>.</p> </li> <li> <p> <code>Status</code>: The status of the query logging configuration. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfig.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfig-Status\">Status</a>. </p> </li> </ul> <p> <b>ListResolverQueryLogConfigAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreationTime</code>: The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, specify the cause: <code>DESTINATION_NOT_FOUND</code> or <code>ACCESS_DENIED</code>.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association.</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration that a VPC is associated with.</p> </li> <li> <p> <code>ResourceId</code>: The ID of the Amazon VPC that is associated with the query logging configuration.</p> </li> <li> <p> <code>Status</code>: The status of the query logging association. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfigAssociation.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfigAssociation-Status\">Status</a>. </p> </li> </ul>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Values",
        "c2jShape" : "FilterValues",
        "deprecated" : false,
        "documentation" : "<p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as Resolver endpoints or Resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound Resolver endpoints, specify <code>Direction</code> for <code>Name</code> and specify <code>INBOUND</code> for <code>Values</code>.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as Resolver endpoints or Resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound Resolver endpoints, specify <code>Direction</code> for <code>Name</code> and specify <code>INBOUND</code> for <code>Values</code>.</p>\n@param values When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as Resolver endpoints or Resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound Resolver endpoints, specify <code>Direction</code> for <code>Name</code> and specify <code>INBOUND</code> for <code>Values</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withValues",
        "getterDocumentation" : "/**<p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as Resolver endpoints or Resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound Resolver endpoints, specify <code>Direction</code> for <code>Name</code> and specify <code>INBOUND</code> for <code>Values</code>.</p>\n@return When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as Resolver endpoints or Resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound Resolver endpoints, specify <code>Direction</code> for <code>Name</code> and specify <code>INBOUND</code> for <code>Values</code>.*/",
        "getterMethodName" : "getValues",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Values",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Values",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "FilterValue",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Values",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as Resolver endpoints or Resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound Resolver endpoints, specify <code>Direction</code> for <code>Name</code> and specify <code>INBOUND</code> for <code>Values</code>.</p>\n@param values When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as Resolver endpoints or Resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound Resolver endpoints, specify <code>Direction</code> for <code>Name</code> and specify <code>INBOUND</code> for <code>Values</code>.*/",
        "setterMethodName" : "setValues",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "values",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as Resolver endpoints or Resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound Resolver endpoints, specify <code>Direction</code> for <code>Name</code> and specify <code>INBOUND</code> for <code>Values</code>.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setValues(java.util.Collection)} or {@link #withValues(java.util.Collection)} if you want to override the existing values.</p>\n@param values When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as Resolver endpoints or Resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound Resolver endpoints, specify <code>Direction</code> for <code>Name</code> and specify <code>INBOUND</code> for <code>Values</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "values",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as Resolver endpoints or Resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound Resolver endpoints, specify <code>Direction</code> for <code>Name</code> and specify <code>INBOUND</code> for <code>Values</code>.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "FilterName",
          "deprecated" : false,
          "documentation" : "<p>The name of the parameter that you want to use to filter objects.</p> <p>The valid values for <code>Name</code> depend on the action that you're including the filter in, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigs.html\">ListResolverQueryLogConfigs</a>, or <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigAssociations.html\">ListResolverQueryLogConfigAssociations</a>.</p> <note> <p>In early versions of Resolver, values for <code>Name</code> were listed as uppercase, with underscore (_) delimiters. For example, <code>CreatorRequestId</code> was originally listed as <code>CREATOR_REQUEST_ID</code>. Uppercase values for <code>Name</code> are still supported.</p> </note> <p> <b>ListResolverEndpoints</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Direction</code>: Whether you want to return inbound or outbound Resolver endpoints. If you specify <code>DIRECTION</code> for <code>Name</code>, specify <code>INBOUND</code> or <code>OUTBOUND</code> for <code>Values</code>.</p> </li> <li> <p> <code>HostVpcId</code>: The ID of the VPC that inbound DNS queries pass through on the way from your network to your VPCs in a region, or the VPC that outbound queries pass through on the way from your VPCs to your network. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request, <code>SubnetId</code> indirectly identifies the VPC. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> request, the VPC ID for a Resolver endpoint is returned in the <code>HostVPCId</code> element. </p> </li> <li> <p> <code>IpAddressCount</code>: The number of IP addresses that you have associated with the Resolver endpoint.</p> </li> <li> <p> <code>Name</code>: The name of the Resolver endpoint.</p> </li> <li> <p> <code>SecurityGroupIds</code>: The IDs of the VPC security groups that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver endpoint. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>OPERATIONAL</code>, <code>UPDATING</code>, <code>AUTO_RECOVERING</code>, <code>ACTION_NEEDED</code>, or <code>DELETING</code>. For more information, see <code>Status</code> in <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverEndpoint.html\">ResolverEndpoint</a>.</p> </li> </ul> <p> <b>ListResolverRules</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver rule.</p> </li> <li> <p> <code>DomainName</code>: The domain name for which Resolver is forwarding DNS queries to your network. In the value that you specify for <code>Values</code>, include a trailing dot (.) after the domain name. For example, if the domain name is example.com, specify the following value. Note the \".\" after <code>com</code>:</p> <p> <code>example.com.</code> </p> </li> <li> <p> <code>Name</code>: The name of the Resolver rule.</p> </li> <li> <p> <code>ResolverEndpointId</code>: The ID of the Resolver endpoint that the Resolver rule is associated with.</p> <note> <p>You can filter on the Resolver endpoint only for rules that have a value of <code>FORWARD</code> for <code>RuleType</code>.</p> </note> </li> <li> <p> <code>Status</code>: The status of the Resolver rule. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>COMPLETE</code>, <code>DELETING</code>, <code>UPDATING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>Type</code>: The type of the Resolver rule. If you specify <code>TYPE</code> for <code>Name</code>, specify <code>FORWARD</code> or <code>SYSTEM</code> for <code>Values</code>.</p> </li> </ul> <p> <b>ListResolverRuleAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Name</code>: The name of the Resolver rule association.</p> </li> <li> <p> <code>ResolverRuleId</code>: The ID of the Resolver rule that is associated with one or more VPCs.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver rule association. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>COMPLETE</code>, <code>DELETING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>VPCId</code>: The ID of the VPC that the Resolver rule is associated with.</p> </li> </ul> <p> <b>ListResolverQueryLogConfigs</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Arn</code>: The ARN for the query logging configuration.</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the query logging configuration.</p> </li> <li> <p> <code>CreationTime</code>: The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC). </p> </li> <li> <p> <code>CreatorRequestId</code>: A unique string that identifies the request that created the query logging configuration.</p> </li> <li> <p> <code>Destination</code>: The AWS service that you want to forward query logs to. Valid values include the following:</p> <ul> <li> <p> <code>S3</code> </p> </li> <li> <p> <code>CloudWatchLogs</code> </p> </li> <li> <p> <code>KinesisFirehose</code> </p> </li> </ul> </li> <li> <p> <code>DestinationArn</code>: The ARN of the location that Resolver is sending query logs to. This value can be the ARN for an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>Name</code>: The name of the query logging configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account ID for the account that created the query logging configuration.</p> </li> <li> <p> <code>ShareStatus</code>: An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Valid values include: <code>NOT_SHARED</code>, <code>SHARED_WITH_ME</code>, or <code>SHARED_BY_ME</code>.</p> </li> <li> <p> <code>Status</code>: The status of the query logging configuration. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfig.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfig-Status\">Status</a>. </p> </li> </ul> <p> <b>ListResolverQueryLogConfigAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreationTime</code>: The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, specify the cause: <code>DESTINATION_NOT_FOUND</code> or <code>ACCESS_DENIED</code>.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association.</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration that a VPC is associated with.</p> </li> <li> <p> <code>ResourceId</code>: The ID of the Amazon VPC that is associated with the query logging configuration.</p> </li> <li> <p> <code>Status</code>: The status of the query logging association. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfigAssociation.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfigAssociation-Status\">Status</a>. </p> </li> </ul>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the parameter that you want to use to filter objects.</p> <p>The valid values for <code>Name</code> depend on the action that you're including the filter in, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigs.html\">ListResolverQueryLogConfigs</a>, or <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigAssociations.html\">ListResolverQueryLogConfigAssociations</a>.</p> <note> <p>In early versions of Resolver, values for <code>Name</code> were listed as uppercase, with underscore (_) delimiters. For example, <code>CreatorRequestId</code> was originally listed as <code>CREATOR_REQUEST_ID</code>. Uppercase values for <code>Name</code> are still supported.</p> </note> <p> <b>ListResolverEndpoints</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Direction</code>: Whether you want to return inbound or outbound Resolver endpoints. If you specify <code>DIRECTION</code> for <code>Name</code>, specify <code>INBOUND</code> or <code>OUTBOUND</code> for <code>Values</code>.</p> </li> <li> <p> <code>HostVpcId</code>: The ID of the VPC that inbound DNS queries pass through on the way from your network to your VPCs in a region, or the VPC that outbound queries pass through on the way from your VPCs to your network. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request, <code>SubnetId</code> indirectly identifies the VPC. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> request, the VPC ID for a Resolver endpoint is returned in the <code>HostVPCId</code> element. </p> </li> <li> <p> <code>IpAddressCount</code>: The number of IP addresses that you have associated with the Resolver endpoint.</p> </li> <li> <p> <code>Name</code>: The name of the Resolver endpoint.</p> </li> <li> <p> <code>SecurityGroupIds</code>: The IDs of the VPC security groups that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver endpoint. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>OPERATIONAL</code>, <code>UPDATING</code>, <code>AUTO_RECOVERING</code>, <code>ACTION_NEEDED</code>, or <code>DELETING</code>. For more information, see <code>Status</code> in <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverEndpoint.html\">ResolverEndpoint</a>.</p> </li> </ul> <p> <b>ListResolverRules</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver rule.</p> </li> <li> <p> <code>DomainName</code>: The domain name for which Resolver is forwarding DNS queries to your network. In the value that you specify for <code>Values</code>, include a trailing dot (.) after the domain name. For example, if the domain name is example.com, specify the following value. Note the \".\" after <code>com</code>:</p> <p> <code>example.com.</code> </p> </li> <li> <p> <code>Name</code>: The name of the Resolver rule.</p> </li> <li> <p> <code>ResolverEndpointId</code>: The ID of the Resolver endpoint that the Resolver rule is associated with.</p> <note> <p>You can filter on the Resolver endpoint only for rules that have a value of <code>FORWARD</code> for <code>RuleType</code>.</p> </note> </li> <li> <p> <code>Status</code>: The status of the Resolver rule. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>COMPLETE</code>, <code>DELETING</code>, <code>UPDATING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>Type</code>: The type of the Resolver rule. If you specify <code>TYPE</code> for <code>Name</code>, specify <code>FORWARD</code> or <code>SYSTEM</code> for <code>Values</code>.</p> </li> </ul> <p> <b>ListResolverRuleAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Name</code>: The name of the Resolver rule association.</p> </li> <li> <p> <code>ResolverRuleId</code>: The ID of the Resolver rule that is associated with one or more VPCs.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver rule association. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>COMPLETE</code>, <code>DELETING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>VPCId</code>: The ID of the VPC that the Resolver rule is associated with.</p> </li> </ul> <p> <b>ListResolverQueryLogConfigs</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Arn</code>: The ARN for the query logging configuration.</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the query logging configuration.</p> </li> <li> <p> <code>CreationTime</code>: The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC). </p> </li> <li> <p> <code>CreatorRequestId</code>: A unique string that identifies the request that created the query logging configuration.</p> </li> <li> <p> <code>Destination</code>: The AWS service that you want to forward query logs to. Valid values include the following:</p> <ul> <li> <p> <code>S3</code> </p> </li> <li> <p> <code>CloudWatchLogs</code> </p> </li> <li> <p> <code>KinesisFirehose</code> </p> </li> </ul> </li> <li> <p> <code>DestinationArn</code>: The ARN of the location that Resolver is sending query logs to. This value can be the ARN for an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>Name</code>: The name of the query logging configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account ID for the account that created the query logging configuration.</p> </li> <li> <p> <code>ShareStatus</code>: An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Valid values include: <code>NOT_SHARED</code>, <code>SHARED_WITH_ME</code>, or <code>SHARED_BY_ME</code>.</p> </li> <li> <p> <code>Status</code>: The status of the query logging configuration. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfig.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfig-Status\">Status</a>. </p> </li> </ul> <p> <b>ListResolverQueryLogConfigAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreationTime</code>: The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, specify the cause: <code>DESTINATION_NOT_FOUND</code> or <code>ACCESS_DENIED</code>.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association.</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration that a VPC is associated with.</p> </li> <li> <p> <code>ResourceId</code>: The ID of the Amazon VPC that is associated with the query logging configuration.</p> </li> <li> <p> <code>Status</code>: The status of the query logging association. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfigAssociation.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfigAssociation-Status\">Status</a>. </p> </li> </ul>\n@param name The name of the parameter that you want to use to filter objects.</p> <p>The valid values for <code>Name</code> depend on the action that you're including the filter in, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigs.html\">ListResolverQueryLogConfigs</a>, or <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigAssociations.html\">ListResolverQueryLogConfigAssociations</a>.</p> <note> <p>In early versions of Resolver, values for <code>Name</code> were listed as uppercase, with underscore (_) delimiters. For example, <code>CreatorRequestId</code> was originally listed as <code>CREATOR_REQUEST_ID</code>. Uppercase values for <code>Name</code> are still supported.</p> </note> <p> <b>ListResolverEndpoints</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Direction</code>: Whether you want to return inbound or outbound Resolver endpoints. If you specify <code>DIRECTION</code> for <code>Name</code>, specify <code>INBOUND</code> or <code>OUTBOUND</code> for <code>Values</code>.</p> </li> <li> <p> <code>HostVpcId</code>: The ID of the VPC that inbound DNS queries pass through on the way from your network to your VPCs in a region, or the VPC that outbound queries pass through on the way from your VPCs to your network. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request, <code>SubnetId</code> indirectly identifies the VPC. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> request, the VPC ID for a Resolver endpoint is returned in the <code>HostVPCId</code> element. </p> </li> <li> <p> <code>IpAddressCount</code>: The number of IP addresses that you have associated with the Resolver endpoint.</p> </li> <li> <p> <code>Name</code>: The name of the Resolver endpoint.</p> </li> <li> <p> <code>SecurityGroupIds</code>: The IDs of the VPC security groups that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver endpoint. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>OPERATIONAL</code>, <code>UPDATING</code>, <code>AUTO_RECOVERING</code>, <code>ACTION_NEEDED</code>, or <code>DELETING</code>. For more information, see <code>Status</code> in <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverEndpoint.html\">ResolverEndpoint</a>.</p> </li> </ul> <p> <b>ListResolverRules</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver rule.</p> </li> <li> <p> <code>DomainName</code>: The domain name for which Resolver is forwarding DNS queries to your network. In the value that you specify for <code>Values</code>, include a trailing dot (.) after the domain name. For example, if the domain name is example.com, specify the following value. Note the \".\" after <code>com</code>:</p> <p> <code>example.com.</code> </p> </li> <li> <p> <code>Name</code>: The name of the Resolver rule.</p> </li> <li> <p> <code>ResolverEndpointId</code>: The ID of the Resolver endpoint that the Resolver rule is associated with.</p> <note> <p>You can filter on the Resolver endpoint only for rules that have a value of <code>FORWARD</code> for <code>RuleType</code>.</p> </note> </li> <li> <p> <code>Status</code>: The status of the Resolver rule. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>COMPLETE</code>, <code>DELETING</code>, <code>UPDATING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>Type</code>: The type of the Resolver rule. If you specify <code>TYPE</code> for <code>Name</code>, specify <code>FORWARD</code> or <code>SYSTEM</code> for <code>Values</code>.</p> </li> </ul> <p> <b>ListResolverRuleAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Name</code>: The name of the Resolver rule association.</p> </li> <li> <p> <code>ResolverRuleId</code>: The ID of the Resolver rule that is associated with one or more VPCs.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver rule association. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>COMPLETE</code>, <code>DELETING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>VPCId</code>: The ID of the VPC that the Resolver rule is associated with.</p> </li> </ul> <p> <b>ListResolverQueryLogConfigs</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Arn</code>: The ARN for the query logging configuration.</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the query logging configuration.</p> </li> <li> <p> <code>CreationTime</code>: The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC). </p> </li> <li> <p> <code>CreatorRequestId</code>: A unique string that identifies the request that created the query logging configuration.</p> </li> <li> <p> <code>Destination</code>: The AWS service that you want to forward query logs to. Valid values include the following:</p> <ul> <li> <p> <code>S3</code> </p> </li> <li> <p> <code>CloudWatchLogs</code> </p> </li> <li> <p> <code>KinesisFirehose</code> </p> </li> </ul> </li> <li> <p> <code>DestinationArn</code>: The ARN of the location that Resolver is sending query logs to. This value can be the ARN for an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>Name</code>: The name of the query logging configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account ID for the account that created the query logging configuration.</p> </li> <li> <p> <code>ShareStatus</code>: An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Valid values include: <code>NOT_SHARED</code>, <code>SHARED_WITH_ME</code>, or <code>SHARED_BY_ME</code>.</p> </li> <li> <p> <code>Status</code>: The status of the query logging configuration. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfig.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfig-Status\">Status</a>. </p> </li> </ul> <p> <b>ListResolverQueryLogConfigAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreationTime</code>: The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, specify the cause: <code>DESTINATION_NOT_FOUND</code> or <code>ACCESS_DENIED</code>.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association.</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration that a VPC is associated with.</p> </li> <li> <p> <code>ResourceId</code>: The ID of the Amazon VPC that is associated with the query logging configuration.</p> </li> <li> <p> <code>Status</code>: The status of the query logging association. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfigAssociation.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfigAssociation-Status\">Status</a>. </p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>The name of the parameter that you want to use to filter objects.</p> <p>The valid values for <code>Name</code> depend on the action that you're including the filter in, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigs.html\">ListResolverQueryLogConfigs</a>, or <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigAssociations.html\">ListResolverQueryLogConfigAssociations</a>.</p> <note> <p>In early versions of Resolver, values for <code>Name</code> were listed as uppercase, with underscore (_) delimiters. For example, <code>CreatorRequestId</code> was originally listed as <code>CREATOR_REQUEST_ID</code>. Uppercase values for <code>Name</code> are still supported.</p> </note> <p> <b>ListResolverEndpoints</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Direction</code>: Whether you want to return inbound or outbound Resolver endpoints. If you specify <code>DIRECTION</code> for <code>Name</code>, specify <code>INBOUND</code> or <code>OUTBOUND</code> for <code>Values</code>.</p> </li> <li> <p> <code>HostVpcId</code>: The ID of the VPC that inbound DNS queries pass through on the way from your network to your VPCs in a region, or the VPC that outbound queries pass through on the way from your VPCs to your network. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request, <code>SubnetId</code> indirectly identifies the VPC. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> request, the VPC ID for a Resolver endpoint is returned in the <code>HostVPCId</code> element. </p> </li> <li> <p> <code>IpAddressCount</code>: The number of IP addresses that you have associated with the Resolver endpoint.</p> </li> <li> <p> <code>Name</code>: The name of the Resolver endpoint.</p> </li> <li> <p> <code>SecurityGroupIds</code>: The IDs of the VPC security groups that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver endpoint. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>OPERATIONAL</code>, <code>UPDATING</code>, <code>AUTO_RECOVERING</code>, <code>ACTION_NEEDED</code>, or <code>DELETING</code>. For more information, see <code>Status</code> in <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverEndpoint.html\">ResolverEndpoint</a>.</p> </li> </ul> <p> <b>ListResolverRules</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver rule.</p> </li> <li> <p> <code>DomainName</code>: The domain name for which Resolver is forwarding DNS queries to your network. In the value that you specify for <code>Values</code>, include a trailing dot (.) after the domain name. For example, if the domain name is example.com, specify the following value. Note the \".\" after <code>com</code>:</p> <p> <code>example.com.</code> </p> </li> <li> <p> <code>Name</code>: The name of the Resolver rule.</p> </li> <li> <p> <code>ResolverEndpointId</code>: The ID of the Resolver endpoint that the Resolver rule is associated with.</p> <note> <p>You can filter on the Resolver endpoint only for rules that have a value of <code>FORWARD</code> for <code>RuleType</code>.</p> </note> </li> <li> <p> <code>Status</code>: The status of the Resolver rule. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>COMPLETE</code>, <code>DELETING</code>, <code>UPDATING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>Type</code>: The type of the Resolver rule. If you specify <code>TYPE</code> for <code>Name</code>, specify <code>FORWARD</code> or <code>SYSTEM</code> for <code>Values</code>.</p> </li> </ul> <p> <b>ListResolverRuleAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Name</code>: The name of the Resolver rule association.</p> </li> <li> <p> <code>ResolverRuleId</code>: The ID of the Resolver rule that is associated with one or more VPCs.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver rule association. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>COMPLETE</code>, <code>DELETING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>VPCId</code>: The ID of the VPC that the Resolver rule is associated with.</p> </li> </ul> <p> <b>ListResolverQueryLogConfigs</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Arn</code>: The ARN for the query logging configuration.</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the query logging configuration.</p> </li> <li> <p> <code>CreationTime</code>: The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC). </p> </li> <li> <p> <code>CreatorRequestId</code>: A unique string that identifies the request that created the query logging configuration.</p> </li> <li> <p> <code>Destination</code>: The AWS service that you want to forward query logs to. Valid values include the following:</p> <ul> <li> <p> <code>S3</code> </p> </li> <li> <p> <code>CloudWatchLogs</code> </p> </li> <li> <p> <code>KinesisFirehose</code> </p> </li> </ul> </li> <li> <p> <code>DestinationArn</code>: The ARN of the location that Resolver is sending query logs to. This value can be the ARN for an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>Name</code>: The name of the query logging configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account ID for the account that created the query logging configuration.</p> </li> <li> <p> <code>ShareStatus</code>: An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Valid values include: <code>NOT_SHARED</code>, <code>SHARED_WITH_ME</code>, or <code>SHARED_BY_ME</code>.</p> </li> <li> <p> <code>Status</code>: The status of the query logging configuration. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfig.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfig-Status\">Status</a>. </p> </li> </ul> <p> <b>ListResolverQueryLogConfigAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreationTime</code>: The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, specify the cause: <code>DESTINATION_NOT_FOUND</code> or <code>ACCESS_DENIED</code>.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association.</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration that a VPC is associated with.</p> </li> <li> <p> <code>ResourceId</code>: The ID of the Amazon VPC that is associated with the query logging configuration.</p> </li> <li> <p> <code>Status</code>: The status of the query logging association. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfigAssociation.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfigAssociation-Status\">Status</a>. </p> </li> </ul>\n@return The name of the parameter that you want to use to filter objects.</p> <p>The valid values for <code>Name</code> depend on the action that you're including the filter in, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigs.html\">ListResolverQueryLogConfigs</a>, or <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigAssociations.html\">ListResolverQueryLogConfigAssociations</a>.</p> <note> <p>In early versions of Resolver, values for <code>Name</code> were listed as uppercase, with underscore (_) delimiters. For example, <code>CreatorRequestId</code> was originally listed as <code>CREATOR_REQUEST_ID</code>. Uppercase values for <code>Name</code> are still supported.</p> </note> <p> <b>ListResolverEndpoints</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Direction</code>: Whether you want to return inbound or outbound Resolver endpoints. If you specify <code>DIRECTION</code> for <code>Name</code>, specify <code>INBOUND</code> or <code>OUTBOUND</code> for <code>Values</code>.</p> </li> <li> <p> <code>HostVpcId</code>: The ID of the VPC that inbound DNS queries pass through on the way from your network to your VPCs in a region, or the VPC that outbound queries pass through on the way from your VPCs to your network. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request, <code>SubnetId</code> indirectly identifies the VPC. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> request, the VPC ID for a Resolver endpoint is returned in the <code>HostVPCId</code> element. </p> </li> <li> <p> <code>IpAddressCount</code>: The number of IP addresses that you have associated with the Resolver endpoint.</p> </li> <li> <p> <code>Name</code>: The name of the Resolver endpoint.</p> </li> <li> <p> <code>SecurityGroupIds</code>: The IDs of the VPC security groups that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver endpoint. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>OPERATIONAL</code>, <code>UPDATING</code>, <code>AUTO_RECOVERING</code>, <code>ACTION_NEEDED</code>, or <code>DELETING</code>. For more information, see <code>Status</code> in <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverEndpoint.html\">ResolverEndpoint</a>.</p> </li> </ul> <p> <b>ListResolverRules</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver rule.</p> </li> <li> <p> <code>DomainName</code>: The domain name for which Resolver is forwarding DNS queries to your network. In the value that you specify for <code>Values</code>, include a trailing dot (.) after the domain name. For example, if the domain name is example.com, specify the following value. Note the \".\" after <code>com</code>:</p> <p> <code>example.com.</code> </p> </li> <li> <p> <code>Name</code>: The name of the Resolver rule.</p> </li> <li> <p> <code>ResolverEndpointId</code>: The ID of the Resolver endpoint that the Resolver rule is associated with.</p> <note> <p>You can filter on the Resolver endpoint only for rules that have a value of <code>FORWARD</code> for <code>RuleType</code>.</p> </note> </li> <li> <p> <code>Status</code>: The status of the Resolver rule. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>COMPLETE</code>, <code>DELETING</code>, <code>UPDATING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>Type</code>: The type of the Resolver rule. If you specify <code>TYPE</code> for <code>Name</code>, specify <code>FORWARD</code> or <code>SYSTEM</code> for <code>Values</code>.</p> </li> </ul> <p> <b>ListResolverRuleAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Name</code>: The name of the Resolver rule association.</p> </li> <li> <p> <code>ResolverRuleId</code>: The ID of the Resolver rule that is associated with one or more VPCs.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver rule association. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>COMPLETE</code>, <code>DELETING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>VPCId</code>: The ID of the VPC that the Resolver rule is associated with.</p> </li> </ul> <p> <b>ListResolverQueryLogConfigs</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Arn</code>: The ARN for the query logging configuration.</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the query logging configuration.</p> </li> <li> <p> <code>CreationTime</code>: The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC). </p> </li> <li> <p> <code>CreatorRequestId</code>: A unique string that identifies the request that created the query logging configuration.</p> </li> <li> <p> <code>Destination</code>: The AWS service that you want to forward query logs to. Valid values include the following:</p> <ul> <li> <p> <code>S3</code> </p> </li> <li> <p> <code>CloudWatchLogs</code> </p> </li> <li> <p> <code>KinesisFirehose</code> </p> </li> </ul> </li> <li> <p> <code>DestinationArn</code>: The ARN of the location that Resolver is sending query logs to. This value can be the ARN for an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>Name</code>: The name of the query logging configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account ID for the account that created the query logging configuration.</p> </li> <li> <p> <code>ShareStatus</code>: An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Valid values include: <code>NOT_SHARED</code>, <code>SHARED_WITH_ME</code>, or <code>SHARED_BY_ME</code>.</p> </li> <li> <p> <code>Status</code>: The status of the query logging configuration. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfig.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfig-Status\">Status</a>. </p> </li> </ul> <p> <b>ListResolverQueryLogConfigAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreationTime</code>: The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, specify the cause: <code>DESTINATION_NOT_FOUND</code> or <code>ACCESS_DENIED</code>.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association.</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration that a VPC is associated with.</p> </li> <li> <p> <code>ResourceId</code>: The ID of the Amazon VPC that is associated with the query logging configuration.</p> </li> <li> <p> <code>Status</code>: The status of the query logging association. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfigAssociation.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfigAssociation-Status\">Status</a>. </p> </li>*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Name",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the parameter that you want to use to filter objects.</p> <p>The valid values for <code>Name</code> depend on the action that you're including the filter in, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigs.html\">ListResolverQueryLogConfigs</a>, or <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigAssociations.html\">ListResolverQueryLogConfigAssociations</a>.</p> <note> <p>In early versions of Resolver, values for <code>Name</code> were listed as uppercase, with underscore (_) delimiters. For example, <code>CreatorRequestId</code> was originally listed as <code>CREATOR_REQUEST_ID</code>. Uppercase values for <code>Name</code> are still supported.</p> </note> <p> <b>ListResolverEndpoints</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Direction</code>: Whether you want to return inbound or outbound Resolver endpoints. If you specify <code>DIRECTION</code> for <code>Name</code>, specify <code>INBOUND</code> or <code>OUTBOUND</code> for <code>Values</code>.</p> </li> <li> <p> <code>HostVpcId</code>: The ID of the VPC that inbound DNS queries pass through on the way from your network to your VPCs in a region, or the VPC that outbound queries pass through on the way from your VPCs to your network. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request, <code>SubnetId</code> indirectly identifies the VPC. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> request, the VPC ID for a Resolver endpoint is returned in the <code>HostVPCId</code> element. </p> </li> <li> <p> <code>IpAddressCount</code>: The number of IP addresses that you have associated with the Resolver endpoint.</p> </li> <li> <p> <code>Name</code>: The name of the Resolver endpoint.</p> </li> <li> <p> <code>SecurityGroupIds</code>: The IDs of the VPC security groups that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver endpoint. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>OPERATIONAL</code>, <code>UPDATING</code>, <code>AUTO_RECOVERING</code>, <code>ACTION_NEEDED</code>, or <code>DELETING</code>. For more information, see <code>Status</code> in <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverEndpoint.html\">ResolverEndpoint</a>.</p> </li> </ul> <p> <b>ListResolverRules</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver rule.</p> </li> <li> <p> <code>DomainName</code>: The domain name for which Resolver is forwarding DNS queries to your network. In the value that you specify for <code>Values</code>, include a trailing dot (.) after the domain name. For example, if the domain name is example.com, specify the following value. Note the \".\" after <code>com</code>:</p> <p> <code>example.com.</code> </p> </li> <li> <p> <code>Name</code>: The name of the Resolver rule.</p> </li> <li> <p> <code>ResolverEndpointId</code>: The ID of the Resolver endpoint that the Resolver rule is associated with.</p> <note> <p>You can filter on the Resolver endpoint only for rules that have a value of <code>FORWARD</code> for <code>RuleType</code>.</p> </note> </li> <li> <p> <code>Status</code>: The status of the Resolver rule. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>COMPLETE</code>, <code>DELETING</code>, <code>UPDATING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>Type</code>: The type of the Resolver rule. If you specify <code>TYPE</code> for <code>Name</code>, specify <code>FORWARD</code> or <code>SYSTEM</code> for <code>Values</code>.</p> </li> </ul> <p> <b>ListResolverRuleAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Name</code>: The name of the Resolver rule association.</p> </li> <li> <p> <code>ResolverRuleId</code>: The ID of the Resolver rule that is associated with one or more VPCs.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver rule association. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>COMPLETE</code>, <code>DELETING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>VPCId</code>: The ID of the VPC that the Resolver rule is associated with.</p> </li> </ul> <p> <b>ListResolverQueryLogConfigs</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Arn</code>: The ARN for the query logging configuration.</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the query logging configuration.</p> </li> <li> <p> <code>CreationTime</code>: The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC). </p> </li> <li> <p> <code>CreatorRequestId</code>: A unique string that identifies the request that created the query logging configuration.</p> </li> <li> <p> <code>Destination</code>: The AWS service that you want to forward query logs to. Valid values include the following:</p> <ul> <li> <p> <code>S3</code> </p> </li> <li> <p> <code>CloudWatchLogs</code> </p> </li> <li> <p> <code>KinesisFirehose</code> </p> </li> </ul> </li> <li> <p> <code>DestinationArn</code>: The ARN of the location that Resolver is sending query logs to. This value can be the ARN for an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>Name</code>: The name of the query logging configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account ID for the account that created the query logging configuration.</p> </li> <li> <p> <code>ShareStatus</code>: An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Valid values include: <code>NOT_SHARED</code>, <code>SHARED_WITH_ME</code>, or <code>SHARED_BY_ME</code>.</p> </li> <li> <p> <code>Status</code>: The status of the query logging configuration. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfig.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfig-Status\">Status</a>. </p> </li> </ul> <p> <b>ListResolverQueryLogConfigAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreationTime</code>: The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, specify the cause: <code>DESTINATION_NOT_FOUND</code> or <code>ACCESS_DENIED</code>.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association.</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration that a VPC is associated with.</p> </li> <li> <p> <code>ResourceId</code>: The ID of the Amazon VPC that is associated with the query logging configuration.</p> </li> <li> <p> <code>Status</code>: The status of the query logging association. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfigAssociation.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfigAssociation-Status\">Status</a>. </p> </li> </ul>\n@param name The name of the parameter that you want to use to filter objects.</p> <p>The valid values for <code>Name</code> depend on the action that you're including the filter in, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigs.html\">ListResolverQueryLogConfigs</a>, or <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigAssociations.html\">ListResolverQueryLogConfigAssociations</a>.</p> <note> <p>In early versions of Resolver, values for <code>Name</code> were listed as uppercase, with underscore (_) delimiters. For example, <code>CreatorRequestId</code> was originally listed as <code>CREATOR_REQUEST_ID</code>. Uppercase values for <code>Name</code> are still supported.</p> </note> <p> <b>ListResolverEndpoints</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Direction</code>: Whether you want to return inbound or outbound Resolver endpoints. If you specify <code>DIRECTION</code> for <code>Name</code>, specify <code>INBOUND</code> or <code>OUTBOUND</code> for <code>Values</code>.</p> </li> <li> <p> <code>HostVpcId</code>: The ID of the VPC that inbound DNS queries pass through on the way from your network to your VPCs in a region, or the VPC that outbound queries pass through on the way from your VPCs to your network. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request, <code>SubnetId</code> indirectly identifies the VPC. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> request, the VPC ID for a Resolver endpoint is returned in the <code>HostVPCId</code> element. </p> </li> <li> <p> <code>IpAddressCount</code>: The number of IP addresses that you have associated with the Resolver endpoint.</p> </li> <li> <p> <code>Name</code>: The name of the Resolver endpoint.</p> </li> <li> <p> <code>SecurityGroupIds</code>: The IDs of the VPC security groups that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver endpoint. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>OPERATIONAL</code>, <code>UPDATING</code>, <code>AUTO_RECOVERING</code>, <code>ACTION_NEEDED</code>, or <code>DELETING</code>. For more information, see <code>Status</code> in <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverEndpoint.html\">ResolverEndpoint</a>.</p> </li> </ul> <p> <b>ListResolverRules</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver rule.</p> </li> <li> <p> <code>DomainName</code>: The domain name for which Resolver is forwarding DNS queries to your network. In the value that you specify for <code>Values</code>, include a trailing dot (.) after the domain name. For example, if the domain name is example.com, specify the following value. Note the \".\" after <code>com</code>:</p> <p> <code>example.com.</code> </p> </li> <li> <p> <code>Name</code>: The name of the Resolver rule.</p> </li> <li> <p> <code>ResolverEndpointId</code>: The ID of the Resolver endpoint that the Resolver rule is associated with.</p> <note> <p>You can filter on the Resolver endpoint only for rules that have a value of <code>FORWARD</code> for <code>RuleType</code>.</p> </note> </li> <li> <p> <code>Status</code>: The status of the Resolver rule. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>COMPLETE</code>, <code>DELETING</code>, <code>UPDATING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>Type</code>: The type of the Resolver rule. If you specify <code>TYPE</code> for <code>Name</code>, specify <code>FORWARD</code> or <code>SYSTEM</code> for <code>Values</code>.</p> </li> </ul> <p> <b>ListResolverRuleAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Name</code>: The name of the Resolver rule association.</p> </li> <li> <p> <code>ResolverRuleId</code>: The ID of the Resolver rule that is associated with one or more VPCs.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver rule association. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>COMPLETE</code>, <code>DELETING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>VPCId</code>: The ID of the VPC that the Resolver rule is associated with.</p> </li> </ul> <p> <b>ListResolverQueryLogConfigs</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Arn</code>: The ARN for the query logging configuration.</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the query logging configuration.</p> </li> <li> <p> <code>CreationTime</code>: The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC). </p> </li> <li> <p> <code>CreatorRequestId</code>: A unique string that identifies the request that created the query logging configuration.</p> </li> <li> <p> <code>Destination</code>: The AWS service that you want to forward query logs to. Valid values include the following:</p> <ul> <li> <p> <code>S3</code> </p> </li> <li> <p> <code>CloudWatchLogs</code> </p> </li> <li> <p> <code>KinesisFirehose</code> </p> </li> </ul> </li> <li> <p> <code>DestinationArn</code>: The ARN of the location that Resolver is sending query logs to. This value can be the ARN for an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>Name</code>: The name of the query logging configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account ID for the account that created the query logging configuration.</p> </li> <li> <p> <code>ShareStatus</code>: An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Valid values include: <code>NOT_SHARED</code>, <code>SHARED_WITH_ME</code>, or <code>SHARED_BY_ME</code>.</p> </li> <li> <p> <code>Status</code>: The status of the query logging configuration. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfig.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfig-Status\">Status</a>. </p> </li> </ul> <p> <b>ListResolverQueryLogConfigAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreationTime</code>: The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, specify the cause: <code>DESTINATION_NOT_FOUND</code> or <code>ACCESS_DENIED</code>.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association.</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration that a VPC is associated with.</p> </li> <li> <p> <code>ResourceId</code>: The ID of the Amazon VPC that is associated with the query logging configuration.</p> </li> <li> <p> <code>Status</code>: The status of the query logging association. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfigAssociation.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfigAssociation-Status\">Status</a>. </p> </li>*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the parameter that you want to use to filter objects.</p> <p>The valid values for <code>Name</code> depend on the action that you're including the filter in, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigs.html\">ListResolverQueryLogConfigs</a>, or <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigAssociations.html\">ListResolverQueryLogConfigAssociations</a>.</p> <note> <p>In early versions of Resolver, values for <code>Name</code> were listed as uppercase, with underscore (_) delimiters. For example, <code>CreatorRequestId</code> was originally listed as <code>CREATOR_REQUEST_ID</code>. Uppercase values for <code>Name</code> are still supported.</p> </note> <p> <b>ListResolverEndpoints</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Direction</code>: Whether you want to return inbound or outbound Resolver endpoints. If you specify <code>DIRECTION</code> for <code>Name</code>, specify <code>INBOUND</code> or <code>OUTBOUND</code> for <code>Values</code>.</p> </li> <li> <p> <code>HostVpcId</code>: The ID of the VPC that inbound DNS queries pass through on the way from your network to your VPCs in a region, or the VPC that outbound queries pass through on the way from your VPCs to your network. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request, <code>SubnetId</code> indirectly identifies the VPC. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> request, the VPC ID for a Resolver endpoint is returned in the <code>HostVPCId</code> element. </p> </li> <li> <p> <code>IpAddressCount</code>: The number of IP addresses that you have associated with the Resolver endpoint.</p> </li> <li> <p> <code>Name</code>: The name of the Resolver endpoint.</p> </li> <li> <p> <code>SecurityGroupIds</code>: The IDs of the VPC security groups that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver endpoint. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>OPERATIONAL</code>, <code>UPDATING</code>, <code>AUTO_RECOVERING</code>, <code>ACTION_NEEDED</code>, or <code>DELETING</code>. For more information, see <code>Status</code> in <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverEndpoint.html\">ResolverEndpoint</a>.</p> </li> </ul> <p> <b>ListResolverRules</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver rule.</p> </li> <li> <p> <code>DomainName</code>: The domain name for which Resolver is forwarding DNS queries to your network. In the value that you specify for <code>Values</code>, include a trailing dot (.) after the domain name. For example, if the domain name is example.com, specify the following value. Note the \".\" after <code>com</code>:</p> <p> <code>example.com.</code> </p> </li> <li> <p> <code>Name</code>: The name of the Resolver rule.</p> </li> <li> <p> <code>ResolverEndpointId</code>: The ID of the Resolver endpoint that the Resolver rule is associated with.</p> <note> <p>You can filter on the Resolver endpoint only for rules that have a value of <code>FORWARD</code> for <code>RuleType</code>.</p> </note> </li> <li> <p> <code>Status</code>: The status of the Resolver rule. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>COMPLETE</code>, <code>DELETING</code>, <code>UPDATING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>Type</code>: The type of the Resolver rule. If you specify <code>TYPE</code> for <code>Name</code>, specify <code>FORWARD</code> or <code>SYSTEM</code> for <code>Values</code>.</p> </li> </ul> <p> <b>ListResolverRuleAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Name</code>: The name of the Resolver rule association.</p> </li> <li> <p> <code>ResolverRuleId</code>: The ID of the Resolver rule that is associated with one or more VPCs.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver rule association. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>COMPLETE</code>, <code>DELETING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>VPCId</code>: The ID of the VPC that the Resolver rule is associated with.</p> </li> </ul> <p> <b>ListResolverQueryLogConfigs</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Arn</code>: The ARN for the query logging configuration.</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the query logging configuration.</p> </li> <li> <p> <code>CreationTime</code>: The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC). </p> </li> <li> <p> <code>CreatorRequestId</code>: A unique string that identifies the request that created the query logging configuration.</p> </li> <li> <p> <code>Destination</code>: The AWS service that you want to forward query logs to. Valid values include the following:</p> <ul> <li> <p> <code>S3</code> </p> </li> <li> <p> <code>CloudWatchLogs</code> </p> </li> <li> <p> <code>KinesisFirehose</code> </p> </li> </ul> </li> <li> <p> <code>DestinationArn</code>: The ARN of the location that Resolver is sending query logs to. This value can be the ARN for an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>Name</code>: The name of the query logging configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account ID for the account that created the query logging configuration.</p> </li> <li> <p> <code>ShareStatus</code>: An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Valid values include: <code>NOT_SHARED</code>, <code>SHARED_WITH_ME</code>, or <code>SHARED_BY_ME</code>.</p> </li> <li> <p> <code>Status</code>: The status of the query logging configuration. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfig.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfig-Status\">Status</a>. </p> </li> </ul> <p> <b>ListResolverQueryLogConfigAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreationTime</code>: The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, specify the cause: <code>DESTINATION_NOT_FOUND</code> or <code>ACCESS_DENIED</code>.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association.</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration that a VPC is associated with.</p> </li> <li> <p> <code>ResourceId</code>: The ID of the Amazon VPC that is associated with the query logging configuration.</p> </li> <li> <p> <code>Status</code>: The status of the query logging association. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfigAssociation.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfigAssociation-Status\">Status</a>. </p> </li> </ul>\n@param name The name of the parameter that you want to use to filter objects.</p> <p>The valid values for <code>Name</code> depend on the action that you're including the filter in, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigs.html\">ListResolverQueryLogConfigs</a>, or <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigAssociations.html\">ListResolverQueryLogConfigAssociations</a>.</p> <note> <p>In early versions of Resolver, values for <code>Name</code> were listed as uppercase, with underscore (_) delimiters. For example, <code>CreatorRequestId</code> was originally listed as <code>CREATOR_REQUEST_ID</code>. Uppercase values for <code>Name</code> are still supported.</p> </note> <p> <b>ListResolverEndpoints</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Direction</code>: Whether you want to return inbound or outbound Resolver endpoints. If you specify <code>DIRECTION</code> for <code>Name</code>, specify <code>INBOUND</code> or <code>OUTBOUND</code> for <code>Values</code>.</p> </li> <li> <p> <code>HostVpcId</code>: The ID of the VPC that inbound DNS queries pass through on the way from your network to your VPCs in a region, or the VPC that outbound queries pass through on the way from your VPCs to your network. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request, <code>SubnetId</code> indirectly identifies the VPC. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> request, the VPC ID for a Resolver endpoint is returned in the <code>HostVPCId</code> element. </p> </li> <li> <p> <code>IpAddressCount</code>: The number of IP addresses that you have associated with the Resolver endpoint.</p> </li> <li> <p> <code>Name</code>: The name of the Resolver endpoint.</p> </li> <li> <p> <code>SecurityGroupIds</code>: The IDs of the VPC security groups that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver endpoint. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>OPERATIONAL</code>, <code>UPDATING</code>, <code>AUTO_RECOVERING</code>, <code>ACTION_NEEDED</code>, or <code>DELETING</code>. For more information, see <code>Status</code> in <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverEndpoint.html\">ResolverEndpoint</a>.</p> </li> </ul> <p> <b>ListResolverRules</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver rule.</p> </li> <li> <p> <code>DomainName</code>: The domain name for which Resolver is forwarding DNS queries to your network. In the value that you specify for <code>Values</code>, include a trailing dot (.) after the domain name. For example, if the domain name is example.com, specify the following value. Note the \".\" after <code>com</code>:</p> <p> <code>example.com.</code> </p> </li> <li> <p> <code>Name</code>: The name of the Resolver rule.</p> </li> <li> <p> <code>ResolverEndpointId</code>: The ID of the Resolver endpoint that the Resolver rule is associated with.</p> <note> <p>You can filter on the Resolver endpoint only for rules that have a value of <code>FORWARD</code> for <code>RuleType</code>.</p> </note> </li> <li> <p> <code>Status</code>: The status of the Resolver rule. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>COMPLETE</code>, <code>DELETING</code>, <code>UPDATING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>Type</code>: The type of the Resolver rule. If you specify <code>TYPE</code> for <code>Name</code>, specify <code>FORWARD</code> or <code>SYSTEM</code> for <code>Values</code>.</p> </li> </ul> <p> <b>ListResolverRuleAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Name</code>: The name of the Resolver rule association.</p> </li> <li> <p> <code>ResolverRuleId</code>: The ID of the Resolver rule that is associated with one or more VPCs.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver rule association. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>COMPLETE</code>, <code>DELETING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>VPCId</code>: The ID of the VPC that the Resolver rule is associated with.</p> </li> </ul> <p> <b>ListResolverQueryLogConfigs</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Arn</code>: The ARN for the query logging configuration.</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the query logging configuration.</p> </li> <li> <p> <code>CreationTime</code>: The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC). </p> </li> <li> <p> <code>CreatorRequestId</code>: A unique string that identifies the request that created the query logging configuration.</p> </li> <li> <p> <code>Destination</code>: The AWS service that you want to forward query logs to. Valid values include the following:</p> <ul> <li> <p> <code>S3</code> </p> </li> <li> <p> <code>CloudWatchLogs</code> </p> </li> <li> <p> <code>KinesisFirehose</code> </p> </li> </ul> </li> <li> <p> <code>DestinationArn</code>: The ARN of the location that Resolver is sending query logs to. This value can be the ARN for an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>Name</code>: The name of the query logging configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account ID for the account that created the query logging configuration.</p> </li> <li> <p> <code>ShareStatus</code>: An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Valid values include: <code>NOT_SHARED</code>, <code>SHARED_WITH_ME</code>, or <code>SHARED_BY_ME</code>.</p> </li> <li> <p> <code>Status</code>: The status of the query logging configuration. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfig.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfig-Status\">Status</a>. </p> </li> </ul> <p> <b>ListResolverQueryLogConfigAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreationTime</code>: The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, specify the cause: <code>DESTINATION_NOT_FOUND</code> or <code>ACCESS_DENIED</code>.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association.</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration that a VPC is associated with.</p> </li> <li> <p> <code>ResourceId</code>: The ID of the Amazon VPC that is associated with the query logging configuration.</p> </li> <li> <p> <code>Status</code>: The status of the query logging association. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfigAssociation.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfigAssociation-Status\">Status</a>. </p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>The name of the parameter that you want to use to filter objects.</p> <p>The valid values for <code>Name</code> depend on the action that you're including the filter in, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigs.html\">ListResolverQueryLogConfigs</a>, or <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigAssociations.html\">ListResolverQueryLogConfigAssociations</a>.</p> <note> <p>In early versions of Resolver, values for <code>Name</code> were listed as uppercase, with underscore (_) delimiters. For example, <code>CreatorRequestId</code> was originally listed as <code>CREATOR_REQUEST_ID</code>. Uppercase values for <code>Name</code> are still supported.</p> </note> <p> <b>ListResolverEndpoints</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Direction</code>: Whether you want to return inbound or outbound Resolver endpoints. If you specify <code>DIRECTION</code> for <code>Name</code>, specify <code>INBOUND</code> or <code>OUTBOUND</code> for <code>Values</code>.</p> </li> <li> <p> <code>HostVpcId</code>: The ID of the VPC that inbound DNS queries pass through on the way from your network to your VPCs in a region, or the VPC that outbound queries pass through on the way from your VPCs to your network. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request, <code>SubnetId</code> indirectly identifies the VPC. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> request, the VPC ID for a Resolver endpoint is returned in the <code>HostVPCId</code> element. </p> </li> <li> <p> <code>IpAddressCount</code>: The number of IP addresses that you have associated with the Resolver endpoint.</p> </li> <li> <p> <code>Name</code>: The name of the Resolver endpoint.</p> </li> <li> <p> <code>SecurityGroupIds</code>: The IDs of the VPC security groups that you specified when you created the Resolver endpoint.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver endpoint. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>OPERATIONAL</code>, <code>UPDATING</code>, <code>AUTO_RECOVERING</code>, <code>ACTION_NEEDED</code>, or <code>DELETING</code>. For more information, see <code>Status</code> in <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverEndpoint.html\">ResolverEndpoint</a>.</p> </li> </ul> <p> <b>ListResolverRules</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified when you created the Resolver rule.</p> </li> <li> <p> <code>DomainName</code>: The domain name for which Resolver is forwarding DNS queries to your network. In the value that you specify for <code>Values</code>, include a trailing dot (.) after the domain name. For example, if the domain name is example.com, specify the following value. Note the \".\" after <code>com</code>:</p> <p> <code>example.com.</code> </p> </li> <li> <p> <code>Name</code>: The name of the Resolver rule.</p> </li> <li> <p> <code>ResolverEndpointId</code>: The ID of the Resolver endpoint that the Resolver rule is associated with.</p> <note> <p>You can filter on the Resolver endpoint only for rules that have a value of <code>FORWARD</code> for <code>RuleType</code>.</p> </note> </li> <li> <p> <code>Status</code>: The status of the Resolver rule. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>COMPLETE</code>, <code>DELETING</code>, <code>UPDATING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>Type</code>: The type of the Resolver rule. If you specify <code>TYPE</code> for <code>Name</code>, specify <code>FORWARD</code> or <code>SYSTEM</code> for <code>Values</code>.</p> </li> </ul> <p> <b>ListResolverRuleAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Name</code>: The name of the Resolver rule association.</p> </li> <li> <p> <code>ResolverRuleId</code>: The ID of the Resolver rule that is associated with one or more VPCs.</p> </li> <li> <p> <code>Status</code>: The status of the Resolver rule association. If you specify <code>Status</code> for <code>Name</code>, specify one of the following status codes for <code>Values</code>: <code>CREATING</code>, <code>COMPLETE</code>, <code>DELETING</code>, or <code>FAILED</code>.</p> </li> <li> <p> <code>VPCId</code>: The ID of the VPC that the Resolver rule is associated with.</p> </li> </ul> <p> <b>ListResolverQueryLogConfigs</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>Arn</code>: The ARN for the query logging configuration.</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the query logging configuration.</p> </li> <li> <p> <code>CreationTime</code>: The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC). </p> </li> <li> <p> <code>CreatorRequestId</code>: A unique string that identifies the request that created the query logging configuration.</p> </li> <li> <p> <code>Destination</code>: The AWS service that you want to forward query logs to. Valid values include the following:</p> <ul> <li> <p> <code>S3</code> </p> </li> <li> <p> <code>CloudWatchLogs</code> </p> </li> <li> <p> <code>KinesisFirehose</code> </p> </li> </ul> </li> <li> <p> <code>DestinationArn</code>: The ARN of the location that Resolver is sending query logs to. This value can be the ARN for an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>Name</code>: The name of the query logging configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account ID for the account that created the query logging configuration.</p> </li> <li> <p> <code>ShareStatus</code>: An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Valid values include: <code>NOT_SHARED</code>, <code>SHARED_WITH_ME</code>, or <code>SHARED_BY_ME</code>.</p> </li> <li> <p> <code>Status</code>: The status of the query logging configuration. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfig.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfig-Status\">Status</a>. </p> </li> </ul> <p> <b>ListResolverQueryLogConfigAssociations</b> </p> <p>Valid values for <code>Name</code> include the following:</p> <ul> <li> <p> <code>CreationTime</code>: The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, specify the cause: <code>DESTINATION_NOT_FOUND</code> or <code>ACCESS_DENIED</code>.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association.</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration that a VPC is associated with.</p> </li> <li> <p> <code>ResourceId</code>: The ID of the Amazon VPC that is associated with the query logging configuration.</p> </li> <li> <p> <code>Status</code>: The status of the query logging association. If you specify <code>Status</code> for <code>Name</code>, specify the applicable status code for <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfigAssociation.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfigAssociation-Status\">Status</a>. </p> </li> </ul>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Values" : {
          "c2jName" : "Values",
          "c2jShape" : "FilterValues",
          "deprecated" : false,
          "documentation" : "<p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as Resolver endpoints or Resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound Resolver endpoints, specify <code>Direction</code> for <code>Name</code> and specify <code>INBOUND</code> for <code>Values</code>.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as Resolver endpoints or Resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound Resolver endpoints, specify <code>Direction</code> for <code>Name</code> and specify <code>INBOUND</code> for <code>Values</code>.</p>\n@param values When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as Resolver endpoints or Resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound Resolver endpoints, specify <code>Direction</code> for <code>Name</code> and specify <code>INBOUND</code> for <code>Values</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withValues",
          "getterDocumentation" : "/**<p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as Resolver endpoints or Resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound Resolver endpoints, specify <code>Direction</code> for <code>Name</code> and specify <code>INBOUND</code> for <code>Values</code>.</p>\n@return When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as Resolver endpoints or Resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound Resolver endpoints, specify <code>Direction</code> for <code>Name</code> and specify <code>INBOUND</code> for <code>Values</code>.*/",
          "getterMethodName" : "getValues",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Values",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Values",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "FilterValue",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Values",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as Resolver endpoints or Resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound Resolver endpoints, specify <code>Direction</code> for <code>Name</code> and specify <code>INBOUND</code> for <code>Values</code>.</p>\n@param values When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as Resolver endpoints or Resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound Resolver endpoints, specify <code>Direction</code> for <code>Name</code> and specify <code>INBOUND</code> for <code>Values</code>.*/",
          "setterMethodName" : "setValues",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "values",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as Resolver endpoints or Resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound Resolver endpoints, specify <code>Direction</code> for <code>Name</code> and specify <code>INBOUND</code> for <code>Values</code>.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setValues(java.util.Collection)} or {@link #withValues(java.util.Collection)} if you want to override the existing values.</p>\n@param values When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as Resolver endpoints or Resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound Resolver endpoints, specify <code>Direction</code> for <code>Name</code> and specify <code>INBOUND</code> for <code>Values</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "values",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as Resolver endpoints or Resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound Resolver endpoints, specify <code>Direction</code> for <code>Name</code> and specify <code>INBOUND</code> for <code>Values</code>.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Filter",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "Filter",
        "variableName" : "filter",
        "variableType" : "Filter",
        "documentation" : null,
        "simpleType" : "Filter",
        "variableSetterType" : "Filter"
      },
      "wrapper" : false
    },
    "GetResolverDnssecConfigRequest" : {
      "c2jName" : "GetResolverDnssecConfigRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.request.GetResolverDnssecConfigRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetResolverDnssecConfig",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.GetResolverDnssecConfig",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResourceId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the virtual private cloud (VPC) for the DNSSEC validation status.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the virtual private cloud (VPC) for the DNSSEC validation status.</p>\n@param resourceId The ID of the virtual private cloud (VPC) for the DNSSEC validation status.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceId",
        "getterDocumentation" : "/**<p>The ID of the virtual private cloud (VPC) for the DNSSEC validation status.</p>\n@return The ID of the virtual private cloud (VPC) for the DNSSEC validation status.*/",
        "getterMethodName" : "getResourceId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the virtual private cloud (VPC) for the DNSSEC validation status.</p>\n@param resourceId The ID of the virtual private cloud (VPC) for the DNSSEC validation status.*/",
        "setterMethodName" : "setResourceId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the virtual private cloud (VPC) for the DNSSEC validation status.</p>\n@param resourceId The ID of the virtual private cloud (VPC) for the DNSSEC validation status.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the virtual private cloud (VPC) for the DNSSEC validation status.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResourceId" : {
          "c2jName" : "ResourceId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the virtual private cloud (VPC) for the DNSSEC validation status.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the virtual private cloud (VPC) for the DNSSEC validation status.</p>\n@param resourceId The ID of the virtual private cloud (VPC) for the DNSSEC validation status.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceId",
          "getterDocumentation" : "/**<p>The ID of the virtual private cloud (VPC) for the DNSSEC validation status.</p>\n@return The ID of the virtual private cloud (VPC) for the DNSSEC validation status.*/",
          "getterMethodName" : "getResourceId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the virtual private cloud (VPC) for the DNSSEC validation status.</p>\n@param resourceId The ID of the virtual private cloud (VPC) for the DNSSEC validation status.*/",
          "setterMethodName" : "setResourceId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the virtual private cloud (VPC) for the DNSSEC validation status.</p>\n@param resourceId The ID of the virtual private cloud (VPC) for the DNSSEC validation status.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the virtual private cloud (VPC) for the DNSSEC validation status.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResourceId" ],
      "shapeName" : "GetResolverDnssecConfigRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetResolverDnssecConfigRequest",
        "variableName" : "getResolverDnssecConfigRequest",
        "variableType" : "GetResolverDnssecConfigRequest",
        "documentation" : null,
        "simpleType" : "GetResolverDnssecConfigRequest",
        "variableSetterType" : "GetResolverDnssecConfigRequest"
      },
      "wrapper" : false
    },
    "GetResolverDnssecConfigResult" : {
      "c2jName" : "GetResolverDnssecConfigResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.response.GetResolverDnssecConfigResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResolverDNSSECConfig",
        "c2jShape" : "ResolverDnssecConfig",
        "deprecated" : false,
        "documentation" : "<p>The information about a configuration for DNSSEC validation.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The information about a configuration for DNSSEC validation.</p>\n@param resolverDNSSECConfig The information about a configuration for DNSSEC validation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverDNSSECConfig",
        "getterDocumentation" : "/**<p>The information about a configuration for DNSSEC validation.</p>\n@return The information about a configuration for DNSSEC validation.*/",
        "getterMethodName" : "getResolverDNSSECConfig",
        "getterModel" : {
          "returnType" : "ResolverDnssecConfig",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverDNSSECConfig",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverDNSSECConfig",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ResolverDNSSECConfig",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The information about a configuration for DNSSEC validation.</p>\n@param resolverDNSSECConfig The information about a configuration for DNSSEC validation.*/",
        "setterMethodName" : "setResolverDNSSECConfig",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverDnssecConfig",
          "variableName" : "resolverDNSSECConfig",
          "variableType" : "ResolverDnssecConfig",
          "documentation" : "",
          "simpleType" : "ResolverDnssecConfig",
          "variableSetterType" : "ResolverDnssecConfig"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The information about a configuration for DNSSEC validation.</p>\n@param resolverDNSSECConfig The information about a configuration for DNSSEC validation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverDnssecConfig",
          "variableName" : "resolverDNSSECConfig",
          "variableType" : "ResolverDnssecConfig",
          "documentation" : "<p>The information about a configuration for DNSSEC validation.</p>",
          "simpleType" : "ResolverDnssecConfig",
          "variableSetterType" : "ResolverDnssecConfig"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverDNSSECConfig" : {
          "c2jName" : "ResolverDNSSECConfig",
          "c2jShape" : "ResolverDnssecConfig",
          "deprecated" : false,
          "documentation" : "<p>The information about a configuration for DNSSEC validation.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The information about a configuration for DNSSEC validation.</p>\n@param resolverDNSSECConfig The information about a configuration for DNSSEC validation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverDNSSECConfig",
          "getterDocumentation" : "/**<p>The information about a configuration for DNSSEC validation.</p>\n@return The information about a configuration for DNSSEC validation.*/",
          "getterMethodName" : "getResolverDNSSECConfig",
          "getterModel" : {
            "returnType" : "ResolverDnssecConfig",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverDNSSECConfig",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverDNSSECConfig",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ResolverDNSSECConfig",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The information about a configuration for DNSSEC validation.</p>\n@param resolverDNSSECConfig The information about a configuration for DNSSEC validation.*/",
          "setterMethodName" : "setResolverDNSSECConfig",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverDnssecConfig",
            "variableName" : "resolverDNSSECConfig",
            "variableType" : "ResolverDnssecConfig",
            "documentation" : "",
            "simpleType" : "ResolverDnssecConfig",
            "variableSetterType" : "ResolverDnssecConfig"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The information about a configuration for DNSSEC validation.</p>\n@param resolverDNSSECConfig The information about a configuration for DNSSEC validation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverDnssecConfig",
            "variableName" : "resolverDNSSECConfig",
            "variableType" : "ResolverDnssecConfig",
            "documentation" : "<p>The information about a configuration for DNSSEC validation.</p>",
            "simpleType" : "ResolverDnssecConfig",
            "variableSetterType" : "ResolverDnssecConfig"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetResolverDnssecConfigResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetResolverDnssecConfigResult",
        "variableName" : "getResolverDnssecConfigResult",
        "variableType" : "GetResolverDnssecConfigResult",
        "documentation" : null,
        "simpleType" : "GetResolverDnssecConfigResult",
        "variableSetterType" : "GetResolverDnssecConfigResult"
      },
      "wrapper" : false
    },
    "GetResolverEndpointRequest" : {
      "c2jName" : "GetResolverEndpointRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.request.GetResolverEndpointRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetResolverEndpoint",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.GetResolverEndpoint",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResolverEndpointId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the Resolver endpoint that you want to get information about.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to get information about.</p>\n@param resolverEndpointId The ID of the Resolver endpoint that you want to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverEndpointId",
        "getterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to get information about.</p>\n@return The ID of the Resolver endpoint that you want to get information about.*/",
        "getterMethodName" : "getResolverEndpointId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverEndpointId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverEndpointId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverEndpointId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to get information about.</p>\n@param resolverEndpointId The ID of the Resolver endpoint that you want to get information about.*/",
        "setterMethodName" : "setResolverEndpointId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverEndpointId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to get information about.</p>\n@param resolverEndpointId The ID of the Resolver endpoint that you want to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverEndpointId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the Resolver endpoint that you want to get information about.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverEndpointId" : {
          "c2jName" : "ResolverEndpointId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the Resolver endpoint that you want to get information about.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to get information about.</p>\n@param resolverEndpointId The ID of the Resolver endpoint that you want to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverEndpointId",
          "getterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to get information about.</p>\n@return The ID of the Resolver endpoint that you want to get information about.*/",
          "getterMethodName" : "getResolverEndpointId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverEndpointId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverEndpointId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverEndpointId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to get information about.</p>\n@param resolverEndpointId The ID of the Resolver endpoint that you want to get information about.*/",
          "setterMethodName" : "setResolverEndpointId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverEndpointId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to get information about.</p>\n@param resolverEndpointId The ID of the Resolver endpoint that you want to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverEndpointId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the Resolver endpoint that you want to get information about.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResolverEndpointId" ],
      "shapeName" : "GetResolverEndpointRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetResolverEndpointRequest",
        "variableName" : "getResolverEndpointRequest",
        "variableType" : "GetResolverEndpointRequest",
        "documentation" : null,
        "simpleType" : "GetResolverEndpointRequest",
        "variableSetterType" : "GetResolverEndpointRequest"
      },
      "wrapper" : false
    },
    "GetResolverEndpointResult" : {
      "c2jName" : "GetResolverEndpointResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.response.GetResolverEndpointResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResolverEndpoint",
        "c2jShape" : "ResolverEndpoint",
        "deprecated" : false,
        "documentation" : "<p>Information about the Resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the Resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.</p>\n@param resolverEndpoint Information about the Resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverEndpoint",
        "getterDocumentation" : "/**<p>Information about the Resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.</p>\n@return Information about the Resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.*/",
        "getterMethodName" : "getResolverEndpoint",
        "getterModel" : {
          "returnType" : "ResolverEndpoint",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverEndpoint",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverEndpoint",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ResolverEndpoint",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Information about the Resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.</p>\n@param resolverEndpoint Information about the Resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.*/",
        "setterMethodName" : "setResolverEndpoint",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverEndpoint",
          "variableName" : "resolverEndpoint",
          "variableType" : "ResolverEndpoint",
          "documentation" : "",
          "simpleType" : "ResolverEndpoint",
          "variableSetterType" : "ResolverEndpoint"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the Resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.</p>\n@param resolverEndpoint Information about the Resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverEndpoint",
          "variableName" : "resolverEndpoint",
          "variableType" : "ResolverEndpoint",
          "documentation" : "<p>Information about the Resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.</p>",
          "simpleType" : "ResolverEndpoint",
          "variableSetterType" : "ResolverEndpoint"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverEndpoint" : {
          "c2jName" : "ResolverEndpoint",
          "c2jShape" : "ResolverEndpoint",
          "deprecated" : false,
          "documentation" : "<p>Information about the Resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the Resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.</p>\n@param resolverEndpoint Information about the Resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverEndpoint",
          "getterDocumentation" : "/**<p>Information about the Resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.</p>\n@return Information about the Resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.*/",
          "getterMethodName" : "getResolverEndpoint",
          "getterModel" : {
            "returnType" : "ResolverEndpoint",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverEndpoint",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverEndpoint",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ResolverEndpoint",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Information about the Resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.</p>\n@param resolverEndpoint Information about the Resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.*/",
          "setterMethodName" : "setResolverEndpoint",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverEndpoint",
            "variableName" : "resolverEndpoint",
            "variableType" : "ResolverEndpoint",
            "documentation" : "",
            "simpleType" : "ResolverEndpoint",
            "variableSetterType" : "ResolverEndpoint"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the Resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.</p>\n@param resolverEndpoint Information about the Resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverEndpoint",
            "variableName" : "resolverEndpoint",
            "variableType" : "ResolverEndpoint",
            "documentation" : "<p>Information about the Resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.</p>",
            "simpleType" : "ResolverEndpoint",
            "variableSetterType" : "ResolverEndpoint"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetResolverEndpointResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetResolverEndpointResult",
        "variableName" : "getResolverEndpointResult",
        "variableType" : "GetResolverEndpointResult",
        "documentation" : null,
        "simpleType" : "GetResolverEndpointResult",
        "variableSetterType" : "GetResolverEndpointResult"
      },
      "wrapper" : false
    },
    "GetResolverQueryLogConfigAssociationRequest" : {
      "c2jName" : "GetResolverQueryLogConfigAssociationRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.request.GetResolverQueryLogConfigAssociationRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetResolverQueryLogConfigAssociation",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.GetResolverQueryLogConfigAssociation",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResolverQueryLogConfigAssociationId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the Resolver query logging configuration association that you want to get information about.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the Resolver query logging configuration association that you want to get information about.</p>\n@param resolverQueryLogConfigAssociationId The ID of the Resolver query logging configuration association that you want to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverQueryLogConfigAssociationId",
        "getterDocumentation" : "/**<p>The ID of the Resolver query logging configuration association that you want to get information about.</p>\n@return The ID of the Resolver query logging configuration association that you want to get information about.*/",
        "getterMethodName" : "getResolverQueryLogConfigAssociationId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverQueryLogConfigAssociationId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverQueryLogConfigAssociationId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverQueryLogConfigAssociationId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the Resolver query logging configuration association that you want to get information about.</p>\n@param resolverQueryLogConfigAssociationId The ID of the Resolver query logging configuration association that you want to get information about.*/",
        "setterMethodName" : "setResolverQueryLogConfigAssociationId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverQueryLogConfigAssociationId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the Resolver query logging configuration association that you want to get information about.</p>\n@param resolverQueryLogConfigAssociationId The ID of the Resolver query logging configuration association that you want to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverQueryLogConfigAssociationId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the Resolver query logging configuration association that you want to get information about.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverQueryLogConfigAssociationId" : {
          "c2jName" : "ResolverQueryLogConfigAssociationId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the Resolver query logging configuration association that you want to get information about.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the Resolver query logging configuration association that you want to get information about.</p>\n@param resolverQueryLogConfigAssociationId The ID of the Resolver query logging configuration association that you want to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverQueryLogConfigAssociationId",
          "getterDocumentation" : "/**<p>The ID of the Resolver query logging configuration association that you want to get information about.</p>\n@return The ID of the Resolver query logging configuration association that you want to get information about.*/",
          "getterMethodName" : "getResolverQueryLogConfigAssociationId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverQueryLogConfigAssociationId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverQueryLogConfigAssociationId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverQueryLogConfigAssociationId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the Resolver query logging configuration association that you want to get information about.</p>\n@param resolverQueryLogConfigAssociationId The ID of the Resolver query logging configuration association that you want to get information about.*/",
          "setterMethodName" : "setResolverQueryLogConfigAssociationId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverQueryLogConfigAssociationId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the Resolver query logging configuration association that you want to get information about.</p>\n@param resolverQueryLogConfigAssociationId The ID of the Resolver query logging configuration association that you want to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverQueryLogConfigAssociationId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the Resolver query logging configuration association that you want to get information about.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResolverQueryLogConfigAssociationId" ],
      "shapeName" : "GetResolverQueryLogConfigAssociationRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetResolverQueryLogConfigAssociationRequest",
        "variableName" : "getResolverQueryLogConfigAssociationRequest",
        "variableType" : "GetResolverQueryLogConfigAssociationRequest",
        "documentation" : null,
        "simpleType" : "GetResolverQueryLogConfigAssociationRequest",
        "variableSetterType" : "GetResolverQueryLogConfigAssociationRequest"
      },
      "wrapper" : false
    },
    "GetResolverQueryLogConfigAssociationResult" : {
      "c2jName" : "GetResolverQueryLogConfigAssociationResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.response.GetResolverQueryLogConfigAssociationResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResolverQueryLogConfigAssociation",
        "c2jShape" : "ResolverQueryLogConfigAssociation",
        "deprecated" : false,
        "documentation" : "<p>Information about the Resolver query logging configuration association that you specified in a <code>GetQueryLogConfigAssociation</code> request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the Resolver query logging configuration association that you specified in a <code>GetQueryLogConfigAssociation</code> request.</p>\n@param resolverQueryLogConfigAssociation Information about the Resolver query logging configuration association that you specified in a <code>GetQueryLogConfigAssociation</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverQueryLogConfigAssociation",
        "getterDocumentation" : "/**<p>Information about the Resolver query logging configuration association that you specified in a <code>GetQueryLogConfigAssociation</code> request.</p>\n@return Information about the Resolver query logging configuration association that you specified in a <code>GetQueryLogConfigAssociation</code> request.*/",
        "getterMethodName" : "getResolverQueryLogConfigAssociation",
        "getterModel" : {
          "returnType" : "ResolverQueryLogConfigAssociation",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverQueryLogConfigAssociation",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverQueryLogConfigAssociation",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ResolverQueryLogConfigAssociation",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Information about the Resolver query logging configuration association that you specified in a <code>GetQueryLogConfigAssociation</code> request.</p>\n@param resolverQueryLogConfigAssociation Information about the Resolver query logging configuration association that you specified in a <code>GetQueryLogConfigAssociation</code> request.*/",
        "setterMethodName" : "setResolverQueryLogConfigAssociation",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverQueryLogConfigAssociation",
          "variableName" : "resolverQueryLogConfigAssociation",
          "variableType" : "ResolverQueryLogConfigAssociation",
          "documentation" : "",
          "simpleType" : "ResolverQueryLogConfigAssociation",
          "variableSetterType" : "ResolverQueryLogConfigAssociation"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the Resolver query logging configuration association that you specified in a <code>GetQueryLogConfigAssociation</code> request.</p>\n@param resolverQueryLogConfigAssociation Information about the Resolver query logging configuration association that you specified in a <code>GetQueryLogConfigAssociation</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverQueryLogConfigAssociation",
          "variableName" : "resolverQueryLogConfigAssociation",
          "variableType" : "ResolverQueryLogConfigAssociation",
          "documentation" : "<p>Information about the Resolver query logging configuration association that you specified in a <code>GetQueryLogConfigAssociation</code> request.</p>",
          "simpleType" : "ResolverQueryLogConfigAssociation",
          "variableSetterType" : "ResolverQueryLogConfigAssociation"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverQueryLogConfigAssociation" : {
          "c2jName" : "ResolverQueryLogConfigAssociation",
          "c2jShape" : "ResolverQueryLogConfigAssociation",
          "deprecated" : false,
          "documentation" : "<p>Information about the Resolver query logging configuration association that you specified in a <code>GetQueryLogConfigAssociation</code> request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the Resolver query logging configuration association that you specified in a <code>GetQueryLogConfigAssociation</code> request.</p>\n@param resolverQueryLogConfigAssociation Information about the Resolver query logging configuration association that you specified in a <code>GetQueryLogConfigAssociation</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverQueryLogConfigAssociation",
          "getterDocumentation" : "/**<p>Information about the Resolver query logging configuration association that you specified in a <code>GetQueryLogConfigAssociation</code> request.</p>\n@return Information about the Resolver query logging configuration association that you specified in a <code>GetQueryLogConfigAssociation</code> request.*/",
          "getterMethodName" : "getResolverQueryLogConfigAssociation",
          "getterModel" : {
            "returnType" : "ResolverQueryLogConfigAssociation",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverQueryLogConfigAssociation",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverQueryLogConfigAssociation",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ResolverQueryLogConfigAssociation",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Information about the Resolver query logging configuration association that you specified in a <code>GetQueryLogConfigAssociation</code> request.</p>\n@param resolverQueryLogConfigAssociation Information about the Resolver query logging configuration association that you specified in a <code>GetQueryLogConfigAssociation</code> request.*/",
          "setterMethodName" : "setResolverQueryLogConfigAssociation",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverQueryLogConfigAssociation",
            "variableName" : "resolverQueryLogConfigAssociation",
            "variableType" : "ResolverQueryLogConfigAssociation",
            "documentation" : "",
            "simpleType" : "ResolverQueryLogConfigAssociation",
            "variableSetterType" : "ResolverQueryLogConfigAssociation"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the Resolver query logging configuration association that you specified in a <code>GetQueryLogConfigAssociation</code> request.</p>\n@param resolverQueryLogConfigAssociation Information about the Resolver query logging configuration association that you specified in a <code>GetQueryLogConfigAssociation</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverQueryLogConfigAssociation",
            "variableName" : "resolverQueryLogConfigAssociation",
            "variableType" : "ResolverQueryLogConfigAssociation",
            "documentation" : "<p>Information about the Resolver query logging configuration association that you specified in a <code>GetQueryLogConfigAssociation</code> request.</p>",
            "simpleType" : "ResolverQueryLogConfigAssociation",
            "variableSetterType" : "ResolverQueryLogConfigAssociation"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetResolverQueryLogConfigAssociationResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetResolverQueryLogConfigAssociationResult",
        "variableName" : "getResolverQueryLogConfigAssociationResult",
        "variableType" : "GetResolverQueryLogConfigAssociationResult",
        "documentation" : null,
        "simpleType" : "GetResolverQueryLogConfigAssociationResult",
        "variableSetterType" : "GetResolverQueryLogConfigAssociationResult"
      },
      "wrapper" : false
    },
    "GetResolverQueryLogConfigPolicyRequest" : {
      "c2jName" : "GetResolverQueryLogConfigPolicyRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.request.GetResolverQueryLogConfigPolicyRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetResolverQueryLogConfigPolicy",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.GetResolverQueryLogConfigPolicy",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "Arn",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>The ARN of the query logging configuration that you want to get the query logging policy for.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ARN of the query logging configuration that you want to get the query logging policy for.</p>\n@param arn The ARN of the query logging configuration that you want to get the query logging policy for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withArn",
        "getterDocumentation" : "/**<p>The ARN of the query logging configuration that you want to get the query logging policy for.</p>\n@return The ARN of the query logging configuration that you want to get the query logging policy for.*/",
        "getterMethodName" : "getArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Arn",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Arn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Arn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ARN of the query logging configuration that you want to get the query logging policy for.</p>\n@param arn The ARN of the query logging configuration that you want to get the query logging policy for.*/",
        "setterMethodName" : "setArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ARN of the query logging configuration that you want to get the query logging policy for.</p>\n@param arn The ARN of the query logging configuration that you want to get the query logging policy for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "<p>The ARN of the query logging configuration that you want to get the query logging policy for.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Arn" : {
          "c2jName" : "Arn",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>The ARN of the query logging configuration that you want to get the query logging policy for.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ARN of the query logging configuration that you want to get the query logging policy for.</p>\n@param arn The ARN of the query logging configuration that you want to get the query logging policy for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withArn",
          "getterDocumentation" : "/**<p>The ARN of the query logging configuration that you want to get the query logging policy for.</p>\n@return The ARN of the query logging configuration that you want to get the query logging policy for.*/",
          "getterMethodName" : "getArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Arn",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Arn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Arn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ARN of the query logging configuration that you want to get the query logging policy for.</p>\n@param arn The ARN of the query logging configuration that you want to get the query logging policy for.*/",
          "setterMethodName" : "setArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ARN of the query logging configuration that you want to get the query logging policy for.</p>\n@param arn The ARN of the query logging configuration that you want to get the query logging policy for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "<p>The ARN of the query logging configuration that you want to get the query logging policy for.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Arn" ],
      "shapeName" : "GetResolverQueryLogConfigPolicyRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetResolverQueryLogConfigPolicyRequest",
        "variableName" : "getResolverQueryLogConfigPolicyRequest",
        "variableType" : "GetResolverQueryLogConfigPolicyRequest",
        "documentation" : null,
        "simpleType" : "GetResolverQueryLogConfigPolicyRequest",
        "variableSetterType" : "GetResolverQueryLogConfigPolicyRequest"
      },
      "wrapper" : false
    },
    "GetResolverQueryLogConfigPolicyResult" : {
      "c2jName" : "GetResolverQueryLogConfigPolicyResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.response.GetResolverQueryLogConfigPolicyResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResolverQueryLogConfigPolicy",
        "c2jShape" : "ResolverQueryLogConfigPolicy",
        "deprecated" : false,
        "documentation" : "<p>Information about the query logging policy for the query logging configuration that you specified in a <code>GetResolverQueryLogConfigPolicy</code> request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the query logging policy for the query logging configuration that you specified in a <code>GetResolverQueryLogConfigPolicy</code> request.</p>\n@param resolverQueryLogConfigPolicy Information about the query logging policy for the query logging configuration that you specified in a <code>GetResolverQueryLogConfigPolicy</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverQueryLogConfigPolicy",
        "getterDocumentation" : "/**<p>Information about the query logging policy for the query logging configuration that you specified in a <code>GetResolverQueryLogConfigPolicy</code> request.</p>\n@return Information about the query logging policy for the query logging configuration that you specified in a <code>GetResolverQueryLogConfigPolicy</code> request.*/",
        "getterMethodName" : "getResolverQueryLogConfigPolicy",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverQueryLogConfigPolicy",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverQueryLogConfigPolicy",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverQueryLogConfigPolicy",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Information about the query logging policy for the query logging configuration that you specified in a <code>GetResolverQueryLogConfigPolicy</code> request.</p>\n@param resolverQueryLogConfigPolicy Information about the query logging policy for the query logging configuration that you specified in a <code>GetResolverQueryLogConfigPolicy</code> request.*/",
        "setterMethodName" : "setResolverQueryLogConfigPolicy",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverQueryLogConfigPolicy",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the query logging policy for the query logging configuration that you specified in a <code>GetResolverQueryLogConfigPolicy</code> request.</p>\n@param resolverQueryLogConfigPolicy Information about the query logging policy for the query logging configuration that you specified in a <code>GetResolverQueryLogConfigPolicy</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverQueryLogConfigPolicy",
          "variableType" : "String",
          "documentation" : "<p>Information about the query logging policy for the query logging configuration that you specified in a <code>GetResolverQueryLogConfigPolicy</code> request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverQueryLogConfigPolicy" : {
          "c2jName" : "ResolverQueryLogConfigPolicy",
          "c2jShape" : "ResolverQueryLogConfigPolicy",
          "deprecated" : false,
          "documentation" : "<p>Information about the query logging policy for the query logging configuration that you specified in a <code>GetResolverQueryLogConfigPolicy</code> request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the query logging policy for the query logging configuration that you specified in a <code>GetResolverQueryLogConfigPolicy</code> request.</p>\n@param resolverQueryLogConfigPolicy Information about the query logging policy for the query logging configuration that you specified in a <code>GetResolverQueryLogConfigPolicy</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverQueryLogConfigPolicy",
          "getterDocumentation" : "/**<p>Information about the query logging policy for the query logging configuration that you specified in a <code>GetResolverQueryLogConfigPolicy</code> request.</p>\n@return Information about the query logging policy for the query logging configuration that you specified in a <code>GetResolverQueryLogConfigPolicy</code> request.*/",
          "getterMethodName" : "getResolverQueryLogConfigPolicy",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverQueryLogConfigPolicy",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverQueryLogConfigPolicy",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverQueryLogConfigPolicy",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Information about the query logging policy for the query logging configuration that you specified in a <code>GetResolverQueryLogConfigPolicy</code> request.</p>\n@param resolverQueryLogConfigPolicy Information about the query logging policy for the query logging configuration that you specified in a <code>GetResolverQueryLogConfigPolicy</code> request.*/",
          "setterMethodName" : "setResolverQueryLogConfigPolicy",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverQueryLogConfigPolicy",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the query logging policy for the query logging configuration that you specified in a <code>GetResolverQueryLogConfigPolicy</code> request.</p>\n@param resolverQueryLogConfigPolicy Information about the query logging policy for the query logging configuration that you specified in a <code>GetResolverQueryLogConfigPolicy</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverQueryLogConfigPolicy",
            "variableType" : "String",
            "documentation" : "<p>Information about the query logging policy for the query logging configuration that you specified in a <code>GetResolverQueryLogConfigPolicy</code> request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetResolverQueryLogConfigPolicyResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetResolverQueryLogConfigPolicyResult",
        "variableName" : "getResolverQueryLogConfigPolicyResult",
        "variableType" : "GetResolverQueryLogConfigPolicyResult",
        "documentation" : null,
        "simpleType" : "GetResolverQueryLogConfigPolicyResult",
        "variableSetterType" : "GetResolverQueryLogConfigPolicyResult"
      },
      "wrapper" : false
    },
    "GetResolverQueryLogConfigRequest" : {
      "c2jName" : "GetResolverQueryLogConfigRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.request.GetResolverQueryLogConfigRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetResolverQueryLogConfig",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.GetResolverQueryLogConfig",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResolverQueryLogConfigId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the Resolver query logging configuration that you want to get information about.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the Resolver query logging configuration that you want to get information about.</p>\n@param resolverQueryLogConfigId The ID of the Resolver query logging configuration that you want to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverQueryLogConfigId",
        "getterDocumentation" : "/**<p>The ID of the Resolver query logging configuration that you want to get information about.</p>\n@return The ID of the Resolver query logging configuration that you want to get information about.*/",
        "getterMethodName" : "getResolverQueryLogConfigId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverQueryLogConfigId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverQueryLogConfigId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverQueryLogConfigId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the Resolver query logging configuration that you want to get information about.</p>\n@param resolverQueryLogConfigId The ID of the Resolver query logging configuration that you want to get information about.*/",
        "setterMethodName" : "setResolverQueryLogConfigId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverQueryLogConfigId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the Resolver query logging configuration that you want to get information about.</p>\n@param resolverQueryLogConfigId The ID of the Resolver query logging configuration that you want to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverQueryLogConfigId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the Resolver query logging configuration that you want to get information about.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverQueryLogConfigId" : {
          "c2jName" : "ResolverQueryLogConfigId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the Resolver query logging configuration that you want to get information about.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the Resolver query logging configuration that you want to get information about.</p>\n@param resolverQueryLogConfigId The ID of the Resolver query logging configuration that you want to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverQueryLogConfigId",
          "getterDocumentation" : "/**<p>The ID of the Resolver query logging configuration that you want to get information about.</p>\n@return The ID of the Resolver query logging configuration that you want to get information about.*/",
          "getterMethodName" : "getResolverQueryLogConfigId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverQueryLogConfigId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverQueryLogConfigId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverQueryLogConfigId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the Resolver query logging configuration that you want to get information about.</p>\n@param resolverQueryLogConfigId The ID of the Resolver query logging configuration that you want to get information about.*/",
          "setterMethodName" : "setResolverQueryLogConfigId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverQueryLogConfigId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the Resolver query logging configuration that you want to get information about.</p>\n@param resolverQueryLogConfigId The ID of the Resolver query logging configuration that you want to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverQueryLogConfigId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the Resolver query logging configuration that you want to get information about.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResolverQueryLogConfigId" ],
      "shapeName" : "GetResolverQueryLogConfigRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetResolverQueryLogConfigRequest",
        "variableName" : "getResolverQueryLogConfigRequest",
        "variableType" : "GetResolverQueryLogConfigRequest",
        "documentation" : null,
        "simpleType" : "GetResolverQueryLogConfigRequest",
        "variableSetterType" : "GetResolverQueryLogConfigRequest"
      },
      "wrapper" : false
    },
    "GetResolverQueryLogConfigResult" : {
      "c2jName" : "GetResolverQueryLogConfigResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.response.GetResolverQueryLogConfigResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResolverQueryLogConfig",
        "c2jShape" : "ResolverQueryLogConfig",
        "deprecated" : false,
        "documentation" : "<p>Information about the Resolver query logging configuration that you specified in a <code>GetQueryLogConfig</code> request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the Resolver query logging configuration that you specified in a <code>GetQueryLogConfig</code> request.</p>\n@param resolverQueryLogConfig Information about the Resolver query logging configuration that you specified in a <code>GetQueryLogConfig</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverQueryLogConfig",
        "getterDocumentation" : "/**<p>Information about the Resolver query logging configuration that you specified in a <code>GetQueryLogConfig</code> request.</p>\n@return Information about the Resolver query logging configuration that you specified in a <code>GetQueryLogConfig</code> request.*/",
        "getterMethodName" : "getResolverQueryLogConfig",
        "getterModel" : {
          "returnType" : "ResolverQueryLogConfig",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverQueryLogConfig",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverQueryLogConfig",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ResolverQueryLogConfig",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Information about the Resolver query logging configuration that you specified in a <code>GetQueryLogConfig</code> request.</p>\n@param resolverQueryLogConfig Information about the Resolver query logging configuration that you specified in a <code>GetQueryLogConfig</code> request.*/",
        "setterMethodName" : "setResolverQueryLogConfig",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverQueryLogConfig",
          "variableName" : "resolverQueryLogConfig",
          "variableType" : "ResolverQueryLogConfig",
          "documentation" : "",
          "simpleType" : "ResolverQueryLogConfig",
          "variableSetterType" : "ResolverQueryLogConfig"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the Resolver query logging configuration that you specified in a <code>GetQueryLogConfig</code> request.</p>\n@param resolverQueryLogConfig Information about the Resolver query logging configuration that you specified in a <code>GetQueryLogConfig</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverQueryLogConfig",
          "variableName" : "resolverQueryLogConfig",
          "variableType" : "ResolverQueryLogConfig",
          "documentation" : "<p>Information about the Resolver query logging configuration that you specified in a <code>GetQueryLogConfig</code> request.</p>",
          "simpleType" : "ResolverQueryLogConfig",
          "variableSetterType" : "ResolverQueryLogConfig"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverQueryLogConfig" : {
          "c2jName" : "ResolverQueryLogConfig",
          "c2jShape" : "ResolverQueryLogConfig",
          "deprecated" : false,
          "documentation" : "<p>Information about the Resolver query logging configuration that you specified in a <code>GetQueryLogConfig</code> request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the Resolver query logging configuration that you specified in a <code>GetQueryLogConfig</code> request.</p>\n@param resolverQueryLogConfig Information about the Resolver query logging configuration that you specified in a <code>GetQueryLogConfig</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverQueryLogConfig",
          "getterDocumentation" : "/**<p>Information about the Resolver query logging configuration that you specified in a <code>GetQueryLogConfig</code> request.</p>\n@return Information about the Resolver query logging configuration that you specified in a <code>GetQueryLogConfig</code> request.*/",
          "getterMethodName" : "getResolverQueryLogConfig",
          "getterModel" : {
            "returnType" : "ResolverQueryLogConfig",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverQueryLogConfig",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverQueryLogConfig",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ResolverQueryLogConfig",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Information about the Resolver query logging configuration that you specified in a <code>GetQueryLogConfig</code> request.</p>\n@param resolverQueryLogConfig Information about the Resolver query logging configuration that you specified in a <code>GetQueryLogConfig</code> request.*/",
          "setterMethodName" : "setResolverQueryLogConfig",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverQueryLogConfig",
            "variableName" : "resolverQueryLogConfig",
            "variableType" : "ResolverQueryLogConfig",
            "documentation" : "",
            "simpleType" : "ResolverQueryLogConfig",
            "variableSetterType" : "ResolverQueryLogConfig"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the Resolver query logging configuration that you specified in a <code>GetQueryLogConfig</code> request.</p>\n@param resolverQueryLogConfig Information about the Resolver query logging configuration that you specified in a <code>GetQueryLogConfig</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverQueryLogConfig",
            "variableName" : "resolverQueryLogConfig",
            "variableType" : "ResolverQueryLogConfig",
            "documentation" : "<p>Information about the Resolver query logging configuration that you specified in a <code>GetQueryLogConfig</code> request.</p>",
            "simpleType" : "ResolverQueryLogConfig",
            "variableSetterType" : "ResolverQueryLogConfig"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetResolverQueryLogConfigResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetResolverQueryLogConfigResult",
        "variableName" : "getResolverQueryLogConfigResult",
        "variableType" : "GetResolverQueryLogConfigResult",
        "documentation" : null,
        "simpleType" : "GetResolverQueryLogConfigResult",
        "variableSetterType" : "GetResolverQueryLogConfigResult"
      },
      "wrapper" : false
    },
    "GetResolverRuleAssociationRequest" : {
      "c2jName" : "GetResolverRuleAssociationRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.request.GetResolverRuleAssociationRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetResolverRuleAssociation",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.GetResolverRuleAssociation",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResolverRuleAssociationId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the Resolver rule association that you want to get information about.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the Resolver rule association that you want to get information about.</p>\n@param resolverRuleAssociationId The ID of the Resolver rule association that you want to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverRuleAssociationId",
        "getterDocumentation" : "/**<p>The ID of the Resolver rule association that you want to get information about.</p>\n@return The ID of the Resolver rule association that you want to get information about.*/",
        "getterMethodName" : "getResolverRuleAssociationId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverRuleAssociationId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverRuleAssociationId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverRuleAssociationId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the Resolver rule association that you want to get information about.</p>\n@param resolverRuleAssociationId The ID of the Resolver rule association that you want to get information about.*/",
        "setterMethodName" : "setResolverRuleAssociationId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverRuleAssociationId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the Resolver rule association that you want to get information about.</p>\n@param resolverRuleAssociationId The ID of the Resolver rule association that you want to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverRuleAssociationId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the Resolver rule association that you want to get information about.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverRuleAssociationId" : {
          "c2jName" : "ResolverRuleAssociationId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the Resolver rule association that you want to get information about.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the Resolver rule association that you want to get information about.</p>\n@param resolverRuleAssociationId The ID of the Resolver rule association that you want to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverRuleAssociationId",
          "getterDocumentation" : "/**<p>The ID of the Resolver rule association that you want to get information about.</p>\n@return The ID of the Resolver rule association that you want to get information about.*/",
          "getterMethodName" : "getResolverRuleAssociationId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverRuleAssociationId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverRuleAssociationId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverRuleAssociationId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the Resolver rule association that you want to get information about.</p>\n@param resolverRuleAssociationId The ID of the Resolver rule association that you want to get information about.*/",
          "setterMethodName" : "setResolverRuleAssociationId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverRuleAssociationId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the Resolver rule association that you want to get information about.</p>\n@param resolverRuleAssociationId The ID of the Resolver rule association that you want to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverRuleAssociationId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the Resolver rule association that you want to get information about.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResolverRuleAssociationId" ],
      "shapeName" : "GetResolverRuleAssociationRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetResolverRuleAssociationRequest",
        "variableName" : "getResolverRuleAssociationRequest",
        "variableType" : "GetResolverRuleAssociationRequest",
        "documentation" : null,
        "simpleType" : "GetResolverRuleAssociationRequest",
        "variableSetterType" : "GetResolverRuleAssociationRequest"
      },
      "wrapper" : false
    },
    "GetResolverRuleAssociationResult" : {
      "c2jName" : "GetResolverRuleAssociationResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.response.GetResolverRuleAssociationResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResolverRuleAssociation",
        "c2jShape" : "ResolverRuleAssociation",
        "deprecated" : false,
        "documentation" : "<p>Information about the Resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the Resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.</p>\n@param resolverRuleAssociation Information about the Resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverRuleAssociation",
        "getterDocumentation" : "/**<p>Information about the Resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.</p>\n@return Information about the Resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.*/",
        "getterMethodName" : "getResolverRuleAssociation",
        "getterModel" : {
          "returnType" : "ResolverRuleAssociation",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverRuleAssociation",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverRuleAssociation",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ResolverRuleAssociation",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Information about the Resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.</p>\n@param resolverRuleAssociation Information about the Resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.*/",
        "setterMethodName" : "setResolverRuleAssociation",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverRuleAssociation",
          "variableName" : "resolverRuleAssociation",
          "variableType" : "ResolverRuleAssociation",
          "documentation" : "",
          "simpleType" : "ResolverRuleAssociation",
          "variableSetterType" : "ResolverRuleAssociation"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the Resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.</p>\n@param resolverRuleAssociation Information about the Resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverRuleAssociation",
          "variableName" : "resolverRuleAssociation",
          "variableType" : "ResolverRuleAssociation",
          "documentation" : "<p>Information about the Resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.</p>",
          "simpleType" : "ResolverRuleAssociation",
          "variableSetterType" : "ResolverRuleAssociation"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverRuleAssociation" : {
          "c2jName" : "ResolverRuleAssociation",
          "c2jShape" : "ResolverRuleAssociation",
          "deprecated" : false,
          "documentation" : "<p>Information about the Resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the Resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.</p>\n@param resolverRuleAssociation Information about the Resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverRuleAssociation",
          "getterDocumentation" : "/**<p>Information about the Resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.</p>\n@return Information about the Resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.*/",
          "getterMethodName" : "getResolverRuleAssociation",
          "getterModel" : {
            "returnType" : "ResolverRuleAssociation",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverRuleAssociation",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverRuleAssociation",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ResolverRuleAssociation",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Information about the Resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.</p>\n@param resolverRuleAssociation Information about the Resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.*/",
          "setterMethodName" : "setResolverRuleAssociation",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverRuleAssociation",
            "variableName" : "resolverRuleAssociation",
            "variableType" : "ResolverRuleAssociation",
            "documentation" : "",
            "simpleType" : "ResolverRuleAssociation",
            "variableSetterType" : "ResolverRuleAssociation"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the Resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.</p>\n@param resolverRuleAssociation Information about the Resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverRuleAssociation",
            "variableName" : "resolverRuleAssociation",
            "variableType" : "ResolverRuleAssociation",
            "documentation" : "<p>Information about the Resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.</p>",
            "simpleType" : "ResolverRuleAssociation",
            "variableSetterType" : "ResolverRuleAssociation"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetResolverRuleAssociationResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetResolverRuleAssociationResult",
        "variableName" : "getResolverRuleAssociationResult",
        "variableType" : "GetResolverRuleAssociationResult",
        "documentation" : null,
        "simpleType" : "GetResolverRuleAssociationResult",
        "variableSetterType" : "GetResolverRuleAssociationResult"
      },
      "wrapper" : false
    },
    "GetResolverRulePolicyRequest" : {
      "c2jName" : "GetResolverRulePolicyRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.request.GetResolverRulePolicyRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetResolverRulePolicy",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.GetResolverRulePolicy",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "Arn",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>The ID of the Resolver rule that you want to get the Resolver rule policy for.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the Resolver rule that you want to get the Resolver rule policy for.</p>\n@param arn The ID of the Resolver rule that you want to get the Resolver rule policy for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withArn",
        "getterDocumentation" : "/**<p>The ID of the Resolver rule that you want to get the Resolver rule policy for.</p>\n@return The ID of the Resolver rule that you want to get the Resolver rule policy for.*/",
        "getterMethodName" : "getArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Arn",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Arn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Arn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the Resolver rule that you want to get the Resolver rule policy for.</p>\n@param arn The ID of the Resolver rule that you want to get the Resolver rule policy for.*/",
        "setterMethodName" : "setArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the Resolver rule that you want to get the Resolver rule policy for.</p>\n@param arn The ID of the Resolver rule that you want to get the Resolver rule policy for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "<p>The ID of the Resolver rule that you want to get the Resolver rule policy for.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Arn" : {
          "c2jName" : "Arn",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>The ID of the Resolver rule that you want to get the Resolver rule policy for.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the Resolver rule that you want to get the Resolver rule policy for.</p>\n@param arn The ID of the Resolver rule that you want to get the Resolver rule policy for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withArn",
          "getterDocumentation" : "/**<p>The ID of the Resolver rule that you want to get the Resolver rule policy for.</p>\n@return The ID of the Resolver rule that you want to get the Resolver rule policy for.*/",
          "getterMethodName" : "getArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Arn",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Arn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Arn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the Resolver rule that you want to get the Resolver rule policy for.</p>\n@param arn The ID of the Resolver rule that you want to get the Resolver rule policy for.*/",
          "setterMethodName" : "setArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the Resolver rule that you want to get the Resolver rule policy for.</p>\n@param arn The ID of the Resolver rule that you want to get the Resolver rule policy for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "<p>The ID of the Resolver rule that you want to get the Resolver rule policy for.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Arn" ],
      "shapeName" : "GetResolverRulePolicyRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetResolverRulePolicyRequest",
        "variableName" : "getResolverRulePolicyRequest",
        "variableType" : "GetResolverRulePolicyRequest",
        "documentation" : null,
        "simpleType" : "GetResolverRulePolicyRequest",
        "variableSetterType" : "GetResolverRulePolicyRequest"
      },
      "wrapper" : false
    },
    "GetResolverRulePolicyResult" : {
      "c2jName" : "GetResolverRulePolicyResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.response.GetResolverRulePolicyResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResolverRulePolicy",
        "c2jShape" : "ResolverRulePolicy",
        "deprecated" : false,
        "documentation" : "<p>The Resolver rule policy for the rule that you specified in a <code>GetResolverRulePolicy</code> request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The Resolver rule policy for the rule that you specified in a <code>GetResolverRulePolicy</code> request.</p>\n@param resolverRulePolicy The Resolver rule policy for the rule that you specified in a <code>GetResolverRulePolicy</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverRulePolicy",
        "getterDocumentation" : "/**<p>The Resolver rule policy for the rule that you specified in a <code>GetResolverRulePolicy</code> request.</p>\n@return The Resolver rule policy for the rule that you specified in a <code>GetResolverRulePolicy</code> request.*/",
        "getterMethodName" : "getResolverRulePolicy",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverRulePolicy",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverRulePolicy",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverRulePolicy",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The Resolver rule policy for the rule that you specified in a <code>GetResolverRulePolicy</code> request.</p>\n@param resolverRulePolicy The Resolver rule policy for the rule that you specified in a <code>GetResolverRulePolicy</code> request.*/",
        "setterMethodName" : "setResolverRulePolicy",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverRulePolicy",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The Resolver rule policy for the rule that you specified in a <code>GetResolverRulePolicy</code> request.</p>\n@param resolverRulePolicy The Resolver rule policy for the rule that you specified in a <code>GetResolverRulePolicy</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverRulePolicy",
          "variableType" : "String",
          "documentation" : "<p>The Resolver rule policy for the rule that you specified in a <code>GetResolverRulePolicy</code> request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverRulePolicy" : {
          "c2jName" : "ResolverRulePolicy",
          "c2jShape" : "ResolverRulePolicy",
          "deprecated" : false,
          "documentation" : "<p>The Resolver rule policy for the rule that you specified in a <code>GetResolverRulePolicy</code> request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The Resolver rule policy for the rule that you specified in a <code>GetResolverRulePolicy</code> request.</p>\n@param resolverRulePolicy The Resolver rule policy for the rule that you specified in a <code>GetResolverRulePolicy</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverRulePolicy",
          "getterDocumentation" : "/**<p>The Resolver rule policy for the rule that you specified in a <code>GetResolverRulePolicy</code> request.</p>\n@return The Resolver rule policy for the rule that you specified in a <code>GetResolverRulePolicy</code> request.*/",
          "getterMethodName" : "getResolverRulePolicy",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverRulePolicy",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverRulePolicy",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverRulePolicy",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The Resolver rule policy for the rule that you specified in a <code>GetResolverRulePolicy</code> request.</p>\n@param resolverRulePolicy The Resolver rule policy for the rule that you specified in a <code>GetResolverRulePolicy</code> request.*/",
          "setterMethodName" : "setResolverRulePolicy",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverRulePolicy",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The Resolver rule policy for the rule that you specified in a <code>GetResolverRulePolicy</code> request.</p>\n@param resolverRulePolicy The Resolver rule policy for the rule that you specified in a <code>GetResolverRulePolicy</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverRulePolicy",
            "variableType" : "String",
            "documentation" : "<p>The Resolver rule policy for the rule that you specified in a <code>GetResolverRulePolicy</code> request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetResolverRulePolicyResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetResolverRulePolicyResult",
        "variableName" : "getResolverRulePolicyResult",
        "variableType" : "GetResolverRulePolicyResult",
        "documentation" : null,
        "simpleType" : "GetResolverRulePolicyResult",
        "variableSetterType" : "GetResolverRulePolicyResult"
      },
      "wrapper" : false
    },
    "GetResolverRuleRequest" : {
      "c2jName" : "GetResolverRuleRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.request.GetResolverRuleRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetResolverRule",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.GetResolverRule",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResolverRuleId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the Resolver rule that you want to get information about.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the Resolver rule that you want to get information about.</p>\n@param resolverRuleId The ID of the Resolver rule that you want to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverRuleId",
        "getterDocumentation" : "/**<p>The ID of the Resolver rule that you want to get information about.</p>\n@return The ID of the Resolver rule that you want to get information about.*/",
        "getterMethodName" : "getResolverRuleId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverRuleId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverRuleId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverRuleId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the Resolver rule that you want to get information about.</p>\n@param resolverRuleId The ID of the Resolver rule that you want to get information about.*/",
        "setterMethodName" : "setResolverRuleId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverRuleId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the Resolver rule that you want to get information about.</p>\n@param resolverRuleId The ID of the Resolver rule that you want to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverRuleId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the Resolver rule that you want to get information about.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverRuleId" : {
          "c2jName" : "ResolverRuleId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the Resolver rule that you want to get information about.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the Resolver rule that you want to get information about.</p>\n@param resolverRuleId The ID of the Resolver rule that you want to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverRuleId",
          "getterDocumentation" : "/**<p>The ID of the Resolver rule that you want to get information about.</p>\n@return The ID of the Resolver rule that you want to get information about.*/",
          "getterMethodName" : "getResolverRuleId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverRuleId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverRuleId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverRuleId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the Resolver rule that you want to get information about.</p>\n@param resolverRuleId The ID of the Resolver rule that you want to get information about.*/",
          "setterMethodName" : "setResolverRuleId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverRuleId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the Resolver rule that you want to get information about.</p>\n@param resolverRuleId The ID of the Resolver rule that you want to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverRuleId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the Resolver rule that you want to get information about.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResolverRuleId" ],
      "shapeName" : "GetResolverRuleRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetResolverRuleRequest",
        "variableName" : "getResolverRuleRequest",
        "variableType" : "GetResolverRuleRequest",
        "documentation" : null,
        "simpleType" : "GetResolverRuleRequest",
        "variableSetterType" : "GetResolverRuleRequest"
      },
      "wrapper" : false
    },
    "GetResolverRuleResult" : {
      "c2jName" : "GetResolverRuleResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.response.GetResolverRuleResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResolverRule",
        "c2jShape" : "ResolverRule",
        "deprecated" : false,
        "documentation" : "<p>Information about the Resolver rule that you specified in a <code>GetResolverRule</code> request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the Resolver rule that you specified in a <code>GetResolverRule</code> request.</p>\n@param resolverRule Information about the Resolver rule that you specified in a <code>GetResolverRule</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverRule",
        "getterDocumentation" : "/**<p>Information about the Resolver rule that you specified in a <code>GetResolverRule</code> request.</p>\n@return Information about the Resolver rule that you specified in a <code>GetResolverRule</code> request.*/",
        "getterMethodName" : "getResolverRule",
        "getterModel" : {
          "returnType" : "ResolverRule",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverRule",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverRule",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ResolverRule",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Information about the Resolver rule that you specified in a <code>GetResolverRule</code> request.</p>\n@param resolverRule Information about the Resolver rule that you specified in a <code>GetResolverRule</code> request.*/",
        "setterMethodName" : "setResolverRule",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverRule",
          "variableName" : "resolverRule",
          "variableType" : "ResolverRule",
          "documentation" : "",
          "simpleType" : "ResolverRule",
          "variableSetterType" : "ResolverRule"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the Resolver rule that you specified in a <code>GetResolverRule</code> request.</p>\n@param resolverRule Information about the Resolver rule that you specified in a <code>GetResolverRule</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverRule",
          "variableName" : "resolverRule",
          "variableType" : "ResolverRule",
          "documentation" : "<p>Information about the Resolver rule that you specified in a <code>GetResolverRule</code> request.</p>",
          "simpleType" : "ResolverRule",
          "variableSetterType" : "ResolverRule"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverRule" : {
          "c2jName" : "ResolverRule",
          "c2jShape" : "ResolverRule",
          "deprecated" : false,
          "documentation" : "<p>Information about the Resolver rule that you specified in a <code>GetResolverRule</code> request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the Resolver rule that you specified in a <code>GetResolverRule</code> request.</p>\n@param resolverRule Information about the Resolver rule that you specified in a <code>GetResolverRule</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverRule",
          "getterDocumentation" : "/**<p>Information about the Resolver rule that you specified in a <code>GetResolverRule</code> request.</p>\n@return Information about the Resolver rule that you specified in a <code>GetResolverRule</code> request.*/",
          "getterMethodName" : "getResolverRule",
          "getterModel" : {
            "returnType" : "ResolverRule",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverRule",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverRule",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ResolverRule",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Information about the Resolver rule that you specified in a <code>GetResolverRule</code> request.</p>\n@param resolverRule Information about the Resolver rule that you specified in a <code>GetResolverRule</code> request.*/",
          "setterMethodName" : "setResolverRule",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverRule",
            "variableName" : "resolverRule",
            "variableType" : "ResolverRule",
            "documentation" : "",
            "simpleType" : "ResolverRule",
            "variableSetterType" : "ResolverRule"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the Resolver rule that you specified in a <code>GetResolverRule</code> request.</p>\n@param resolverRule Information about the Resolver rule that you specified in a <code>GetResolverRule</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverRule",
            "variableName" : "resolverRule",
            "variableType" : "ResolverRule",
            "documentation" : "<p>Information about the Resolver rule that you specified in a <code>GetResolverRule</code> request.</p>",
            "simpleType" : "ResolverRule",
            "variableSetterType" : "ResolverRule"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetResolverRuleResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetResolverRuleResult",
        "variableName" : "getResolverRuleResult",
        "variableType" : "GetResolverRuleResult",
        "documentation" : null,
        "simpleType" : "GetResolverRuleResult",
        "variableSetterType" : "GetResolverRuleResult"
      },
      "wrapper" : false
    },
    "InternalServiceErrorException" : {
      "c2jName" : "InternalServiceErrorException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : "InternalServiceErrorException",
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.exception.InternalServiceErrorException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.route53resolver.exception",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InternalServiceErrorException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "InternalServiceErrorException",
        "variableName" : "internalServiceErrorException",
        "variableType" : "InternalServiceErrorException",
        "documentation" : null,
        "simpleType" : "InternalServiceErrorException",
        "variableSetterType" : "InternalServiceErrorException"
      },
      "wrapper" : false
    },
    "InvalidNextTokenException" : {
      "c2jName" : "InvalidNextTokenException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The value that you specified for <code>NextToken</code> in a <code>List</code> request isn't valid.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : "InvalidNextTokenException",
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.exception.InvalidNextTokenException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.route53resolver.exception",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidNextTokenException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "InvalidNextTokenException",
        "variableName" : "invalidNextTokenException",
        "variableType" : "InvalidNextTokenException",
        "documentation" : null,
        "simpleType" : "InvalidNextTokenException",
        "variableSetterType" : "InvalidNextTokenException"
      },
      "wrapper" : false
    },
    "InvalidParameterException" : {
      "c2jName" : "InvalidParameterException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>One or more parameters in this request are not valid.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : "InvalidParameterException",
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.exception.InvalidParameterException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "FieldName",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>\n@param fieldName For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFieldName",
        "getterDocumentation" : "/**<p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>\n@return For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.*/",
        "getterMethodName" : "getFieldName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "FieldName",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "FieldName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "FieldName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>\n@param fieldName For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.*/",
        "setterMethodName" : "setFieldName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "fieldName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>\n@param fieldName For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "fieldName",
          "variableType" : "String",
          "documentation" : "<p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "FieldName" : {
          "c2jName" : "FieldName",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>\n@param fieldName For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFieldName",
          "getterDocumentation" : "/**<p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>\n@return For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.*/",
          "getterMethodName" : "getFieldName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "FieldName",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "FieldName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "FieldName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>\n@param fieldName For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.*/",
          "setterMethodName" : "setFieldName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "fieldName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>\n@param fieldName For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "fieldName",
            "variableType" : "String",
            "documentation" : "<p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.exception",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Message" ],
      "shapeName" : "InvalidParameterException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "InvalidParameterException",
        "variableName" : "invalidParameterException",
        "variableType" : "InvalidParameterException",
        "documentation" : null,
        "simpleType" : "InvalidParameterException",
        "variableSetterType" : "InvalidParameterException"
      },
      "wrapper" : false
    },
    "InvalidPolicyDocumentException" : {
      "c2jName" : "InvalidPolicyDocument",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified Resolver rule policy is invalid.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : "InvalidPolicyDocument",
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.exception.InvalidPolicyDocumentException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.route53resolver.exception",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidPolicyDocumentException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "InvalidPolicyDocumentException",
        "variableName" : "invalidPolicyDocumentException",
        "variableType" : "InvalidPolicyDocumentException",
        "documentation" : null,
        "simpleType" : "InvalidPolicyDocumentException",
        "variableSetterType" : "InvalidPolicyDocumentException"
      },
      "wrapper" : false
    },
    "InvalidRequestException" : {
      "c2jName" : "InvalidRequestException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The request is invalid.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : "InvalidRequestException",
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.exception.InvalidRequestException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.route53resolver.exception",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidRequestException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "InvalidRequestException",
        "variableName" : "invalidRequestException",
        "variableType" : "InvalidRequestException",
        "documentation" : null,
        "simpleType" : "InvalidRequestException",
        "variableSetterType" : "InvalidRequestException"
      },
      "wrapper" : false
    },
    "InvalidTagException" : {
      "c2jName" : "InvalidTagException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified tag is invalid.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : "InvalidTagException",
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.exception.InvalidTagException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.route53resolver.exception",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidTagException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "InvalidTagException",
        "variableName" : "invalidTagException",
        "variableType" : "InvalidTagException",
        "documentation" : null,
        "simpleType" : "InvalidTagException",
        "variableSetterType" : "InvalidTagException"
      },
      "wrapper" : false
    },
    "IpAddressRequest" : {
      "c2jName" : "IpAddressRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request, the IP address that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints). <code>IpAddressRequest</code> also includes the ID of the subnet that contains the IP address.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.model.IpAddressRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "SubnetId",
        "c2jShape" : "SubnetId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the subnet that contains the IP address. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the subnet that contains the IP address. </p>\n@param subnetId The ID of the subnet that contains the IP address.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSubnetId",
        "getterDocumentation" : "/**<p>The ID of the subnet that contains the IP address. </p>\n@return The ID of the subnet that contains the IP address.*/",
        "getterMethodName" : "getSubnetId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SubnetId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SubnetId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SubnetId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the subnet that contains the IP address. </p>\n@param subnetId The ID of the subnet that contains the IP address.*/",
        "setterMethodName" : "setSubnetId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "subnetId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the subnet that contains the IP address. </p>\n@param subnetId The ID of the subnet that contains the IP address.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "subnetId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the subnet that contains the IP address. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Ip",
        "c2jShape" : "Ip",
        "deprecated" : false,
        "documentation" : "<p>The IP address that you want to use for DNS queries.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The IP address that you want to use for DNS queries.</p>\n@param ip The IP address that you want to use for DNS queries.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withIp",
        "getterDocumentation" : "/**<p>The IP address that you want to use for DNS queries.</p>\n@return The IP address that you want to use for DNS queries.*/",
        "getterMethodName" : "getIp",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Ip",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Ip",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Ip",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The IP address that you want to use for DNS queries.</p>\n@param ip The IP address that you want to use for DNS queries.*/",
        "setterMethodName" : "setIp",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ip",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The IP address that you want to use for DNS queries.</p>\n@param ip The IP address that you want to use for DNS queries.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ip",
          "variableType" : "String",
          "documentation" : "<p>The IP address that you want to use for DNS queries.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Ip" : {
          "c2jName" : "Ip",
          "c2jShape" : "Ip",
          "deprecated" : false,
          "documentation" : "<p>The IP address that you want to use for DNS queries.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The IP address that you want to use for DNS queries.</p>\n@param ip The IP address that you want to use for DNS queries.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withIp",
          "getterDocumentation" : "/**<p>The IP address that you want to use for DNS queries.</p>\n@return The IP address that you want to use for DNS queries.*/",
          "getterMethodName" : "getIp",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Ip",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Ip",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Ip",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The IP address that you want to use for DNS queries.</p>\n@param ip The IP address that you want to use for DNS queries.*/",
          "setterMethodName" : "setIp",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ip",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The IP address that you want to use for DNS queries.</p>\n@param ip The IP address that you want to use for DNS queries.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ip",
            "variableType" : "String",
            "documentation" : "<p>The IP address that you want to use for DNS queries.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SubnetId" : {
          "c2jName" : "SubnetId",
          "c2jShape" : "SubnetId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the subnet that contains the IP address. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the subnet that contains the IP address. </p>\n@param subnetId The ID of the subnet that contains the IP address.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSubnetId",
          "getterDocumentation" : "/**<p>The ID of the subnet that contains the IP address. </p>\n@return The ID of the subnet that contains the IP address.*/",
          "getterMethodName" : "getSubnetId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SubnetId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SubnetId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SubnetId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the subnet that contains the IP address. </p>\n@param subnetId The ID of the subnet that contains the IP address.*/",
          "setterMethodName" : "setSubnetId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "subnetId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the subnet that contains the IP address. </p>\n@param subnetId The ID of the subnet that contains the IP address.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "subnetId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the subnet that contains the IP address. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "SubnetId" ],
      "shapeName" : "IpAddressRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "IpAddressRequest",
        "variableName" : "ipAddressRequest",
        "variableType" : "IpAddressRequest",
        "documentation" : null,
        "simpleType" : "IpAddressRequest",
        "variableSetterType" : "IpAddressRequest"
      },
      "wrapper" : false
    },
    "IpAddressResponse" : {
      "c2jName" : "IpAddressResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>In the response to a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> request, information about the IP addresses that the Resolver endpoint uses for DNS queries.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.model.IpAddressResponse",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "IpId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of one IP address.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of one IP address.</p>\n@param ipId The ID of one IP address.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withIpId",
        "getterDocumentation" : "/**<p>The ID of one IP address.</p>\n@return The ID of one IP address.*/",
        "getterMethodName" : "getIpId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "IpId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "IpId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "IpId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of one IP address.</p>\n@param ipId The ID of one IP address.*/",
        "setterMethodName" : "setIpId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ipId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of one IP address.</p>\n@param ipId The ID of one IP address.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ipId",
          "variableType" : "String",
          "documentation" : "<p>The ID of one IP address.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "SubnetId",
        "c2jShape" : "SubnetId",
        "deprecated" : false,
        "documentation" : "<p>The ID of one subnet.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of one subnet.</p>\n@param subnetId The ID of one subnet.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSubnetId",
        "getterDocumentation" : "/**<p>The ID of one subnet.</p>\n@return The ID of one subnet.*/",
        "getterMethodName" : "getSubnetId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SubnetId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SubnetId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SubnetId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of one subnet.</p>\n@param subnetId The ID of one subnet.*/",
        "setterMethodName" : "setSubnetId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "subnetId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of one subnet.</p>\n@param subnetId The ID of one subnet.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "subnetId",
          "variableType" : "String",
          "documentation" : "<p>The ID of one subnet.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Ip",
        "c2jShape" : "Ip",
        "deprecated" : false,
        "documentation" : "<p>One IP address that the Resolver endpoint uses for DNS queries.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>One IP address that the Resolver endpoint uses for DNS queries.</p>\n@param ip One IP address that the Resolver endpoint uses for DNS queries.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withIp",
        "getterDocumentation" : "/**<p>One IP address that the Resolver endpoint uses for DNS queries.</p>\n@return One IP address that the Resolver endpoint uses for DNS queries.*/",
        "getterMethodName" : "getIp",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Ip",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Ip",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Ip",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>One IP address that the Resolver endpoint uses for DNS queries.</p>\n@param ip One IP address that the Resolver endpoint uses for DNS queries.*/",
        "setterMethodName" : "setIp",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ip",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>One IP address that the Resolver endpoint uses for DNS queries.</p>\n@param ip One IP address that the Resolver endpoint uses for DNS queries.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ip",
          "variableType" : "String",
          "documentation" : "<p>One IP address that the Resolver endpoint uses for DNS queries.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Status",
        "c2jShape" : "IpAddressStatus",
        "deprecated" : false,
        "documentation" : "<p>A status code that gives the current status of the request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : "IpAddressStatus",
        "fluentSetterDocumentation" : "/**<p>A status code that gives the current status of the request.</p>\n@param status A status code that gives the current status of the request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see IpAddressStatus*/",
        "fluentSetterMethodName" : "withStatus",
        "getterDocumentation" : "/**<p>A status code that gives the current status of the request.</p>\n@return A status code that gives the current status of the request.\n@see IpAddressStatus*/",
        "getterMethodName" : "getStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Status",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Status",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Status",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A status code that gives the current status of the request.</p>\n@param status A status code that gives the current status of the request.\n@see IpAddressStatus*/",
        "setterMethodName" : "setStatus",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A status code that gives the current status of the request.</p>\n@param status A status code that gives the current status of the request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see IpAddressStatus*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "<p>A status code that gives the current status of the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "StatusMessage",
        "c2jShape" : "StatusMessage",
        "deprecated" : false,
        "documentation" : "<p>A message that provides additional information about the status of the request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A message that provides additional information about the status of the request.</p>\n@param statusMessage A message that provides additional information about the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withStatusMessage",
        "getterDocumentation" : "/**<p>A message that provides additional information about the status of the request.</p>\n@return A message that provides additional information about the status of the request.*/",
        "getterMethodName" : "getStatusMessage",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "StatusMessage",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "StatusMessage",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "StatusMessage",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A message that provides additional information about the status of the request.</p>\n@param statusMessage A message that provides additional information about the status of the request.*/",
        "setterMethodName" : "setStatusMessage",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "statusMessage",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A message that provides additional information about the status of the request.</p>\n@param statusMessage A message that provides additional information about the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "statusMessage",
          "variableType" : "String",
          "documentation" : "<p>A message that provides additional information about the status of the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "CreationTime",
        "c2jShape" : "Rfc3339TimeString",
        "deprecated" : false,
        "documentation" : "<p>The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCreationTime",
        "getterDocumentation" : "/**<p>The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@return The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).*/",
        "getterMethodName" : "getCreationTime",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "CreationTime",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CreationTime",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CreationTime",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).*/",
        "setterMethodName" : "setCreationTime",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "creationTime",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "creationTime",
          "variableType" : "String",
          "documentation" : "<p>The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ModificationTime",
        "c2jShape" : "Rfc3339TimeString",
        "deprecated" : false,
        "documentation" : "<p>The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param modificationTime The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withModificationTime",
        "getterDocumentation" : "/**<p>The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n@return The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).*/",
        "getterMethodName" : "getModificationTime",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ModificationTime",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ModificationTime",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ModificationTime",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param modificationTime The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).*/",
        "setterMethodName" : "setModificationTime",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "modificationTime",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param modificationTime The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "modificationTime",
          "variableType" : "String",
          "documentation" : "<p>The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CreationTime" : {
          "c2jName" : "CreationTime",
          "c2jShape" : "Rfc3339TimeString",
          "deprecated" : false,
          "documentation" : "<p>The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCreationTime",
          "getterDocumentation" : "/**<p>The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@return The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).*/",
          "getterMethodName" : "getCreationTime",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "CreationTime",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CreationTime",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CreationTime",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).*/",
          "setterMethodName" : "setCreationTime",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "creationTime",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "creationTime",
            "variableType" : "String",
            "documentation" : "<p>The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Ip" : {
          "c2jName" : "Ip",
          "c2jShape" : "Ip",
          "deprecated" : false,
          "documentation" : "<p>One IP address that the Resolver endpoint uses for DNS queries.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>One IP address that the Resolver endpoint uses for DNS queries.</p>\n@param ip One IP address that the Resolver endpoint uses for DNS queries.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withIp",
          "getterDocumentation" : "/**<p>One IP address that the Resolver endpoint uses for DNS queries.</p>\n@return One IP address that the Resolver endpoint uses for DNS queries.*/",
          "getterMethodName" : "getIp",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Ip",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Ip",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Ip",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>One IP address that the Resolver endpoint uses for DNS queries.</p>\n@param ip One IP address that the Resolver endpoint uses for DNS queries.*/",
          "setterMethodName" : "setIp",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ip",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>One IP address that the Resolver endpoint uses for DNS queries.</p>\n@param ip One IP address that the Resolver endpoint uses for DNS queries.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ip",
            "variableType" : "String",
            "documentation" : "<p>One IP address that the Resolver endpoint uses for DNS queries.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "IpId" : {
          "c2jName" : "IpId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of one IP address.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of one IP address.</p>\n@param ipId The ID of one IP address.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withIpId",
          "getterDocumentation" : "/**<p>The ID of one IP address.</p>\n@return The ID of one IP address.*/",
          "getterMethodName" : "getIpId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "IpId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "IpId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "IpId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of one IP address.</p>\n@param ipId The ID of one IP address.*/",
          "setterMethodName" : "setIpId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ipId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of one IP address.</p>\n@param ipId The ID of one IP address.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ipId",
            "variableType" : "String",
            "documentation" : "<p>The ID of one IP address.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ModificationTime" : {
          "c2jName" : "ModificationTime",
          "c2jShape" : "Rfc3339TimeString",
          "deprecated" : false,
          "documentation" : "<p>The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param modificationTime The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withModificationTime",
          "getterDocumentation" : "/**<p>The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n@return The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).*/",
          "getterMethodName" : "getModificationTime",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ModificationTime",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ModificationTime",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ModificationTime",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param modificationTime The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).*/",
          "setterMethodName" : "setModificationTime",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "modificationTime",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param modificationTime The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "modificationTime",
            "variableType" : "String",
            "documentation" : "<p>The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Status" : {
          "c2jName" : "Status",
          "c2jShape" : "IpAddressStatus",
          "deprecated" : false,
          "documentation" : "<p>A status code that gives the current status of the request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : "IpAddressStatus",
          "fluentSetterDocumentation" : "/**<p>A status code that gives the current status of the request.</p>\n@param status A status code that gives the current status of the request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see IpAddressStatus*/",
          "fluentSetterMethodName" : "withStatus",
          "getterDocumentation" : "/**<p>A status code that gives the current status of the request.</p>\n@return A status code that gives the current status of the request.\n@see IpAddressStatus*/",
          "getterMethodName" : "getStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Status",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Status",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Status",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A status code that gives the current status of the request.</p>\n@param status A status code that gives the current status of the request.\n@see IpAddressStatus*/",
          "setterMethodName" : "setStatus",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A status code that gives the current status of the request.</p>\n@param status A status code that gives the current status of the request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see IpAddressStatus*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "<p>A status code that gives the current status of the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "StatusMessage" : {
          "c2jName" : "StatusMessage",
          "c2jShape" : "StatusMessage",
          "deprecated" : false,
          "documentation" : "<p>A message that provides additional information about the status of the request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A message that provides additional information about the status of the request.</p>\n@param statusMessage A message that provides additional information about the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withStatusMessage",
          "getterDocumentation" : "/**<p>A message that provides additional information about the status of the request.</p>\n@return A message that provides additional information about the status of the request.*/",
          "getterMethodName" : "getStatusMessage",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "StatusMessage",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "StatusMessage",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "StatusMessage",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A message that provides additional information about the status of the request.</p>\n@param statusMessage A message that provides additional information about the status of the request.*/",
          "setterMethodName" : "setStatusMessage",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "statusMessage",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A message that provides additional information about the status of the request.</p>\n@param statusMessage A message that provides additional information about the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "statusMessage",
            "variableType" : "String",
            "documentation" : "<p>A message that provides additional information about the status of the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SubnetId" : {
          "c2jName" : "SubnetId",
          "c2jShape" : "SubnetId",
          "deprecated" : false,
          "documentation" : "<p>The ID of one subnet.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of one subnet.</p>\n@param subnetId The ID of one subnet.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSubnetId",
          "getterDocumentation" : "/**<p>The ID of one subnet.</p>\n@return The ID of one subnet.*/",
          "getterMethodName" : "getSubnetId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SubnetId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SubnetId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SubnetId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of one subnet.</p>\n@param subnetId The ID of one subnet.*/",
          "setterMethodName" : "setSubnetId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "subnetId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of one subnet.</p>\n@param subnetId The ID of one subnet.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "subnetId",
            "variableType" : "String",
            "documentation" : "<p>The ID of one subnet.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "IpAddressResponse",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "IpAddressResponse",
        "variableName" : "ipAddressResponse",
        "variableType" : "IpAddressResponse",
        "documentation" : null,
        "simpleType" : "IpAddressResponse",
        "variableSetterType" : "IpAddressResponse"
      },
      "wrapper" : false
    },
    "IpAddressStatus" : {
      "c2jName" : "IpAddressStatus",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : [ {
        "name" : "CREATING",
        "value" : "CREATING"
      }, {
        "name" : "FAILED_CREATION",
        "value" : "FAILED_CREATION"
      }, {
        "name" : "ATTACHING",
        "value" : "ATTACHING"
      }, {
        "name" : "ATTACHED",
        "value" : "ATTACHED"
      }, {
        "name" : "REMAP_DETACHING",
        "value" : "REMAP_DETACHING"
      }, {
        "name" : "REMAP_ATTACHING",
        "value" : "REMAP_ATTACHING"
      }, {
        "name" : "DETACHING",
        "value" : "DETACHING"
      }, {
        "name" : "FAILED_RESOURCE_GONE",
        "value" : "FAILED_RESOURCE_GONE"
      }, {
        "name" : "DELETING",
        "value" : "DELETING"
      }, {
        "name" : "DELETE_FAILED_FAS_EXPIRED",
        "value" : "DELETE_FAILED_FAS_EXPIRED"
      } ],
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.enum.IpAddressStatus",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.route53resolver.enum",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "IpAddressStatus",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "IpAddressStatus",
        "variableName" : "ipAddressStatus",
        "variableType" : "IpAddressStatus",
        "documentation" : null,
        "simpleType" : "IpAddressStatus",
        "variableSetterType" : "IpAddressStatus"
      },
      "wrapper" : false
    },
    "IpAddressUpdate" : {
      "c2jName" : "IpAddressUpdate",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>In an <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_UpdateResolverEndpoint.html\">UpdateResolverEndpoint</a> request, information about an IP address to update.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.model.IpAddressUpdate",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "IpId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p> <i>Only when removing an IP address from a Resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> <i>Only when removing an IP address from a Resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.</p>\n@param ipId <i>Only when removing an IP address from a Resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withIpId",
        "getterDocumentation" : "/**<p> <i>Only when removing an IP address from a Resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.</p>\n@return <i>Only when removing an IP address from a Resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.*/",
        "getterMethodName" : "getIpId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "IpId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "IpId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "IpId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> <i>Only when removing an IP address from a Resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.</p>\n@param ipId <i>Only when removing an IP address from a Resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.*/",
        "setterMethodName" : "setIpId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ipId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> <i>Only when removing an IP address from a Resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.</p>\n@param ipId <i>Only when removing an IP address from a Resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ipId",
          "variableType" : "String",
          "documentation" : "<p> <i>Only when removing an IP address from a Resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "SubnetId",
        "c2jShape" : "SubnetId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.</p>\n@param subnetId The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSubnetId",
        "getterDocumentation" : "/**<p>The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.</p>\n@return The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.*/",
        "getterMethodName" : "getSubnetId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SubnetId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SubnetId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SubnetId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.</p>\n@param subnetId The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.*/",
        "setterMethodName" : "setSubnetId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "subnetId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.</p>\n@param subnetId The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "subnetId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Ip",
        "c2jShape" : "Ip",
        "deprecated" : false,
        "documentation" : "<p>The new IP address.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The new IP address.</p>\n@param ip The new IP address.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withIp",
        "getterDocumentation" : "/**<p>The new IP address.</p>\n@return The new IP address.*/",
        "getterMethodName" : "getIp",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Ip",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Ip",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Ip",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The new IP address.</p>\n@param ip The new IP address.*/",
        "setterMethodName" : "setIp",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ip",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The new IP address.</p>\n@param ip The new IP address.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ip",
          "variableType" : "String",
          "documentation" : "<p>The new IP address.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Ip" : {
          "c2jName" : "Ip",
          "c2jShape" : "Ip",
          "deprecated" : false,
          "documentation" : "<p>The new IP address.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The new IP address.</p>\n@param ip The new IP address.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withIp",
          "getterDocumentation" : "/**<p>The new IP address.</p>\n@return The new IP address.*/",
          "getterMethodName" : "getIp",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Ip",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Ip",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Ip",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The new IP address.</p>\n@param ip The new IP address.*/",
          "setterMethodName" : "setIp",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ip",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The new IP address.</p>\n@param ip The new IP address.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ip",
            "variableType" : "String",
            "documentation" : "<p>The new IP address.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "IpId" : {
          "c2jName" : "IpId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p> <i>Only when removing an IP address from a Resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> <i>Only when removing an IP address from a Resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.</p>\n@param ipId <i>Only when removing an IP address from a Resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withIpId",
          "getterDocumentation" : "/**<p> <i>Only when removing an IP address from a Resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.</p>\n@return <i>Only when removing an IP address from a Resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.*/",
          "getterMethodName" : "getIpId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "IpId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "IpId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "IpId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> <i>Only when removing an IP address from a Resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.</p>\n@param ipId <i>Only when removing an IP address from a Resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.*/",
          "setterMethodName" : "setIpId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ipId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> <i>Only when removing an IP address from a Resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.</p>\n@param ipId <i>Only when removing an IP address from a Resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ipId",
            "variableType" : "String",
            "documentation" : "<p> <i>Only when removing an IP address from a Resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SubnetId" : {
          "c2jName" : "SubnetId",
          "c2jShape" : "SubnetId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.</p>\n@param subnetId The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSubnetId",
          "getterDocumentation" : "/**<p>The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.</p>\n@return The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.*/",
          "getterMethodName" : "getSubnetId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SubnetId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SubnetId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SubnetId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.</p>\n@param subnetId The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.*/",
          "setterMethodName" : "setSubnetId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "subnetId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.</p>\n@param subnetId The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "subnetId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "IpAddressUpdate",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "IpAddressUpdate",
        "variableName" : "ipAddressUpdate",
        "variableType" : "IpAddressUpdate",
        "documentation" : null,
        "simpleType" : "IpAddressUpdate",
        "variableSetterType" : "IpAddressUpdate"
      },
      "wrapper" : false
    },
    "LimitExceededException" : {
      "c2jName" : "LimitExceededException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The request caused one or more limits to be exceeded.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : "LimitExceededException",
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.exception.LimitExceededException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResourceType",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.</p>\n@param resourceType For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceType",
        "getterDocumentation" : "/**<p>For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.</p>\n@return For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.*/",
        "getterMethodName" : "getResourceType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceType",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceType",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.</p>\n@param resourceType For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.*/",
        "setterMethodName" : "setResourceType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.</p>\n@param resourceType For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceType",
          "variableType" : "String",
          "documentation" : "<p>For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResourceType" : {
          "c2jName" : "ResourceType",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.</p>\n@param resourceType For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceType",
          "getterDocumentation" : "/**<p>For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.</p>\n@return For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.*/",
          "getterMethodName" : "getResourceType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceType",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceType",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.</p>\n@param resourceType For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.*/",
          "setterMethodName" : "setResourceType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.</p>\n@param resourceType For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceType",
            "variableType" : "String",
            "documentation" : "<p>For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.exception",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "LimitExceededException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "LimitExceededException",
        "variableName" : "limitExceededException",
        "variableType" : "LimitExceededException",
        "documentation" : null,
        "simpleType" : "LimitExceededException",
        "variableSetterType" : "LimitExceededException"
      },
      "wrapper" : false
    },
    "ListResolverDnssecConfigsRequest" : {
      "c2jName" : "ListResolverDnssecConfigsRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.request.ListResolverDnssecConfigsRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListResolverDnssecConfigs",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.ListResolverDnssecConfigs",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "MaxResults",
        "c2jShape" : "MaxResults",
        "deprecated" : false,
        "documentation" : "<p> <i>Optional</i>: An integer that specifies the maximum number of DNSSEC configuration results that you want Amazon Route 53 to return. If you don't specify a value for <code>MaxResults</code>, Route 53 returns up to 100 configuration per page.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> <i>Optional</i>: An integer that specifies the maximum number of DNSSEC configuration results that you want Amazon Route 53 to return. If you don't specify a value for <code>MaxResults</code>, Route 53 returns up to 100 configuration per page.</p>\n@param maxResults <i>Optional</i>: An integer that specifies the maximum number of DNSSEC configuration results that you want Amazon Route 53 to return. If you don't specify a value for <code>MaxResults</code>, Route 53 returns up to 100 configuration per page.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p> <i>Optional</i>: An integer that specifies the maximum number of DNSSEC configuration results that you want Amazon Route 53 to return. If you don't specify a value for <code>MaxResults</code>, Route 53 returns up to 100 configuration per page.</p>\n@return <i>Optional</i>: An integer that specifies the maximum number of DNSSEC configuration results that you want Amazon Route 53 to return. If you don't specify a value for <code>MaxResults</code>, Route 53 returns up to 100 configuration per page.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> <i>Optional</i>: An integer that specifies the maximum number of DNSSEC configuration results that you want Amazon Route 53 to return. If you don't specify a value for <code>MaxResults</code>, Route 53 returns up to 100 configuration per page.</p>\n@param maxResults <i>Optional</i>: An integer that specifies the maximum number of DNSSEC configuration results that you want Amazon Route 53 to return. If you don't specify a value for <code>MaxResults</code>, Route 53 returns up to 100 configuration per page.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> <i>Optional</i>: An integer that specifies the maximum number of DNSSEC configuration results that you want Amazon Route 53 to return. If you don't specify a value for <code>MaxResults</code>, Route 53 returns up to 100 configuration per page.</p>\n@param maxResults <i>Optional</i>: An integer that specifies the maximum number of DNSSEC configuration results that you want Amazon Route 53 to return. If you don't specify a value for <code>MaxResults</code>, Route 53 returns up to 100 configuration per page.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p> <i>Optional</i>: An integer that specifies the maximum number of DNSSEC configuration results that you want Amazon Route 53 to return. If you don't specify a value for <code>MaxResults</code>, Route 53 returns up to 100 configuration per page.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>(Optional) If the current AWS account has more than <code>MaxResults</code> DNSSEC configurations, use <code>NextToken</code> to get the second and subsequent pages of results.</p> <p>For the first <code>ListResolverDnssecConfigs</code> request, omit this value.</p> <p>For the second and subsequent requests, get the value of <code>NextToken</code> from the previous response and specify that value for <code>NextToken</code> in the request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>(Optional) If the current AWS account has more than <code>MaxResults</code> DNSSEC configurations, use <code>NextToken</code> to get the second and subsequent pages of results.</p> <p>For the first <code>ListResolverDnssecConfigs</code> request, omit this value.</p> <p>For the second and subsequent requests, get the value of <code>NextToken</code> from the previous response and specify that value for <code>NextToken</code> in the request.</p>\n@param nextToken (Optional) If the current AWS account has more than <code>MaxResults</code> DNSSEC configurations, use <code>NextToken</code> to get the second and subsequent pages of results.</p> <p>For the first <code>ListResolverDnssecConfigs</code> request, omit this value.</p> <p>For the second and subsequent requests, get the value of <code>NextToken</code> from the previous response and specify that value for <code>NextToken</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>(Optional) If the current AWS account has more than <code>MaxResults</code> DNSSEC configurations, use <code>NextToken</code> to get the second and subsequent pages of results.</p> <p>For the first <code>ListResolverDnssecConfigs</code> request, omit this value.</p> <p>For the second and subsequent requests, get the value of <code>NextToken</code> from the previous response and specify that value for <code>NextToken</code> in the request.</p>\n@return (Optional) If the current AWS account has more than <code>MaxResults</code> DNSSEC configurations, use <code>NextToken</code> to get the second and subsequent pages of results.</p> <p>For the first <code>ListResolverDnssecConfigs</code> request, omit this value.</p> <p>For the second and subsequent requests, get the value of <code>NextToken</code> from the previous response and specify that value for <code>NextToken</code> in the request.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>(Optional) If the current AWS account has more than <code>MaxResults</code> DNSSEC configurations, use <code>NextToken</code> to get the second and subsequent pages of results.</p> <p>For the first <code>ListResolverDnssecConfigs</code> request, omit this value.</p> <p>For the second and subsequent requests, get the value of <code>NextToken</code> from the previous response and specify that value for <code>NextToken</code> in the request.</p>\n@param nextToken (Optional) If the current AWS account has more than <code>MaxResults</code> DNSSEC configurations, use <code>NextToken</code> to get the second and subsequent pages of results.</p> <p>For the first <code>ListResolverDnssecConfigs</code> request, omit this value.</p> <p>For the second and subsequent requests, get the value of <code>NextToken</code> from the previous response and specify that value for <code>NextToken</code> in the request.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>(Optional) If the current AWS account has more than <code>MaxResults</code> DNSSEC configurations, use <code>NextToken</code> to get the second and subsequent pages of results.</p> <p>For the first <code>ListResolverDnssecConfigs</code> request, omit this value.</p> <p>For the second and subsequent requests, get the value of <code>NextToken</code> from the previous response and specify that value for <code>NextToken</code> in the request.</p>\n@param nextToken (Optional) If the current AWS account has more than <code>MaxResults</code> DNSSEC configurations, use <code>NextToken</code> to get the second and subsequent pages of results.</p> <p>For the first <code>ListResolverDnssecConfigs</code> request, omit this value.</p> <p>For the second and subsequent requests, get the value of <code>NextToken</code> from the previous response and specify that value for <code>NextToken</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>(Optional) If the current AWS account has more than <code>MaxResults</code> DNSSEC configurations, use <code>NextToken</code> to get the second and subsequent pages of results.</p> <p>For the first <code>ListResolverDnssecConfigs</code> request, omit this value.</p> <p>For the second and subsequent requests, get the value of <code>NextToken</code> from the previous response and specify that value for <code>NextToken</code> in the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Filters",
        "c2jShape" : "Filters",
        "deprecated" : false,
        "documentation" : "<p>An optional specification to return a subset of objects.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An optional specification to return a subset of objects.</p>\n@param filters An optional specification to return a subset of objects.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFilters",
        "getterDocumentation" : "/**<p>An optional specification to return a subset of objects.</p>\n@return An optional specification to return a subset of objects.*/",
        "getterMethodName" : "getFilters",
        "getterModel" : {
          "returnType" : "java.util.List<Filter>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Filters",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Filters",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Filter",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Filter",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Filter",
              "variableName" : "member",
              "variableType" : "Filter",
              "documentation" : "",
              "simpleType" : "Filter",
              "variableSetterType" : "Filter"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Filter",
              "variableName" : "member",
              "variableType" : "Filter",
              "documentation" : "",
              "simpleType" : "Filter",
              "variableSetterType" : "Filter"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Filter",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Filter",
          "templateImplType" : "java.util.ArrayList<Filter>",
          "templateType" : "java.util.List<Filter>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Filters",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>An optional specification to return a subset of objects.</p>\n@param filters An optional specification to return a subset of objects.*/",
        "setterMethodName" : "setFilters",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Filter>",
          "variableName" : "filters",
          "variableType" : "java.util.List<Filter>",
          "documentation" : "",
          "simpleType" : "List<Filter>",
          "variableSetterType" : "java.util.Collection<Filter>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An optional specification to return a subset of objects.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFilters(java.util.Collection)} or {@link #withFilters(java.util.Collection)} if you want to override the existing values.</p>\n@param filters An optional specification to return a subset of objects.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Filter>",
          "variableName" : "filters",
          "variableType" : "java.util.List<Filter>",
          "documentation" : "<p>An optional specification to return a subset of objects.</p>",
          "simpleType" : "List<Filter>",
          "variableSetterType" : "java.util.Collection<Filter>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Filters" : {
          "c2jName" : "Filters",
          "c2jShape" : "Filters",
          "deprecated" : false,
          "documentation" : "<p>An optional specification to return a subset of objects.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An optional specification to return a subset of objects.</p>\n@param filters An optional specification to return a subset of objects.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFilters",
          "getterDocumentation" : "/**<p>An optional specification to return a subset of objects.</p>\n@return An optional specification to return a subset of objects.*/",
          "getterMethodName" : "getFilters",
          "getterModel" : {
            "returnType" : "java.util.List<Filter>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Filters",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Filters",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Filter",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Filter",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Filter",
                "variableName" : "member",
                "variableType" : "Filter",
                "documentation" : "",
                "simpleType" : "Filter",
                "variableSetterType" : "Filter"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Filter",
                "variableName" : "member",
                "variableType" : "Filter",
                "documentation" : "",
                "simpleType" : "Filter",
                "variableSetterType" : "Filter"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Filter",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Filter",
            "templateImplType" : "java.util.ArrayList<Filter>",
            "templateType" : "java.util.List<Filter>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Filters",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>An optional specification to return a subset of objects.</p>\n@param filters An optional specification to return a subset of objects.*/",
          "setterMethodName" : "setFilters",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Filter>",
            "variableName" : "filters",
            "variableType" : "java.util.List<Filter>",
            "documentation" : "",
            "simpleType" : "List<Filter>",
            "variableSetterType" : "java.util.Collection<Filter>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An optional specification to return a subset of objects.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFilters(java.util.Collection)} or {@link #withFilters(java.util.Collection)} if you want to override the existing values.</p>\n@param filters An optional specification to return a subset of objects.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Filter>",
            "variableName" : "filters",
            "variableType" : "java.util.List<Filter>",
            "documentation" : "<p>An optional specification to return a subset of objects.</p>",
            "simpleType" : "List<Filter>",
            "variableSetterType" : "java.util.Collection<Filter>"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "MaxResults",
          "deprecated" : false,
          "documentation" : "<p> <i>Optional</i>: An integer that specifies the maximum number of DNSSEC configuration results that you want Amazon Route 53 to return. If you don't specify a value for <code>MaxResults</code>, Route 53 returns up to 100 configuration per page.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> <i>Optional</i>: An integer that specifies the maximum number of DNSSEC configuration results that you want Amazon Route 53 to return. If you don't specify a value for <code>MaxResults</code>, Route 53 returns up to 100 configuration per page.</p>\n@param maxResults <i>Optional</i>: An integer that specifies the maximum number of DNSSEC configuration results that you want Amazon Route 53 to return. If you don't specify a value for <code>MaxResults</code>, Route 53 returns up to 100 configuration per page.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p> <i>Optional</i>: An integer that specifies the maximum number of DNSSEC configuration results that you want Amazon Route 53 to return. If you don't specify a value for <code>MaxResults</code>, Route 53 returns up to 100 configuration per page.</p>\n@return <i>Optional</i>: An integer that specifies the maximum number of DNSSEC configuration results that you want Amazon Route 53 to return. If you don't specify a value for <code>MaxResults</code>, Route 53 returns up to 100 configuration per page.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> <i>Optional</i>: An integer that specifies the maximum number of DNSSEC configuration results that you want Amazon Route 53 to return. If you don't specify a value for <code>MaxResults</code>, Route 53 returns up to 100 configuration per page.</p>\n@param maxResults <i>Optional</i>: An integer that specifies the maximum number of DNSSEC configuration results that you want Amazon Route 53 to return. If you don't specify a value for <code>MaxResults</code>, Route 53 returns up to 100 configuration per page.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> <i>Optional</i>: An integer that specifies the maximum number of DNSSEC configuration results that you want Amazon Route 53 to return. If you don't specify a value for <code>MaxResults</code>, Route 53 returns up to 100 configuration per page.</p>\n@param maxResults <i>Optional</i>: An integer that specifies the maximum number of DNSSEC configuration results that you want Amazon Route 53 to return. If you don't specify a value for <code>MaxResults</code>, Route 53 returns up to 100 configuration per page.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p> <i>Optional</i>: An integer that specifies the maximum number of DNSSEC configuration results that you want Amazon Route 53 to return. If you don't specify a value for <code>MaxResults</code>, Route 53 returns up to 100 configuration per page.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>(Optional) If the current AWS account has more than <code>MaxResults</code> DNSSEC configurations, use <code>NextToken</code> to get the second and subsequent pages of results.</p> <p>For the first <code>ListResolverDnssecConfigs</code> request, omit this value.</p> <p>For the second and subsequent requests, get the value of <code>NextToken</code> from the previous response and specify that value for <code>NextToken</code> in the request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>(Optional) If the current AWS account has more than <code>MaxResults</code> DNSSEC configurations, use <code>NextToken</code> to get the second and subsequent pages of results.</p> <p>For the first <code>ListResolverDnssecConfigs</code> request, omit this value.</p> <p>For the second and subsequent requests, get the value of <code>NextToken</code> from the previous response and specify that value for <code>NextToken</code> in the request.</p>\n@param nextToken (Optional) If the current AWS account has more than <code>MaxResults</code> DNSSEC configurations, use <code>NextToken</code> to get the second and subsequent pages of results.</p> <p>For the first <code>ListResolverDnssecConfigs</code> request, omit this value.</p> <p>For the second and subsequent requests, get the value of <code>NextToken</code> from the previous response and specify that value for <code>NextToken</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>(Optional) If the current AWS account has more than <code>MaxResults</code> DNSSEC configurations, use <code>NextToken</code> to get the second and subsequent pages of results.</p> <p>For the first <code>ListResolverDnssecConfigs</code> request, omit this value.</p> <p>For the second and subsequent requests, get the value of <code>NextToken</code> from the previous response and specify that value for <code>NextToken</code> in the request.</p>\n@return (Optional) If the current AWS account has more than <code>MaxResults</code> DNSSEC configurations, use <code>NextToken</code> to get the second and subsequent pages of results.</p> <p>For the first <code>ListResolverDnssecConfigs</code> request, omit this value.</p> <p>For the second and subsequent requests, get the value of <code>NextToken</code> from the previous response and specify that value for <code>NextToken</code> in the request.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>(Optional) If the current AWS account has more than <code>MaxResults</code> DNSSEC configurations, use <code>NextToken</code> to get the second and subsequent pages of results.</p> <p>For the first <code>ListResolverDnssecConfigs</code> request, omit this value.</p> <p>For the second and subsequent requests, get the value of <code>NextToken</code> from the previous response and specify that value for <code>NextToken</code> in the request.</p>\n@param nextToken (Optional) If the current AWS account has more than <code>MaxResults</code> DNSSEC configurations, use <code>NextToken</code> to get the second and subsequent pages of results.</p> <p>For the first <code>ListResolverDnssecConfigs</code> request, omit this value.</p> <p>For the second and subsequent requests, get the value of <code>NextToken</code> from the previous response and specify that value for <code>NextToken</code> in the request.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>(Optional) If the current AWS account has more than <code>MaxResults</code> DNSSEC configurations, use <code>NextToken</code> to get the second and subsequent pages of results.</p> <p>For the first <code>ListResolverDnssecConfigs</code> request, omit this value.</p> <p>For the second and subsequent requests, get the value of <code>NextToken</code> from the previous response and specify that value for <code>NextToken</code> in the request.</p>\n@param nextToken (Optional) If the current AWS account has more than <code>MaxResults</code> DNSSEC configurations, use <code>NextToken</code> to get the second and subsequent pages of results.</p> <p>For the first <code>ListResolverDnssecConfigs</code> request, omit this value.</p> <p>For the second and subsequent requests, get the value of <code>NextToken</code> from the previous response and specify that value for <code>NextToken</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>(Optional) If the current AWS account has more than <code>MaxResults</code> DNSSEC configurations, use <code>NextToken</code> to get the second and subsequent pages of results.</p> <p>For the first <code>ListResolverDnssecConfigs</code> request, omit this value.</p> <p>For the second and subsequent requests, get the value of <code>NextToken</code> from the previous response and specify that value for <code>NextToken</code> in the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListResolverDnssecConfigsRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListResolverDnssecConfigsRequest",
        "variableName" : "listResolverDnssecConfigsRequest",
        "variableType" : "ListResolverDnssecConfigsRequest",
        "documentation" : null,
        "simpleType" : "ListResolverDnssecConfigsRequest",
        "variableSetterType" : "ListResolverDnssecConfigsRequest"
      },
      "wrapper" : false
    },
    "ListResolverDnssecConfigsResult" : {
      "c2jName" : "ListResolverDnssecConfigsResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.response.ListResolverDnssecConfigsResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>If a response includes the last of the DNSSEC configurations that are associated with the current AWS account, <code>NextToken</code> doesn't appear in the response.</p> <p>If a response doesn't include the last of the configurations, you can get more configurations by submitting another <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ListResolverDnssecConfigs.html\">ListResolverDnssecConfigs</a> request. Get the value of <code>NextToken</code> that Amazon Route 53 returned in the previous response and include it in <code>NextToken</code> in the next request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>If a response includes the last of the DNSSEC configurations that are associated with the current AWS account, <code>NextToken</code> doesn't appear in the response.</p> <p>If a response doesn't include the last of the configurations, you can get more configurations by submitting another <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ListResolverDnssecConfigs.html\">ListResolverDnssecConfigs</a> request. Get the value of <code>NextToken</code> that Amazon Route 53 returned in the previous response and include it in <code>NextToken</code> in the next request.</p>\n@param nextToken If a response includes the last of the DNSSEC configurations that are associated with the current AWS account, <code>NextToken</code> doesn't appear in the response.</p> <p>If a response doesn't include the last of the configurations, you can get more configurations by submitting another <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ListResolverDnssecConfigs.html\">ListResolverDnssecConfigs</a> request. Get the value of <code>NextToken</code> that Amazon Route 53 returned in the previous response and include it in <code>NextToken</code> in the next request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>If a response includes the last of the DNSSEC configurations that are associated with the current AWS account, <code>NextToken</code> doesn't appear in the response.</p> <p>If a response doesn't include the last of the configurations, you can get more configurations by submitting another <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ListResolverDnssecConfigs.html\">ListResolverDnssecConfigs</a> request. Get the value of <code>NextToken</code> that Amazon Route 53 returned in the previous response and include it in <code>NextToken</code> in the next request.</p>\n@return If a response includes the last of the DNSSEC configurations that are associated with the current AWS account, <code>NextToken</code> doesn't appear in the response.</p> <p>If a response doesn't include the last of the configurations, you can get more configurations by submitting another <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ListResolverDnssecConfigs.html\">ListResolverDnssecConfigs</a> request. Get the value of <code>NextToken</code> that Amazon Route 53 returned in the previous response and include it in <code>NextToken</code> in the next request.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>If a response includes the last of the DNSSEC configurations that are associated with the current AWS account, <code>NextToken</code> doesn't appear in the response.</p> <p>If a response doesn't include the last of the configurations, you can get more configurations by submitting another <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ListResolverDnssecConfigs.html\">ListResolverDnssecConfigs</a> request. Get the value of <code>NextToken</code> that Amazon Route 53 returned in the previous response and include it in <code>NextToken</code> in the next request.</p>\n@param nextToken If a response includes the last of the DNSSEC configurations that are associated with the current AWS account, <code>NextToken</code> doesn't appear in the response.</p> <p>If a response doesn't include the last of the configurations, you can get more configurations by submitting another <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ListResolverDnssecConfigs.html\">ListResolverDnssecConfigs</a> request. Get the value of <code>NextToken</code> that Amazon Route 53 returned in the previous response and include it in <code>NextToken</code> in the next request.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>If a response includes the last of the DNSSEC configurations that are associated with the current AWS account, <code>NextToken</code> doesn't appear in the response.</p> <p>If a response doesn't include the last of the configurations, you can get more configurations by submitting another <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ListResolverDnssecConfigs.html\">ListResolverDnssecConfigs</a> request. Get the value of <code>NextToken</code> that Amazon Route 53 returned in the previous response and include it in <code>NextToken</code> in the next request.</p>\n@param nextToken If a response includes the last of the DNSSEC configurations that are associated with the current AWS account, <code>NextToken</code> doesn't appear in the response.</p> <p>If a response doesn't include the last of the configurations, you can get more configurations by submitting another <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ListResolverDnssecConfigs.html\">ListResolverDnssecConfigs</a> request. Get the value of <code>NextToken</code> that Amazon Route 53 returned in the previous response and include it in <code>NextToken</code> in the next request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>If a response includes the last of the DNSSEC configurations that are associated with the current AWS account, <code>NextToken</code> doesn't appear in the response.</p> <p>If a response doesn't include the last of the configurations, you can get more configurations by submitting another <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ListResolverDnssecConfigs.html\">ListResolverDnssecConfigs</a> request. Get the value of <code>NextToken</code> that Amazon Route 53 returned in the previous response and include it in <code>NextToken</code> in the next request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ResolverDnssecConfigs",
        "c2jShape" : "ResolverDnssecConfigList",
        "deprecated" : false,
        "documentation" : "<p>An array that contains one <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ResolverDnssecConfig.html\">ResolverDnssecConfig</a> element for each configuration for DNSSEC validation that is associated with the current AWS account.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An array that contains one <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ResolverDnssecConfig.html\">ResolverDnssecConfig</a> element for each configuration for DNSSEC validation that is associated with the current AWS account.</p>\n@param resolverDnssecConfigs An array that contains one <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ResolverDnssecConfig.html\">ResolverDnssecConfig</a> element for each configuration for DNSSEC validation that is associated with the current AWS account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverDnssecConfigs",
        "getterDocumentation" : "/**<p>An array that contains one <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ResolverDnssecConfig.html\">ResolverDnssecConfig</a> element for each configuration for DNSSEC validation that is associated with the current AWS account.</p>\n@return An array that contains one <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ResolverDnssecConfig.html\">ResolverDnssecConfig</a> element for each configuration for DNSSEC validation that is associated with the current AWS account.*/",
        "getterMethodName" : "getResolverDnssecConfigs",
        "getterModel" : {
          "returnType" : "java.util.List<ResolverDnssecConfig>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverDnssecConfigs",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverDnssecConfigs",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ResolverDnssecConfig",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "ResolverDnssecConfig",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ResolverDnssecConfig",
              "variableName" : "member",
              "variableType" : "ResolverDnssecConfig",
              "documentation" : "",
              "simpleType" : "ResolverDnssecConfig",
              "variableSetterType" : "ResolverDnssecConfig"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ResolverDnssecConfig",
              "variableName" : "member",
              "variableType" : "ResolverDnssecConfig",
              "documentation" : "",
              "simpleType" : "ResolverDnssecConfig",
              "variableSetterType" : "ResolverDnssecConfig"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "ResolverDnssecConfig",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "ResolverDnssecConfig",
          "templateImplType" : "java.util.ArrayList<ResolverDnssecConfig>",
          "templateType" : "java.util.List<ResolverDnssecConfig>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "ResolverDnssecConfigs",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>An array that contains one <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ResolverDnssecConfig.html\">ResolverDnssecConfig</a> element for each configuration for DNSSEC validation that is associated with the current AWS account.</p>\n@param resolverDnssecConfigs An array that contains one <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ResolverDnssecConfig.html\">ResolverDnssecConfig</a> element for each configuration for DNSSEC validation that is associated with the current AWS account.*/",
        "setterMethodName" : "setResolverDnssecConfigs",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ResolverDnssecConfig>",
          "variableName" : "resolverDnssecConfigs",
          "variableType" : "java.util.List<ResolverDnssecConfig>",
          "documentation" : "",
          "simpleType" : "List<ResolverDnssecConfig>",
          "variableSetterType" : "java.util.Collection<ResolverDnssecConfig>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An array that contains one <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ResolverDnssecConfig.html\">ResolverDnssecConfig</a> element for each configuration for DNSSEC validation that is associated with the current AWS account.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setResolverDnssecConfigs(java.util.Collection)} or {@link #withResolverDnssecConfigs(java.util.Collection)} if you want to override the existing values.</p>\n@param resolverDnssecConfigs An array that contains one <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ResolverDnssecConfig.html\">ResolverDnssecConfig</a> element for each configuration for DNSSEC validation that is associated with the current AWS account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ResolverDnssecConfig>",
          "variableName" : "resolverDnssecConfigs",
          "variableType" : "java.util.List<ResolverDnssecConfig>",
          "documentation" : "<p>An array that contains one <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ResolverDnssecConfig.html\">ResolverDnssecConfig</a> element for each configuration for DNSSEC validation that is associated with the current AWS account.</p>",
          "simpleType" : "List<ResolverDnssecConfig>",
          "variableSetterType" : "java.util.Collection<ResolverDnssecConfig>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>If a response includes the last of the DNSSEC configurations that are associated with the current AWS account, <code>NextToken</code> doesn't appear in the response.</p> <p>If a response doesn't include the last of the configurations, you can get more configurations by submitting another <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ListResolverDnssecConfigs.html\">ListResolverDnssecConfigs</a> request. Get the value of <code>NextToken</code> that Amazon Route 53 returned in the previous response and include it in <code>NextToken</code> in the next request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>If a response includes the last of the DNSSEC configurations that are associated with the current AWS account, <code>NextToken</code> doesn't appear in the response.</p> <p>If a response doesn't include the last of the configurations, you can get more configurations by submitting another <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ListResolverDnssecConfigs.html\">ListResolverDnssecConfigs</a> request. Get the value of <code>NextToken</code> that Amazon Route 53 returned in the previous response and include it in <code>NextToken</code> in the next request.</p>\n@param nextToken If a response includes the last of the DNSSEC configurations that are associated with the current AWS account, <code>NextToken</code> doesn't appear in the response.</p> <p>If a response doesn't include the last of the configurations, you can get more configurations by submitting another <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ListResolverDnssecConfigs.html\">ListResolverDnssecConfigs</a> request. Get the value of <code>NextToken</code> that Amazon Route 53 returned in the previous response and include it in <code>NextToken</code> in the next request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>If a response includes the last of the DNSSEC configurations that are associated with the current AWS account, <code>NextToken</code> doesn't appear in the response.</p> <p>If a response doesn't include the last of the configurations, you can get more configurations by submitting another <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ListResolverDnssecConfigs.html\">ListResolverDnssecConfigs</a> request. Get the value of <code>NextToken</code> that Amazon Route 53 returned in the previous response and include it in <code>NextToken</code> in the next request.</p>\n@return If a response includes the last of the DNSSEC configurations that are associated with the current AWS account, <code>NextToken</code> doesn't appear in the response.</p> <p>If a response doesn't include the last of the configurations, you can get more configurations by submitting another <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ListResolverDnssecConfigs.html\">ListResolverDnssecConfigs</a> request. Get the value of <code>NextToken</code> that Amazon Route 53 returned in the previous response and include it in <code>NextToken</code> in the next request.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>If a response includes the last of the DNSSEC configurations that are associated with the current AWS account, <code>NextToken</code> doesn't appear in the response.</p> <p>If a response doesn't include the last of the configurations, you can get more configurations by submitting another <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ListResolverDnssecConfigs.html\">ListResolverDnssecConfigs</a> request. Get the value of <code>NextToken</code> that Amazon Route 53 returned in the previous response and include it in <code>NextToken</code> in the next request.</p>\n@param nextToken If a response includes the last of the DNSSEC configurations that are associated with the current AWS account, <code>NextToken</code> doesn't appear in the response.</p> <p>If a response doesn't include the last of the configurations, you can get more configurations by submitting another <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ListResolverDnssecConfigs.html\">ListResolverDnssecConfigs</a> request. Get the value of <code>NextToken</code> that Amazon Route 53 returned in the previous response and include it in <code>NextToken</code> in the next request.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>If a response includes the last of the DNSSEC configurations that are associated with the current AWS account, <code>NextToken</code> doesn't appear in the response.</p> <p>If a response doesn't include the last of the configurations, you can get more configurations by submitting another <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ListResolverDnssecConfigs.html\">ListResolverDnssecConfigs</a> request. Get the value of <code>NextToken</code> that Amazon Route 53 returned in the previous response and include it in <code>NextToken</code> in the next request.</p>\n@param nextToken If a response includes the last of the DNSSEC configurations that are associated with the current AWS account, <code>NextToken</code> doesn't appear in the response.</p> <p>If a response doesn't include the last of the configurations, you can get more configurations by submitting another <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ListResolverDnssecConfigs.html\">ListResolverDnssecConfigs</a> request. Get the value of <code>NextToken</code> that Amazon Route 53 returned in the previous response and include it in <code>NextToken</code> in the next request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>If a response includes the last of the DNSSEC configurations that are associated with the current AWS account, <code>NextToken</code> doesn't appear in the response.</p> <p>If a response doesn't include the last of the configurations, you can get more configurations by submitting another <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ListResolverDnssecConfigs.html\">ListResolverDnssecConfigs</a> request. Get the value of <code>NextToken</code> that Amazon Route 53 returned in the previous response and include it in <code>NextToken</code> in the next request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResolverDnssecConfigs" : {
          "c2jName" : "ResolverDnssecConfigs",
          "c2jShape" : "ResolverDnssecConfigList",
          "deprecated" : false,
          "documentation" : "<p>An array that contains one <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ResolverDnssecConfig.html\">ResolverDnssecConfig</a> element for each configuration for DNSSEC validation that is associated with the current AWS account.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An array that contains one <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ResolverDnssecConfig.html\">ResolverDnssecConfig</a> element for each configuration for DNSSEC validation that is associated with the current AWS account.</p>\n@param resolverDnssecConfigs An array that contains one <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ResolverDnssecConfig.html\">ResolverDnssecConfig</a> element for each configuration for DNSSEC validation that is associated with the current AWS account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverDnssecConfigs",
          "getterDocumentation" : "/**<p>An array that contains one <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ResolverDnssecConfig.html\">ResolverDnssecConfig</a> element for each configuration for DNSSEC validation that is associated with the current AWS account.</p>\n@return An array that contains one <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ResolverDnssecConfig.html\">ResolverDnssecConfig</a> element for each configuration for DNSSEC validation that is associated with the current AWS account.*/",
          "getterMethodName" : "getResolverDnssecConfigs",
          "getterModel" : {
            "returnType" : "java.util.List<ResolverDnssecConfig>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverDnssecConfigs",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverDnssecConfigs",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ResolverDnssecConfig",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "ResolverDnssecConfig",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ResolverDnssecConfig",
                "variableName" : "member",
                "variableType" : "ResolverDnssecConfig",
                "documentation" : "",
                "simpleType" : "ResolverDnssecConfig",
                "variableSetterType" : "ResolverDnssecConfig"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ResolverDnssecConfig",
                "variableName" : "member",
                "variableType" : "ResolverDnssecConfig",
                "documentation" : "",
                "simpleType" : "ResolverDnssecConfig",
                "variableSetterType" : "ResolverDnssecConfig"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "ResolverDnssecConfig",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "ResolverDnssecConfig",
            "templateImplType" : "java.util.ArrayList<ResolverDnssecConfig>",
            "templateType" : "java.util.List<ResolverDnssecConfig>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "ResolverDnssecConfigs",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>An array that contains one <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ResolverDnssecConfig.html\">ResolverDnssecConfig</a> element for each configuration for DNSSEC validation that is associated with the current AWS account.</p>\n@param resolverDnssecConfigs An array that contains one <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ResolverDnssecConfig.html\">ResolverDnssecConfig</a> element for each configuration for DNSSEC validation that is associated with the current AWS account.*/",
          "setterMethodName" : "setResolverDnssecConfigs",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ResolverDnssecConfig>",
            "variableName" : "resolverDnssecConfigs",
            "variableType" : "java.util.List<ResolverDnssecConfig>",
            "documentation" : "",
            "simpleType" : "List<ResolverDnssecConfig>",
            "variableSetterType" : "java.util.Collection<ResolverDnssecConfig>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An array that contains one <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ResolverDnssecConfig.html\">ResolverDnssecConfig</a> element for each configuration for DNSSEC validation that is associated with the current AWS account.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setResolverDnssecConfigs(java.util.Collection)} or {@link #withResolverDnssecConfigs(java.util.Collection)} if you want to override the existing values.</p>\n@param resolverDnssecConfigs An array that contains one <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ResolverDnssecConfig.html\">ResolverDnssecConfig</a> element for each configuration for DNSSEC validation that is associated with the current AWS account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ResolverDnssecConfig>",
            "variableName" : "resolverDnssecConfigs",
            "variableType" : "java.util.List<ResolverDnssecConfig>",
            "documentation" : "<p>An array that contains one <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ResolverDnssecConfig.html\">ResolverDnssecConfig</a> element for each configuration for DNSSEC validation that is associated with the current AWS account.</p>",
            "simpleType" : "List<ResolverDnssecConfig>",
            "variableSetterType" : "java.util.Collection<ResolverDnssecConfig>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListResolverDnssecConfigsResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListResolverDnssecConfigsResult",
        "variableName" : "listResolverDnssecConfigsResult",
        "variableType" : "ListResolverDnssecConfigsResult",
        "documentation" : null,
        "simpleType" : "ListResolverDnssecConfigsResult",
        "variableSetterType" : "ListResolverDnssecConfigsResult"
      },
      "wrapper" : false
    },
    "ListResolverEndpointIpAddressesRequest" : {
      "c2jName" : "ListResolverEndpointIpAddressesRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.request.ListResolverEndpointIpAddressesRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListResolverEndpointIpAddresses",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.ListResolverEndpointIpAddresses",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResolverEndpointId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the Resolver endpoint that you want to get IP addresses for.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to get IP addresses for.</p>\n@param resolverEndpointId The ID of the Resolver endpoint that you want to get IP addresses for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverEndpointId",
        "getterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to get IP addresses for.</p>\n@return The ID of the Resolver endpoint that you want to get IP addresses for.*/",
        "getterMethodName" : "getResolverEndpointId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverEndpointId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverEndpointId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverEndpointId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to get IP addresses for.</p>\n@param resolverEndpointId The ID of the Resolver endpoint that you want to get IP addresses for.*/",
        "setterMethodName" : "setResolverEndpointId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverEndpointId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to get IP addresses for.</p>\n@param resolverEndpointId The ID of the Resolver endpoint that you want to get IP addresses for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverEndpointId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the Resolver endpoint that you want to get IP addresses for.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MaxResults",
        "c2jShape" : "MaxResults",
        "deprecated" : false,
        "documentation" : "<p>The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses. </p>\n@param maxResults The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses. </p>\n@return The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses. </p>\n@param maxResults The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses. </p>\n@param maxResults The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses. </p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified Resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified Resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified Resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified Resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified Resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified Resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified Resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified Resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified Resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified Resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "MaxResults",
          "deprecated" : false,
          "documentation" : "<p>The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses. </p>\n@param maxResults The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses. </p>\n@return The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses. </p>\n@param maxResults The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses. </p>\n@param maxResults The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses. </p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified Resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified Resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified Resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified Resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified Resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified Resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified Resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified Resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified Resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified Resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResolverEndpointId" : {
          "c2jName" : "ResolverEndpointId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the Resolver endpoint that you want to get IP addresses for.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to get IP addresses for.</p>\n@param resolverEndpointId The ID of the Resolver endpoint that you want to get IP addresses for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverEndpointId",
          "getterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to get IP addresses for.</p>\n@return The ID of the Resolver endpoint that you want to get IP addresses for.*/",
          "getterMethodName" : "getResolverEndpointId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverEndpointId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverEndpointId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverEndpointId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to get IP addresses for.</p>\n@param resolverEndpointId The ID of the Resolver endpoint that you want to get IP addresses for.*/",
          "setterMethodName" : "setResolverEndpointId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverEndpointId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to get IP addresses for.</p>\n@param resolverEndpointId The ID of the Resolver endpoint that you want to get IP addresses for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverEndpointId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the Resolver endpoint that you want to get IP addresses for.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResolverEndpointId" ],
      "shapeName" : "ListResolverEndpointIpAddressesRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListResolverEndpointIpAddressesRequest",
        "variableName" : "listResolverEndpointIpAddressesRequest",
        "variableType" : "ListResolverEndpointIpAddressesRequest",
        "documentation" : null,
        "simpleType" : "ListResolverEndpointIpAddressesRequest",
        "variableSetterType" : "ListResolverEndpointIpAddressesRequest"
      },
      "wrapper" : false
    },
    "ListResolverEndpointIpAddressesResult" : {
      "c2jName" : "ListResolverEndpointIpAddressesResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.response.ListResolverEndpointIpAddressesResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MaxResults",
        "c2jShape" : "MaxResults",
        "deprecated" : false,
        "documentation" : "<p>The value that you specified for <code>MaxResults</code> in the request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@return The value that you specified for <code>MaxResults</code> in the request.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>The value that you specified for <code>MaxResults</code> in the request.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "IpAddresses",
        "c2jShape" : "IpAddressesResponse",
        "deprecated" : false,
        "documentation" : "<p>Information about the IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints).</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints).</p>\n@param ipAddresses Information about the IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withIpAddresses",
        "getterDocumentation" : "/**<p>Information about the IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints).</p>\n@return Information about the IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints).*/",
        "getterMethodName" : "getIpAddresses",
        "getterModel" : {
          "returnType" : "java.util.List<IpAddressResponse>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "IpAddresses",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "IpAddresses",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "IpAddressResponse",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "IpAddressResponse",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "IpAddressResponse",
              "variableName" : "member",
              "variableType" : "IpAddressResponse",
              "documentation" : "",
              "simpleType" : "IpAddressResponse",
              "variableSetterType" : "IpAddressResponse"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "IpAddressResponse",
              "variableName" : "member",
              "variableType" : "IpAddressResponse",
              "documentation" : "",
              "simpleType" : "IpAddressResponse",
              "variableSetterType" : "IpAddressResponse"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "IpAddressResponse",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "IpAddressResponse",
          "templateImplType" : "java.util.ArrayList<IpAddressResponse>",
          "templateType" : "java.util.List<IpAddressResponse>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "IpAddresses",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Information about the IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints).</p>\n@param ipAddresses Information about the IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints).*/",
        "setterMethodName" : "setIpAddresses",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<IpAddressResponse>",
          "variableName" : "ipAddresses",
          "variableType" : "java.util.List<IpAddressResponse>",
          "documentation" : "",
          "simpleType" : "List<IpAddressResponse>",
          "variableSetterType" : "java.util.Collection<IpAddressResponse>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints).</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setIpAddresses(java.util.Collection)} or {@link #withIpAddresses(java.util.Collection)} if you want to override the existing values.</p>\n@param ipAddresses Information about the IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<IpAddressResponse>",
          "variableName" : "ipAddresses",
          "variableType" : "java.util.List<IpAddressResponse>",
          "documentation" : "<p>Information about the IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints).</p>",
          "simpleType" : "List<IpAddressResponse>",
          "variableSetterType" : "java.util.Collection<IpAddressResponse>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "IpAddresses" : {
          "c2jName" : "IpAddresses",
          "c2jShape" : "IpAddressesResponse",
          "deprecated" : false,
          "documentation" : "<p>Information about the IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints).</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints).</p>\n@param ipAddresses Information about the IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withIpAddresses",
          "getterDocumentation" : "/**<p>Information about the IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints).</p>\n@return Information about the IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints).*/",
          "getterMethodName" : "getIpAddresses",
          "getterModel" : {
            "returnType" : "java.util.List<IpAddressResponse>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "IpAddresses",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "IpAddresses",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "IpAddressResponse",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "IpAddressResponse",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "IpAddressResponse",
                "variableName" : "member",
                "variableType" : "IpAddressResponse",
                "documentation" : "",
                "simpleType" : "IpAddressResponse",
                "variableSetterType" : "IpAddressResponse"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "IpAddressResponse",
                "variableName" : "member",
                "variableType" : "IpAddressResponse",
                "documentation" : "",
                "simpleType" : "IpAddressResponse",
                "variableSetterType" : "IpAddressResponse"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "IpAddressResponse",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "IpAddressResponse",
            "templateImplType" : "java.util.ArrayList<IpAddressResponse>",
            "templateType" : "java.util.List<IpAddressResponse>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "IpAddresses",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Information about the IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints).</p>\n@param ipAddresses Information about the IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints).*/",
          "setterMethodName" : "setIpAddresses",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<IpAddressResponse>",
            "variableName" : "ipAddresses",
            "variableType" : "java.util.List<IpAddressResponse>",
            "documentation" : "",
            "simpleType" : "List<IpAddressResponse>",
            "variableSetterType" : "java.util.Collection<IpAddressResponse>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints).</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setIpAddresses(java.util.Collection)} or {@link #withIpAddresses(java.util.Collection)} if you want to override the existing values.</p>\n@param ipAddresses Information about the IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<IpAddressResponse>",
            "variableName" : "ipAddresses",
            "variableType" : "java.util.List<IpAddressResponse>",
            "documentation" : "<p>Information about the IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints).</p>",
            "simpleType" : "List<IpAddressResponse>",
            "variableSetterType" : "java.util.Collection<IpAddressResponse>"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "MaxResults",
          "deprecated" : false,
          "documentation" : "<p>The value that you specified for <code>MaxResults</code> in the request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@return The value that you specified for <code>MaxResults</code> in the request.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>The value that you specified for <code>MaxResults</code> in the request.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListResolverEndpointIpAddressesResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListResolverEndpointIpAddressesResult",
        "variableName" : "listResolverEndpointIpAddressesResult",
        "variableType" : "ListResolverEndpointIpAddressesResult",
        "documentation" : null,
        "simpleType" : "ListResolverEndpointIpAddressesResult",
        "variableSetterType" : "ListResolverEndpointIpAddressesResult"
      },
      "wrapper" : false
    },
    "ListResolverEndpointsRequest" : {
      "c2jName" : "ListResolverEndpointsRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.request.ListResolverEndpointsRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListResolverEndpoints",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.ListResolverEndpoints",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "MaxResults",
        "c2jShape" : "MaxResults",
        "deprecated" : false,
        "documentation" : "<p>The maximum number of Resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver endpoints. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The maximum number of Resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver endpoints. </p>\n@param maxResults The maximum number of Resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver endpoints.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>The maximum number of Resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver endpoints. </p>\n@return The maximum number of Resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver endpoints.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The maximum number of Resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver endpoints. </p>\n@param maxResults The maximum number of Resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver endpoints.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The maximum number of Resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver endpoints. </p>\n@param maxResults The maximum number of Resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver endpoints.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>The maximum number of Resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver endpoints. </p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of Resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of Resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of Resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of Resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of Resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of Resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of Resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of Resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of Resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of Resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Filters",
        "c2jShape" : "Filters",
        "deprecated" : false,
        "documentation" : "<p>An optional specification to return a subset of Resolver endpoints, such as all inbound Resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An optional specification to return a subset of Resolver endpoints, such as all inbound Resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@param filters An optional specification to return a subset of Resolver endpoints, such as all inbound Resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFilters",
        "getterDocumentation" : "/**<p>An optional specification to return a subset of Resolver endpoints, such as all inbound Resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@return An optional specification to return a subset of Resolver endpoints, such as all inbound Resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>*/",
        "getterMethodName" : "getFilters",
        "getterModel" : {
          "returnType" : "java.util.List<Filter>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Filters",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Filters",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Filter",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Filter",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Filter",
              "variableName" : "member",
              "variableType" : "Filter",
              "documentation" : "",
              "simpleType" : "Filter",
              "variableSetterType" : "Filter"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Filter",
              "variableName" : "member",
              "variableType" : "Filter",
              "documentation" : "",
              "simpleType" : "Filter",
              "variableSetterType" : "Filter"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Filter",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Filter",
          "templateImplType" : "java.util.ArrayList<Filter>",
          "templateType" : "java.util.List<Filter>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Filters",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>An optional specification to return a subset of Resolver endpoints, such as all inbound Resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@param filters An optional specification to return a subset of Resolver endpoints, such as all inbound Resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>*/",
        "setterMethodName" : "setFilters",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Filter>",
          "variableName" : "filters",
          "variableType" : "java.util.List<Filter>",
          "documentation" : "",
          "simpleType" : "List<Filter>",
          "variableSetterType" : "java.util.Collection<Filter>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An optional specification to return a subset of Resolver endpoints, such as all inbound Resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFilters(java.util.Collection)} or {@link #withFilters(java.util.Collection)} if you want to override the existing values.</p>\n@param filters An optional specification to return a subset of Resolver endpoints, such as all inbound Resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Filter>",
          "variableName" : "filters",
          "variableType" : "java.util.List<Filter>",
          "documentation" : "<p>An optional specification to return a subset of Resolver endpoints, such as all inbound Resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>",
          "simpleType" : "List<Filter>",
          "variableSetterType" : "java.util.Collection<Filter>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Filters" : {
          "c2jName" : "Filters",
          "c2jShape" : "Filters",
          "deprecated" : false,
          "documentation" : "<p>An optional specification to return a subset of Resolver endpoints, such as all inbound Resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An optional specification to return a subset of Resolver endpoints, such as all inbound Resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@param filters An optional specification to return a subset of Resolver endpoints, such as all inbound Resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFilters",
          "getterDocumentation" : "/**<p>An optional specification to return a subset of Resolver endpoints, such as all inbound Resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@return An optional specification to return a subset of Resolver endpoints, such as all inbound Resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>*/",
          "getterMethodName" : "getFilters",
          "getterModel" : {
            "returnType" : "java.util.List<Filter>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Filters",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Filters",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Filter",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Filter",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Filter",
                "variableName" : "member",
                "variableType" : "Filter",
                "documentation" : "",
                "simpleType" : "Filter",
                "variableSetterType" : "Filter"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Filter",
                "variableName" : "member",
                "variableType" : "Filter",
                "documentation" : "",
                "simpleType" : "Filter",
                "variableSetterType" : "Filter"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Filter",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Filter",
            "templateImplType" : "java.util.ArrayList<Filter>",
            "templateType" : "java.util.List<Filter>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Filters",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>An optional specification to return a subset of Resolver endpoints, such as all inbound Resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@param filters An optional specification to return a subset of Resolver endpoints, such as all inbound Resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>*/",
          "setterMethodName" : "setFilters",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Filter>",
            "variableName" : "filters",
            "variableType" : "java.util.List<Filter>",
            "documentation" : "",
            "simpleType" : "List<Filter>",
            "variableSetterType" : "java.util.Collection<Filter>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An optional specification to return a subset of Resolver endpoints, such as all inbound Resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFilters(java.util.Collection)} or {@link #withFilters(java.util.Collection)} if you want to override the existing values.</p>\n@param filters An optional specification to return a subset of Resolver endpoints, such as all inbound Resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Filter>",
            "variableName" : "filters",
            "variableType" : "java.util.List<Filter>",
            "documentation" : "<p>An optional specification to return a subset of Resolver endpoints, such as all inbound Resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>",
            "simpleType" : "List<Filter>",
            "variableSetterType" : "java.util.Collection<Filter>"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "MaxResults",
          "deprecated" : false,
          "documentation" : "<p>The maximum number of Resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver endpoints. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The maximum number of Resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver endpoints. </p>\n@param maxResults The maximum number of Resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver endpoints.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>The maximum number of Resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver endpoints. </p>\n@return The maximum number of Resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver endpoints.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The maximum number of Resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver endpoints. </p>\n@param maxResults The maximum number of Resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver endpoints.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The maximum number of Resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver endpoints. </p>\n@param maxResults The maximum number of Resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver endpoints.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>The maximum number of Resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver endpoints. </p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of Resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of Resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of Resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of Resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of Resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of Resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of Resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of Resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of Resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of Resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListResolverEndpointsRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListResolverEndpointsRequest",
        "variableName" : "listResolverEndpointsRequest",
        "variableType" : "ListResolverEndpointsRequest",
        "documentation" : null,
        "simpleType" : "ListResolverEndpointsRequest",
        "variableSetterType" : "ListResolverEndpointsRequest"
      },
      "wrapper" : false
    },
    "ListResolverEndpointsResult" : {
      "c2jName" : "ListResolverEndpointsResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.response.ListResolverEndpointsResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MaxResults",
        "c2jShape" : "MaxResults",
        "deprecated" : false,
        "documentation" : "<p>The value that you specified for <code>MaxResults</code> in the request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@return The value that you specified for <code>MaxResults</code> in the request.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>The value that you specified for <code>MaxResults</code> in the request.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ResolverEndpoints",
        "c2jShape" : "ResolverEndpoints",
        "deprecated" : false,
        "documentation" : "<p>The Resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The Resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.</p>\n@param resolverEndpoints The Resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverEndpoints",
        "getterDocumentation" : "/**<p>The Resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.</p>\n@return The Resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.*/",
        "getterMethodName" : "getResolverEndpoints",
        "getterModel" : {
          "returnType" : "java.util.List<ResolverEndpoint>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverEndpoints",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverEndpoints",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ResolverEndpoint",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "ResolverEndpoint",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ResolverEndpoint",
              "variableName" : "member",
              "variableType" : "ResolverEndpoint",
              "documentation" : "",
              "simpleType" : "ResolverEndpoint",
              "variableSetterType" : "ResolverEndpoint"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ResolverEndpoint",
              "variableName" : "member",
              "variableType" : "ResolverEndpoint",
              "documentation" : "",
              "simpleType" : "ResolverEndpoint",
              "variableSetterType" : "ResolverEndpoint"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "ResolverEndpoint",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "ResolverEndpoint",
          "templateImplType" : "java.util.ArrayList<ResolverEndpoint>",
          "templateType" : "java.util.List<ResolverEndpoint>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "ResolverEndpoints",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The Resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.</p>\n@param resolverEndpoints The Resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.*/",
        "setterMethodName" : "setResolverEndpoints",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ResolverEndpoint>",
          "variableName" : "resolverEndpoints",
          "variableType" : "java.util.List<ResolverEndpoint>",
          "documentation" : "",
          "simpleType" : "List<ResolverEndpoint>",
          "variableSetterType" : "java.util.Collection<ResolverEndpoint>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The Resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setResolverEndpoints(java.util.Collection)} or {@link #withResolverEndpoints(java.util.Collection)} if you want to override the existing values.</p>\n@param resolverEndpoints The Resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ResolverEndpoint>",
          "variableName" : "resolverEndpoints",
          "variableType" : "java.util.List<ResolverEndpoint>",
          "documentation" : "<p>The Resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.</p>",
          "simpleType" : "List<ResolverEndpoint>",
          "variableSetterType" : "java.util.Collection<ResolverEndpoint>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "MaxResults",
          "deprecated" : false,
          "documentation" : "<p>The value that you specified for <code>MaxResults</code> in the request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@return The value that you specified for <code>MaxResults</code> in the request.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>The value that you specified for <code>MaxResults</code> in the request.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResolverEndpoints" : {
          "c2jName" : "ResolverEndpoints",
          "c2jShape" : "ResolverEndpoints",
          "deprecated" : false,
          "documentation" : "<p>The Resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The Resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.</p>\n@param resolverEndpoints The Resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverEndpoints",
          "getterDocumentation" : "/**<p>The Resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.</p>\n@return The Resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.*/",
          "getterMethodName" : "getResolverEndpoints",
          "getterModel" : {
            "returnType" : "java.util.List<ResolverEndpoint>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverEndpoints",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverEndpoints",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ResolverEndpoint",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "ResolverEndpoint",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ResolverEndpoint",
                "variableName" : "member",
                "variableType" : "ResolverEndpoint",
                "documentation" : "",
                "simpleType" : "ResolverEndpoint",
                "variableSetterType" : "ResolverEndpoint"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ResolverEndpoint",
                "variableName" : "member",
                "variableType" : "ResolverEndpoint",
                "documentation" : "",
                "simpleType" : "ResolverEndpoint",
                "variableSetterType" : "ResolverEndpoint"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "ResolverEndpoint",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "ResolverEndpoint",
            "templateImplType" : "java.util.ArrayList<ResolverEndpoint>",
            "templateType" : "java.util.List<ResolverEndpoint>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "ResolverEndpoints",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The Resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.</p>\n@param resolverEndpoints The Resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.*/",
          "setterMethodName" : "setResolverEndpoints",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ResolverEndpoint>",
            "variableName" : "resolverEndpoints",
            "variableType" : "java.util.List<ResolverEndpoint>",
            "documentation" : "",
            "simpleType" : "List<ResolverEndpoint>",
            "variableSetterType" : "java.util.Collection<ResolverEndpoint>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The Resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setResolverEndpoints(java.util.Collection)} or {@link #withResolverEndpoints(java.util.Collection)} if you want to override the existing values.</p>\n@param resolverEndpoints The Resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ResolverEndpoint>",
            "variableName" : "resolverEndpoints",
            "variableType" : "java.util.List<ResolverEndpoint>",
            "documentation" : "<p>The Resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.</p>",
            "simpleType" : "List<ResolverEndpoint>",
            "variableSetterType" : "java.util.Collection<ResolverEndpoint>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListResolverEndpointsResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListResolverEndpointsResult",
        "variableName" : "listResolverEndpointsResult",
        "variableType" : "ListResolverEndpointsResult",
        "documentation" : null,
        "simpleType" : "ListResolverEndpointsResult",
        "variableSetterType" : "ListResolverEndpointsResult"
      },
      "wrapper" : false
    },
    "ListResolverQueryLogConfigAssociationsRequest" : {
      "c2jName" : "ListResolverQueryLogConfigAssociationsRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.request.ListResolverQueryLogConfigAssociationsRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListResolverQueryLogConfigAssociations",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.ListResolverQueryLogConfigAssociations",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "MaxResults",
        "c2jShape" : "MaxResults",
        "deprecated" : false,
        "documentation" : "<p>The maximum number of query logging associations that you want to return in the response to a <code>ListResolverQueryLogConfigAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging associations. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The maximum number of query logging associations that you want to return in the response to a <code>ListResolverQueryLogConfigAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging associations. </p>\n@param maxResults The maximum number of query logging associations that you want to return in the response to a <code>ListResolverQueryLogConfigAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging associations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>The maximum number of query logging associations that you want to return in the response to a <code>ListResolverQueryLogConfigAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging associations. </p>\n@return The maximum number of query logging associations that you want to return in the response to a <code>ListResolverQueryLogConfigAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging associations.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The maximum number of query logging associations that you want to return in the response to a <code>ListResolverQueryLogConfigAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging associations. </p>\n@param maxResults The maximum number of query logging associations that you want to return in the response to a <code>ListResolverQueryLogConfigAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging associations.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The maximum number of query logging associations that you want to return in the response to a <code>ListResolverQueryLogConfigAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging associations. </p>\n@param maxResults The maximum number of query logging associations that you want to return in the response to a <code>ListResolverQueryLogConfigAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging associations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>The maximum number of query logging associations that you want to return in the response to a <code>ListResolverQueryLogConfigAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging associations. </p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>For the first <code>ListResolverQueryLogConfigAssociations</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging associations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>For the first <code>ListResolverQueryLogConfigAssociations</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging associations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverQueryLogConfigAssociations</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging associations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>For the first <code>ListResolverQueryLogConfigAssociations</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging associations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return For the first <code>ListResolverQueryLogConfigAssociations</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging associations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>For the first <code>ListResolverQueryLogConfigAssociations</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging associations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverQueryLogConfigAssociations</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging associations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>For the first <code>ListResolverQueryLogConfigAssociations</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging associations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverQueryLogConfigAssociations</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging associations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>For the first <code>ListResolverQueryLogConfigAssociations</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging associations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Filters",
        "c2jShape" : "Filters",
        "deprecated" : false,
        "documentation" : "<p>An optional specification to return a subset of query logging associations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An optional specification to return a subset of query logging associations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@param filters An optional specification to return a subset of query logging associations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFilters",
        "getterDocumentation" : "/**<p>An optional specification to return a subset of query logging associations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@return An optional specification to return a subset of query logging associations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>*/",
        "getterMethodName" : "getFilters",
        "getterModel" : {
          "returnType" : "java.util.List<Filter>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Filters",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Filters",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Filter",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Filter",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Filter",
              "variableName" : "member",
              "variableType" : "Filter",
              "documentation" : "",
              "simpleType" : "Filter",
              "variableSetterType" : "Filter"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Filter",
              "variableName" : "member",
              "variableType" : "Filter",
              "documentation" : "",
              "simpleType" : "Filter",
              "variableSetterType" : "Filter"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Filter",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Filter",
          "templateImplType" : "java.util.ArrayList<Filter>",
          "templateType" : "java.util.List<Filter>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Filters",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>An optional specification to return a subset of query logging associations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@param filters An optional specification to return a subset of query logging associations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>*/",
        "setterMethodName" : "setFilters",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Filter>",
          "variableName" : "filters",
          "variableType" : "java.util.List<Filter>",
          "documentation" : "",
          "simpleType" : "List<Filter>",
          "variableSetterType" : "java.util.Collection<Filter>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An optional specification to return a subset of query logging associations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFilters(java.util.Collection)} or {@link #withFilters(java.util.Collection)} if you want to override the existing values.</p>\n@param filters An optional specification to return a subset of query logging associations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Filter>",
          "variableName" : "filters",
          "variableType" : "java.util.List<Filter>",
          "documentation" : "<p>An optional specification to return a subset of query logging associations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>",
          "simpleType" : "List<Filter>",
          "variableSetterType" : "java.util.Collection<Filter>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "SortBy",
        "c2jShape" : "SortByKey",
        "deprecated" : false,
        "documentation" : "<p>The element that you want Resolver to sort query logging associations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>CreationTime</code>: The ID of the query logging association.</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause: </p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If <code>Status</code> is a value other than <code>FAILED</code>, <code>ERROR</code> is null.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>ResourceId</code>: The ID of the VPC that is associated with the query logging configuration</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li> </ul>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The element that you want Resolver to sort query logging associations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>CreationTime</code>: The ID of the query logging association.</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause: </p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If <code>Status</code> is a value other than <code>FAILED</code>, <code>ERROR</code> is null.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>ResourceId</code>: The ID of the VPC that is associated with the query logging configuration</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li> </ul>\n@param sortBy The element that you want Resolver to sort query logging associations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>CreationTime</code>: The ID of the query logging association.</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause: </p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If <code>Status</code> is a value other than <code>FAILED</code>, <code>ERROR</code> is null.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>ResourceId</code>: The ID of the VPC that is associated with the query logging configuration</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSortBy",
        "getterDocumentation" : "/**<p>The element that you want Resolver to sort query logging associations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>CreationTime</code>: The ID of the query logging association.</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause: </p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If <code>Status</code> is a value other than <code>FAILED</code>, <code>ERROR</code> is null.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>ResourceId</code>: The ID of the VPC that is associated with the query logging configuration</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li> </ul>\n@return The element that you want Resolver to sort query logging associations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>CreationTime</code>: The ID of the query logging association.</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause: </p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If <code>Status</code> is a value other than <code>FAILED</code>, <code>ERROR</code> is null.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>ResourceId</code>: The ID of the VPC that is associated with the query logging configuration</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li>*/",
        "getterMethodName" : "getSortBy",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SortBy",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SortBy",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SortBy",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The element that you want Resolver to sort query logging associations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>CreationTime</code>: The ID of the query logging association.</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause: </p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If <code>Status</code> is a value other than <code>FAILED</code>, <code>ERROR</code> is null.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>ResourceId</code>: The ID of the VPC that is associated with the query logging configuration</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li> </ul>\n@param sortBy The element that you want Resolver to sort query logging associations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>CreationTime</code>: The ID of the query logging association.</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause: </p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If <code>Status</code> is a value other than <code>FAILED</code>, <code>ERROR</code> is null.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>ResourceId</code>: The ID of the VPC that is associated with the query logging configuration</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li>*/",
        "setterMethodName" : "setSortBy",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sortBy",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The element that you want Resolver to sort query logging associations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>CreationTime</code>: The ID of the query logging association.</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause: </p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If <code>Status</code> is a value other than <code>FAILED</code>, <code>ERROR</code> is null.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>ResourceId</code>: The ID of the VPC that is associated with the query logging configuration</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li> </ul>\n@param sortBy The element that you want Resolver to sort query logging associations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>CreationTime</code>: The ID of the query logging association.</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause: </p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If <code>Status</code> is a value other than <code>FAILED</code>, <code>ERROR</code> is null.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>ResourceId</code>: The ID of the VPC that is associated with the query logging configuration</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sortBy",
          "variableType" : "String",
          "documentation" : "<p>The element that you want Resolver to sort query logging associations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>CreationTime</code>: The ID of the query logging association.</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause: </p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If <code>Status</code> is a value other than <code>FAILED</code>, <code>ERROR</code> is null.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>ResourceId</code>: The ID of the VPC that is associated with the query logging configuration</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li> </ul>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "SortOrder",
        "c2jShape" : "SortOrder",
        "deprecated" : false,
        "documentation" : "<p>If you specified a value for <code>SortBy</code>, the order that you want query logging associations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p> </note>",
        "endpointDiscoveryId" : false,
        "enumType" : "SortOrder",
        "fluentSetterDocumentation" : "/**<p>If you specified a value for <code>SortBy</code>, the order that you want query logging associations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p> </note>\n@param sortOrder If you specified a value for <code>SortBy</code>, the order that you want query logging associations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see SortOrder*/",
        "fluentSetterMethodName" : "withSortOrder",
        "getterDocumentation" : "/**<p>If you specified a value for <code>SortBy</code>, the order that you want query logging associations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p> </note>\n@return If you specified a value for <code>SortBy</code>, the order that you want query logging associations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p>\n@see SortOrder*/",
        "getterMethodName" : "getSortOrder",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SortOrder",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SortOrder",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SortOrder",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>If you specified a value for <code>SortBy</code>, the order that you want query logging associations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p> </note>\n@param sortOrder If you specified a value for <code>SortBy</code>, the order that you want query logging associations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p>\n@see SortOrder*/",
        "setterMethodName" : "setSortOrder",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sortOrder",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>If you specified a value for <code>SortBy</code>, the order that you want query logging associations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p> </note>\n@param sortOrder If you specified a value for <code>SortBy</code>, the order that you want query logging associations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see SortOrder*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sortOrder",
          "variableType" : "String",
          "documentation" : "<p>If you specified a value for <code>SortBy</code>, the order that you want query logging associations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p> </note>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Filters" : {
          "c2jName" : "Filters",
          "c2jShape" : "Filters",
          "deprecated" : false,
          "documentation" : "<p>An optional specification to return a subset of query logging associations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An optional specification to return a subset of query logging associations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@param filters An optional specification to return a subset of query logging associations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFilters",
          "getterDocumentation" : "/**<p>An optional specification to return a subset of query logging associations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@return An optional specification to return a subset of query logging associations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>*/",
          "getterMethodName" : "getFilters",
          "getterModel" : {
            "returnType" : "java.util.List<Filter>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Filters",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Filters",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Filter",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Filter",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Filter",
                "variableName" : "member",
                "variableType" : "Filter",
                "documentation" : "",
                "simpleType" : "Filter",
                "variableSetterType" : "Filter"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Filter",
                "variableName" : "member",
                "variableType" : "Filter",
                "documentation" : "",
                "simpleType" : "Filter",
                "variableSetterType" : "Filter"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Filter",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Filter",
            "templateImplType" : "java.util.ArrayList<Filter>",
            "templateType" : "java.util.List<Filter>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Filters",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>An optional specification to return a subset of query logging associations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@param filters An optional specification to return a subset of query logging associations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>*/",
          "setterMethodName" : "setFilters",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Filter>",
            "variableName" : "filters",
            "variableType" : "java.util.List<Filter>",
            "documentation" : "",
            "simpleType" : "List<Filter>",
            "variableSetterType" : "java.util.Collection<Filter>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An optional specification to return a subset of query logging associations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFilters(java.util.Collection)} or {@link #withFilters(java.util.Collection)} if you want to override the existing values.</p>\n@param filters An optional specification to return a subset of query logging associations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Filter>",
            "variableName" : "filters",
            "variableType" : "java.util.List<Filter>",
            "documentation" : "<p>An optional specification to return a subset of query logging associations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>",
            "simpleType" : "List<Filter>",
            "variableSetterType" : "java.util.Collection<Filter>"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "MaxResults",
          "deprecated" : false,
          "documentation" : "<p>The maximum number of query logging associations that you want to return in the response to a <code>ListResolverQueryLogConfigAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging associations. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The maximum number of query logging associations that you want to return in the response to a <code>ListResolverQueryLogConfigAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging associations. </p>\n@param maxResults The maximum number of query logging associations that you want to return in the response to a <code>ListResolverQueryLogConfigAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging associations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>The maximum number of query logging associations that you want to return in the response to a <code>ListResolverQueryLogConfigAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging associations. </p>\n@return The maximum number of query logging associations that you want to return in the response to a <code>ListResolverQueryLogConfigAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging associations.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The maximum number of query logging associations that you want to return in the response to a <code>ListResolverQueryLogConfigAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging associations. </p>\n@param maxResults The maximum number of query logging associations that you want to return in the response to a <code>ListResolverQueryLogConfigAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging associations.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The maximum number of query logging associations that you want to return in the response to a <code>ListResolverQueryLogConfigAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging associations. </p>\n@param maxResults The maximum number of query logging associations that you want to return in the response to a <code>ListResolverQueryLogConfigAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging associations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>The maximum number of query logging associations that you want to return in the response to a <code>ListResolverQueryLogConfigAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging associations. </p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>For the first <code>ListResolverQueryLogConfigAssociations</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging associations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>For the first <code>ListResolverQueryLogConfigAssociations</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging associations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverQueryLogConfigAssociations</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging associations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>For the first <code>ListResolverQueryLogConfigAssociations</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging associations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return For the first <code>ListResolverQueryLogConfigAssociations</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging associations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>For the first <code>ListResolverQueryLogConfigAssociations</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging associations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverQueryLogConfigAssociations</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging associations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>For the first <code>ListResolverQueryLogConfigAssociations</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging associations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverQueryLogConfigAssociations</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging associations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>For the first <code>ListResolverQueryLogConfigAssociations</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging associations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SortBy" : {
          "c2jName" : "SortBy",
          "c2jShape" : "SortByKey",
          "deprecated" : false,
          "documentation" : "<p>The element that you want Resolver to sort query logging associations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>CreationTime</code>: The ID of the query logging association.</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause: </p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If <code>Status</code> is a value other than <code>FAILED</code>, <code>ERROR</code> is null.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>ResourceId</code>: The ID of the VPC that is associated with the query logging configuration</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li> </ul>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The element that you want Resolver to sort query logging associations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>CreationTime</code>: The ID of the query logging association.</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause: </p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If <code>Status</code> is a value other than <code>FAILED</code>, <code>ERROR</code> is null.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>ResourceId</code>: The ID of the VPC that is associated with the query logging configuration</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li> </ul>\n@param sortBy The element that you want Resolver to sort query logging associations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>CreationTime</code>: The ID of the query logging association.</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause: </p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If <code>Status</code> is a value other than <code>FAILED</code>, <code>ERROR</code> is null.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>ResourceId</code>: The ID of the VPC that is associated with the query logging configuration</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSortBy",
          "getterDocumentation" : "/**<p>The element that you want Resolver to sort query logging associations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>CreationTime</code>: The ID of the query logging association.</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause: </p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If <code>Status</code> is a value other than <code>FAILED</code>, <code>ERROR</code> is null.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>ResourceId</code>: The ID of the VPC that is associated with the query logging configuration</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li> </ul>\n@return The element that you want Resolver to sort query logging associations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>CreationTime</code>: The ID of the query logging association.</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause: </p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If <code>Status</code> is a value other than <code>FAILED</code>, <code>ERROR</code> is null.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>ResourceId</code>: The ID of the VPC that is associated with the query logging configuration</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li>*/",
          "getterMethodName" : "getSortBy",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SortBy",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SortBy",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SortBy",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The element that you want Resolver to sort query logging associations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>CreationTime</code>: The ID of the query logging association.</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause: </p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If <code>Status</code> is a value other than <code>FAILED</code>, <code>ERROR</code> is null.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>ResourceId</code>: The ID of the VPC that is associated with the query logging configuration</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li> </ul>\n@param sortBy The element that you want Resolver to sort query logging associations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>CreationTime</code>: The ID of the query logging association.</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause: </p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If <code>Status</code> is a value other than <code>FAILED</code>, <code>ERROR</code> is null.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>ResourceId</code>: The ID of the VPC that is associated with the query logging configuration</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li>*/",
          "setterMethodName" : "setSortBy",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sortBy",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The element that you want Resolver to sort query logging associations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>CreationTime</code>: The ID of the query logging association.</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause: </p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If <code>Status</code> is a value other than <code>FAILED</code>, <code>ERROR</code> is null.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>ResourceId</code>: The ID of the VPC that is associated with the query logging configuration</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li> </ul>\n@param sortBy The element that you want Resolver to sort query logging associations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>CreationTime</code>: The ID of the query logging association.</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause: </p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If <code>Status</code> is a value other than <code>FAILED</code>, <code>ERROR</code> is null.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>ResourceId</code>: The ID of the VPC that is associated with the query logging configuration</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sortBy",
            "variableType" : "String",
            "documentation" : "<p>The element that you want Resolver to sort query logging associations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>CreationTime</code>: The ID of the query logging association.</p> </li> <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause: </p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If <code>Status</code> is a value other than <code>FAILED</code>, <code>ERROR</code> is null.</p> </li> <li> <p> <code>Id</code>: The ID of the query logging association</p> </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration</p> </li> <li> <p> <code>ResourceId</code>: The ID of the VPC that is associated with the query logging configuration</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li> </ul>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SortOrder" : {
          "c2jName" : "SortOrder",
          "c2jShape" : "SortOrder",
          "deprecated" : false,
          "documentation" : "<p>If you specified a value for <code>SortBy</code>, the order that you want query logging associations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p> </note>",
          "endpointDiscoveryId" : false,
          "enumType" : "SortOrder",
          "fluentSetterDocumentation" : "/**<p>If you specified a value for <code>SortBy</code>, the order that you want query logging associations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p> </note>\n@param sortOrder If you specified a value for <code>SortBy</code>, the order that you want query logging associations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see SortOrder*/",
          "fluentSetterMethodName" : "withSortOrder",
          "getterDocumentation" : "/**<p>If you specified a value for <code>SortBy</code>, the order that you want query logging associations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p> </note>\n@return If you specified a value for <code>SortBy</code>, the order that you want query logging associations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p>\n@see SortOrder*/",
          "getterMethodName" : "getSortOrder",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SortOrder",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SortOrder",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SortOrder",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>If you specified a value for <code>SortBy</code>, the order that you want query logging associations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p> </note>\n@param sortOrder If you specified a value for <code>SortBy</code>, the order that you want query logging associations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p>\n@see SortOrder*/",
          "setterMethodName" : "setSortOrder",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sortOrder",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>If you specified a value for <code>SortBy</code>, the order that you want query logging associations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p> </note>\n@param sortOrder If you specified a value for <code>SortBy</code>, the order that you want query logging associations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see SortOrder*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sortOrder",
            "variableType" : "String",
            "documentation" : "<p>If you specified a value for <code>SortBy</code>, the order that you want query logging associations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p> </note>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListResolverQueryLogConfigAssociationsRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListResolverQueryLogConfigAssociationsRequest",
        "variableName" : "listResolverQueryLogConfigAssociationsRequest",
        "variableType" : "ListResolverQueryLogConfigAssociationsRequest",
        "documentation" : null,
        "simpleType" : "ListResolverQueryLogConfigAssociationsRequest",
        "variableSetterType" : "ListResolverQueryLogConfigAssociationsRequest"
      },
      "wrapper" : false
    },
    "ListResolverQueryLogConfigAssociationsResult" : {
      "c2jName" : "ListResolverQueryLogConfigAssociationsResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.response.ListResolverQueryLogConfigAssociationsResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>If there are more than <code>MaxResults</code> query logging associations, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>If there are more than <code>MaxResults</code> query logging associations, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If there are more than <code>MaxResults</code> query logging associations, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>If there are more than <code>MaxResults</code> query logging associations, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return If there are more than <code>MaxResults</code> query logging associations, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>If there are more than <code>MaxResults</code> query logging associations, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If there are more than <code>MaxResults</code> query logging associations, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>If there are more than <code>MaxResults</code> query logging associations, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If there are more than <code>MaxResults</code> query logging associations, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>If there are more than <code>MaxResults</code> query logging associations, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "TotalCount",
        "c2jShape" : "Count",
        "deprecated" : false,
        "documentation" : "<p>The total number of query logging associations that were created by the current account in the specified Region. This count can differ from the number of associations that are returned in a <code>ListResolverQueryLogConfigAssociations</code> response, depending on the values that you specify in the request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The total number of query logging associations that were created by the current account in the specified Region. This count can differ from the number of associations that are returned in a <code>ListResolverQueryLogConfigAssociations</code> response, depending on the values that you specify in the request.</p>\n@param totalCount The total number of query logging associations that were created by the current account in the specified Region. This count can differ from the number of associations that are returned in a <code>ListResolverQueryLogConfigAssociations</code> response, depending on the values that you specify in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTotalCount",
        "getterDocumentation" : "/**<p>The total number of query logging associations that were created by the current account in the specified Region. This count can differ from the number of associations that are returned in a <code>ListResolverQueryLogConfigAssociations</code> response, depending on the values that you specify in the request.</p>\n@return The total number of query logging associations that were created by the current account in the specified Region. This count can differ from the number of associations that are returned in a <code>ListResolverQueryLogConfigAssociations</code> response, depending on the values that you specify in the request.*/",
        "getterMethodName" : "getTotalCount",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TotalCount",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TotalCount",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "TotalCount",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The total number of query logging associations that were created by the current account in the specified Region. This count can differ from the number of associations that are returned in a <code>ListResolverQueryLogConfigAssociations</code> response, depending on the values that you specify in the request.</p>\n@param totalCount The total number of query logging associations that were created by the current account in the specified Region. This count can differ from the number of associations that are returned in a <code>ListResolverQueryLogConfigAssociations</code> response, depending on the values that you specify in the request.*/",
        "setterMethodName" : "setTotalCount",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "totalCount",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The total number of query logging associations that were created by the current account in the specified Region. This count can differ from the number of associations that are returned in a <code>ListResolverQueryLogConfigAssociations</code> response, depending on the values that you specify in the request.</p>\n@param totalCount The total number of query logging associations that were created by the current account in the specified Region. This count can differ from the number of associations that are returned in a <code>ListResolverQueryLogConfigAssociations</code> response, depending on the values that you specify in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "totalCount",
          "variableType" : "Integer",
          "documentation" : "<p>The total number of query logging associations that were created by the current account in the specified Region. This count can differ from the number of associations that are returned in a <code>ListResolverQueryLogConfigAssociations</code> response, depending on the values that you specify in the request.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "TotalFilteredCount",
        "c2jShape" : "Count",
        "deprecated" : false,
        "documentation" : "<p>The total number of query logging associations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigAssociations</code> request. For the total number of associations that were created by the current account in the specified Region, see <code>TotalCount</code>.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The total number of query logging associations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigAssociations</code> request. For the total number of associations that were created by the current account in the specified Region, see <code>TotalCount</code>.</p>\n@param totalFilteredCount The total number of query logging associations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigAssociations</code> request. For the total number of associations that were created by the current account in the specified Region, see <code>TotalCount</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTotalFilteredCount",
        "getterDocumentation" : "/**<p>The total number of query logging associations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigAssociations</code> request. For the total number of associations that were created by the current account in the specified Region, see <code>TotalCount</code>.</p>\n@return The total number of query logging associations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigAssociations</code> request. For the total number of associations that were created by the current account in the specified Region, see <code>TotalCount</code>.*/",
        "getterMethodName" : "getTotalFilteredCount",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TotalFilteredCount",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TotalFilteredCount",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "TotalFilteredCount",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The total number of query logging associations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigAssociations</code> request. For the total number of associations that were created by the current account in the specified Region, see <code>TotalCount</code>.</p>\n@param totalFilteredCount The total number of query logging associations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigAssociations</code> request. For the total number of associations that were created by the current account in the specified Region, see <code>TotalCount</code>.*/",
        "setterMethodName" : "setTotalFilteredCount",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "totalFilteredCount",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The total number of query logging associations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigAssociations</code> request. For the total number of associations that were created by the current account in the specified Region, see <code>TotalCount</code>.</p>\n@param totalFilteredCount The total number of query logging associations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigAssociations</code> request. For the total number of associations that were created by the current account in the specified Region, see <code>TotalCount</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "totalFilteredCount",
          "variableType" : "Integer",
          "documentation" : "<p>The total number of query logging associations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigAssociations</code> request. For the total number of associations that were created by the current account in the specified Region, see <code>TotalCount</code>.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ResolverQueryLogConfigAssociations",
        "c2jShape" : "ResolverQueryLogConfigAssociationList",
        "deprecated" : false,
        "documentation" : "<p>A list that contains one <code>ResolverQueryLogConfigAssociations</code> element for each query logging association that matches the values that you specified for <code>Filter</code>.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A list that contains one <code>ResolverQueryLogConfigAssociations</code> element for each query logging association that matches the values that you specified for <code>Filter</code>.</p>\n@param resolverQueryLogConfigAssociations A list that contains one <code>ResolverQueryLogConfigAssociations</code> element for each query logging association that matches the values that you specified for <code>Filter</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverQueryLogConfigAssociations",
        "getterDocumentation" : "/**<p>A list that contains one <code>ResolverQueryLogConfigAssociations</code> element for each query logging association that matches the values that you specified for <code>Filter</code>.</p>\n@return A list that contains one <code>ResolverQueryLogConfigAssociations</code> element for each query logging association that matches the values that you specified for <code>Filter</code>.*/",
        "getterMethodName" : "getResolverQueryLogConfigAssociations",
        "getterModel" : {
          "returnType" : "java.util.List<ResolverQueryLogConfigAssociation>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverQueryLogConfigAssociations",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverQueryLogConfigAssociations",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ResolverQueryLogConfigAssociation",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "ResolverQueryLogConfigAssociation",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ResolverQueryLogConfigAssociation",
              "variableName" : "member",
              "variableType" : "ResolverQueryLogConfigAssociation",
              "documentation" : "",
              "simpleType" : "ResolverQueryLogConfigAssociation",
              "variableSetterType" : "ResolverQueryLogConfigAssociation"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ResolverQueryLogConfigAssociation",
              "variableName" : "member",
              "variableType" : "ResolverQueryLogConfigAssociation",
              "documentation" : "",
              "simpleType" : "ResolverQueryLogConfigAssociation",
              "variableSetterType" : "ResolverQueryLogConfigAssociation"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "ResolverQueryLogConfigAssociation",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "ResolverQueryLogConfigAssociation",
          "templateImplType" : "java.util.ArrayList<ResolverQueryLogConfigAssociation>",
          "templateType" : "java.util.List<ResolverQueryLogConfigAssociation>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "ResolverQueryLogConfigAssociations",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A list that contains one <code>ResolverQueryLogConfigAssociations</code> element for each query logging association that matches the values that you specified for <code>Filter</code>.</p>\n@param resolverQueryLogConfigAssociations A list that contains one <code>ResolverQueryLogConfigAssociations</code> element for each query logging association that matches the values that you specified for <code>Filter</code>.*/",
        "setterMethodName" : "setResolverQueryLogConfigAssociations",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ResolverQueryLogConfigAssociation>",
          "variableName" : "resolverQueryLogConfigAssociations",
          "variableType" : "java.util.List<ResolverQueryLogConfigAssociation>",
          "documentation" : "",
          "simpleType" : "List<ResolverQueryLogConfigAssociation>",
          "variableSetterType" : "java.util.Collection<ResolverQueryLogConfigAssociation>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A list that contains one <code>ResolverQueryLogConfigAssociations</code> element for each query logging association that matches the values that you specified for <code>Filter</code>.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setResolverQueryLogConfigAssociations(java.util.Collection)} or {@link #withResolverQueryLogConfigAssociations(java.util.Collection)} if you want to override the existing values.</p>\n@param resolverQueryLogConfigAssociations A list that contains one <code>ResolverQueryLogConfigAssociations</code> element for each query logging association that matches the values that you specified for <code>Filter</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ResolverQueryLogConfigAssociation>",
          "variableName" : "resolverQueryLogConfigAssociations",
          "variableType" : "java.util.List<ResolverQueryLogConfigAssociation>",
          "documentation" : "<p>A list that contains one <code>ResolverQueryLogConfigAssociations</code> element for each query logging association that matches the values that you specified for <code>Filter</code>.</p>",
          "simpleType" : "List<ResolverQueryLogConfigAssociation>",
          "variableSetterType" : "java.util.Collection<ResolverQueryLogConfigAssociation>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>If there are more than <code>MaxResults</code> query logging associations, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>If there are more than <code>MaxResults</code> query logging associations, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If there are more than <code>MaxResults</code> query logging associations, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>If there are more than <code>MaxResults</code> query logging associations, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return If there are more than <code>MaxResults</code> query logging associations, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>If there are more than <code>MaxResults</code> query logging associations, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If there are more than <code>MaxResults</code> query logging associations, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>If there are more than <code>MaxResults</code> query logging associations, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If there are more than <code>MaxResults</code> query logging associations, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>If there are more than <code>MaxResults</code> query logging associations, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResolverQueryLogConfigAssociations" : {
          "c2jName" : "ResolverQueryLogConfigAssociations",
          "c2jShape" : "ResolverQueryLogConfigAssociationList",
          "deprecated" : false,
          "documentation" : "<p>A list that contains one <code>ResolverQueryLogConfigAssociations</code> element for each query logging association that matches the values that you specified for <code>Filter</code>.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A list that contains one <code>ResolverQueryLogConfigAssociations</code> element for each query logging association that matches the values that you specified for <code>Filter</code>.</p>\n@param resolverQueryLogConfigAssociations A list that contains one <code>ResolverQueryLogConfigAssociations</code> element for each query logging association that matches the values that you specified for <code>Filter</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverQueryLogConfigAssociations",
          "getterDocumentation" : "/**<p>A list that contains one <code>ResolverQueryLogConfigAssociations</code> element for each query logging association that matches the values that you specified for <code>Filter</code>.</p>\n@return A list that contains one <code>ResolverQueryLogConfigAssociations</code> element for each query logging association that matches the values that you specified for <code>Filter</code>.*/",
          "getterMethodName" : "getResolverQueryLogConfigAssociations",
          "getterModel" : {
            "returnType" : "java.util.List<ResolverQueryLogConfigAssociation>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverQueryLogConfigAssociations",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverQueryLogConfigAssociations",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ResolverQueryLogConfigAssociation",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "ResolverQueryLogConfigAssociation",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ResolverQueryLogConfigAssociation",
                "variableName" : "member",
                "variableType" : "ResolverQueryLogConfigAssociation",
                "documentation" : "",
                "simpleType" : "ResolverQueryLogConfigAssociation",
                "variableSetterType" : "ResolverQueryLogConfigAssociation"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ResolverQueryLogConfigAssociation",
                "variableName" : "member",
                "variableType" : "ResolverQueryLogConfigAssociation",
                "documentation" : "",
                "simpleType" : "ResolverQueryLogConfigAssociation",
                "variableSetterType" : "ResolverQueryLogConfigAssociation"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "ResolverQueryLogConfigAssociation",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "ResolverQueryLogConfigAssociation",
            "templateImplType" : "java.util.ArrayList<ResolverQueryLogConfigAssociation>",
            "templateType" : "java.util.List<ResolverQueryLogConfigAssociation>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "ResolverQueryLogConfigAssociations",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A list that contains one <code>ResolverQueryLogConfigAssociations</code> element for each query logging association that matches the values that you specified for <code>Filter</code>.</p>\n@param resolverQueryLogConfigAssociations A list that contains one <code>ResolverQueryLogConfigAssociations</code> element for each query logging association that matches the values that you specified for <code>Filter</code>.*/",
          "setterMethodName" : "setResolverQueryLogConfigAssociations",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ResolverQueryLogConfigAssociation>",
            "variableName" : "resolverQueryLogConfigAssociations",
            "variableType" : "java.util.List<ResolverQueryLogConfigAssociation>",
            "documentation" : "",
            "simpleType" : "List<ResolverQueryLogConfigAssociation>",
            "variableSetterType" : "java.util.Collection<ResolverQueryLogConfigAssociation>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A list that contains one <code>ResolverQueryLogConfigAssociations</code> element for each query logging association that matches the values that you specified for <code>Filter</code>.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setResolverQueryLogConfigAssociations(java.util.Collection)} or {@link #withResolverQueryLogConfigAssociations(java.util.Collection)} if you want to override the existing values.</p>\n@param resolverQueryLogConfigAssociations A list that contains one <code>ResolverQueryLogConfigAssociations</code> element for each query logging association that matches the values that you specified for <code>Filter</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ResolverQueryLogConfigAssociation>",
            "variableName" : "resolverQueryLogConfigAssociations",
            "variableType" : "java.util.List<ResolverQueryLogConfigAssociation>",
            "documentation" : "<p>A list that contains one <code>ResolverQueryLogConfigAssociations</code> element for each query logging association that matches the values that you specified for <code>Filter</code>.</p>",
            "simpleType" : "List<ResolverQueryLogConfigAssociation>",
            "variableSetterType" : "java.util.Collection<ResolverQueryLogConfigAssociation>"
          },
          "xmlNameSpaceUri" : null
        },
        "TotalCount" : {
          "c2jName" : "TotalCount",
          "c2jShape" : "Count",
          "deprecated" : false,
          "documentation" : "<p>The total number of query logging associations that were created by the current account in the specified Region. This count can differ from the number of associations that are returned in a <code>ListResolverQueryLogConfigAssociations</code> response, depending on the values that you specify in the request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The total number of query logging associations that were created by the current account in the specified Region. This count can differ from the number of associations that are returned in a <code>ListResolverQueryLogConfigAssociations</code> response, depending on the values that you specify in the request.</p>\n@param totalCount The total number of query logging associations that were created by the current account in the specified Region. This count can differ from the number of associations that are returned in a <code>ListResolverQueryLogConfigAssociations</code> response, depending on the values that you specify in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTotalCount",
          "getterDocumentation" : "/**<p>The total number of query logging associations that were created by the current account in the specified Region. This count can differ from the number of associations that are returned in a <code>ListResolverQueryLogConfigAssociations</code> response, depending on the values that you specify in the request.</p>\n@return The total number of query logging associations that were created by the current account in the specified Region. This count can differ from the number of associations that are returned in a <code>ListResolverQueryLogConfigAssociations</code> response, depending on the values that you specify in the request.*/",
          "getterMethodName" : "getTotalCount",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TotalCount",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TotalCount",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "TotalCount",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The total number of query logging associations that were created by the current account in the specified Region. This count can differ from the number of associations that are returned in a <code>ListResolverQueryLogConfigAssociations</code> response, depending on the values that you specify in the request.</p>\n@param totalCount The total number of query logging associations that were created by the current account in the specified Region. This count can differ from the number of associations that are returned in a <code>ListResolverQueryLogConfigAssociations</code> response, depending on the values that you specify in the request.*/",
          "setterMethodName" : "setTotalCount",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "totalCount",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The total number of query logging associations that were created by the current account in the specified Region. This count can differ from the number of associations that are returned in a <code>ListResolverQueryLogConfigAssociations</code> response, depending on the values that you specify in the request.</p>\n@param totalCount The total number of query logging associations that were created by the current account in the specified Region. This count can differ from the number of associations that are returned in a <code>ListResolverQueryLogConfigAssociations</code> response, depending on the values that you specify in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "totalCount",
            "variableType" : "Integer",
            "documentation" : "<p>The total number of query logging associations that were created by the current account in the specified Region. This count can differ from the number of associations that are returned in a <code>ListResolverQueryLogConfigAssociations</code> response, depending on the values that you specify in the request.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "TotalFilteredCount" : {
          "c2jName" : "TotalFilteredCount",
          "c2jShape" : "Count",
          "deprecated" : false,
          "documentation" : "<p>The total number of query logging associations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigAssociations</code> request. For the total number of associations that were created by the current account in the specified Region, see <code>TotalCount</code>.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The total number of query logging associations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigAssociations</code> request. For the total number of associations that were created by the current account in the specified Region, see <code>TotalCount</code>.</p>\n@param totalFilteredCount The total number of query logging associations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigAssociations</code> request. For the total number of associations that were created by the current account in the specified Region, see <code>TotalCount</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTotalFilteredCount",
          "getterDocumentation" : "/**<p>The total number of query logging associations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigAssociations</code> request. For the total number of associations that were created by the current account in the specified Region, see <code>TotalCount</code>.</p>\n@return The total number of query logging associations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigAssociations</code> request. For the total number of associations that were created by the current account in the specified Region, see <code>TotalCount</code>.*/",
          "getterMethodName" : "getTotalFilteredCount",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TotalFilteredCount",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TotalFilteredCount",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "TotalFilteredCount",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The total number of query logging associations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigAssociations</code> request. For the total number of associations that were created by the current account in the specified Region, see <code>TotalCount</code>.</p>\n@param totalFilteredCount The total number of query logging associations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigAssociations</code> request. For the total number of associations that were created by the current account in the specified Region, see <code>TotalCount</code>.*/",
          "setterMethodName" : "setTotalFilteredCount",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "totalFilteredCount",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The total number of query logging associations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigAssociations</code> request. For the total number of associations that were created by the current account in the specified Region, see <code>TotalCount</code>.</p>\n@param totalFilteredCount The total number of query logging associations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigAssociations</code> request. For the total number of associations that were created by the current account in the specified Region, see <code>TotalCount</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "totalFilteredCount",
            "variableType" : "Integer",
            "documentation" : "<p>The total number of query logging associations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigAssociations</code> request. For the total number of associations that were created by the current account in the specified Region, see <code>TotalCount</code>.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListResolverQueryLogConfigAssociationsResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListResolverQueryLogConfigAssociationsResult",
        "variableName" : "listResolverQueryLogConfigAssociationsResult",
        "variableType" : "ListResolverQueryLogConfigAssociationsResult",
        "documentation" : null,
        "simpleType" : "ListResolverQueryLogConfigAssociationsResult",
        "variableSetterType" : "ListResolverQueryLogConfigAssociationsResult"
      },
      "wrapper" : false
    },
    "ListResolverQueryLogConfigsRequest" : {
      "c2jName" : "ListResolverQueryLogConfigsRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.request.ListResolverQueryLogConfigsRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListResolverQueryLogConfigs",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.ListResolverQueryLogConfigs",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "MaxResults",
        "c2jShape" : "MaxResults",
        "deprecated" : false,
        "documentation" : "<p>The maximum number of query logging configurations that you want to return in the response to a <code>ListResolverQueryLogConfigs</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging configurations. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The maximum number of query logging configurations that you want to return in the response to a <code>ListResolverQueryLogConfigs</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging configurations. </p>\n@param maxResults The maximum number of query logging configurations that you want to return in the response to a <code>ListResolverQueryLogConfigs</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging configurations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>The maximum number of query logging configurations that you want to return in the response to a <code>ListResolverQueryLogConfigs</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging configurations. </p>\n@return The maximum number of query logging configurations that you want to return in the response to a <code>ListResolverQueryLogConfigs</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging configurations.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The maximum number of query logging configurations that you want to return in the response to a <code>ListResolverQueryLogConfigs</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging configurations. </p>\n@param maxResults The maximum number of query logging configurations that you want to return in the response to a <code>ListResolverQueryLogConfigs</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging configurations.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The maximum number of query logging configurations that you want to return in the response to a <code>ListResolverQueryLogConfigs</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging configurations. </p>\n@param maxResults The maximum number of query logging configurations that you want to return in the response to a <code>ListResolverQueryLogConfigs</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging configurations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>The maximum number of query logging configurations that you want to return in the response to a <code>ListResolverQueryLogConfigs</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging configurations. </p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>For the first <code>ListResolverQueryLogConfigs</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging configurations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>For the first <code>ListResolverQueryLogConfigs</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging configurations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverQueryLogConfigs</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging configurations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>For the first <code>ListResolverQueryLogConfigs</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging configurations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return For the first <code>ListResolverQueryLogConfigs</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging configurations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>For the first <code>ListResolverQueryLogConfigs</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging configurations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverQueryLogConfigs</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging configurations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>For the first <code>ListResolverQueryLogConfigs</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging configurations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverQueryLogConfigs</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging configurations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>For the first <code>ListResolverQueryLogConfigs</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging configurations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Filters",
        "c2jShape" : "Filters",
        "deprecated" : false,
        "documentation" : "<p>An optional specification to return a subset of query logging configurations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An optional specification to return a subset of query logging configurations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@param filters An optional specification to return a subset of query logging configurations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFilters",
        "getterDocumentation" : "/**<p>An optional specification to return a subset of query logging configurations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@return An optional specification to return a subset of query logging configurations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>*/",
        "getterMethodName" : "getFilters",
        "getterModel" : {
          "returnType" : "java.util.List<Filter>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Filters",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Filters",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Filter",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Filter",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Filter",
              "variableName" : "member",
              "variableType" : "Filter",
              "documentation" : "",
              "simpleType" : "Filter",
              "variableSetterType" : "Filter"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Filter",
              "variableName" : "member",
              "variableType" : "Filter",
              "documentation" : "",
              "simpleType" : "Filter",
              "variableSetterType" : "Filter"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Filter",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Filter",
          "templateImplType" : "java.util.ArrayList<Filter>",
          "templateType" : "java.util.List<Filter>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Filters",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>An optional specification to return a subset of query logging configurations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@param filters An optional specification to return a subset of query logging configurations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>*/",
        "setterMethodName" : "setFilters",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Filter>",
          "variableName" : "filters",
          "variableType" : "java.util.List<Filter>",
          "documentation" : "",
          "simpleType" : "List<Filter>",
          "variableSetterType" : "java.util.Collection<Filter>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An optional specification to return a subset of query logging configurations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFilters(java.util.Collection)} or {@link #withFilters(java.util.Collection)} if you want to override the existing values.</p>\n@param filters An optional specification to return a subset of query logging configurations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Filter>",
          "variableName" : "filters",
          "variableType" : "java.util.List<Filter>",
          "documentation" : "<p>An optional specification to return a subset of query logging configurations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>",
          "simpleType" : "List<Filter>",
          "variableSetterType" : "java.util.Collection<Filter>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "SortBy",
        "c2jShape" : "SortByKey",
        "deprecated" : false,
        "documentation" : "<p>The element that you want Resolver to sort query logging configurations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>Arn</code>: The ARN of the query logging configuration</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the specified configuration </p> </li> <li> <p> <code>CreationTime</code>: The date and time that Resolver returned when the configuration was created</p> </li> <li> <p> <code>CreatorRequestId</code>: The value that was specified for <code>CreatorRequestId</code> when the configuration was created</p> </li> <li> <p> <code>DestinationArn</code>: The location that logs are sent to</p> </li> <li> <p> <code>Id</code>: The ID of the configuration</p> </li> <li> <p> <code>Name</code>: The name of the configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account number of the account that created the configuration</p> </li> <li> <p> <code>ShareStatus</code>: Whether the configuration is shared with other AWS accounts or shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li> </ul>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The element that you want Resolver to sort query logging configurations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>Arn</code>: The ARN of the query logging configuration</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the specified configuration </p> </li> <li> <p> <code>CreationTime</code>: The date and time that Resolver returned when the configuration was created</p> </li> <li> <p> <code>CreatorRequestId</code>: The value that was specified for <code>CreatorRequestId</code> when the configuration was created</p> </li> <li> <p> <code>DestinationArn</code>: The location that logs are sent to</p> </li> <li> <p> <code>Id</code>: The ID of the configuration</p> </li> <li> <p> <code>Name</code>: The name of the configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account number of the account that created the configuration</p> </li> <li> <p> <code>ShareStatus</code>: Whether the configuration is shared with other AWS accounts or shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li> </ul>\n@param sortBy The element that you want Resolver to sort query logging configurations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>Arn</code>: The ARN of the query logging configuration</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the specified configuration </p> </li> <li> <p> <code>CreationTime</code>: The date and time that Resolver returned when the configuration was created</p> </li> <li> <p> <code>CreatorRequestId</code>: The value that was specified for <code>CreatorRequestId</code> when the configuration was created</p> </li> <li> <p> <code>DestinationArn</code>: The location that logs are sent to</p> </li> <li> <p> <code>Id</code>: The ID of the configuration</p> </li> <li> <p> <code>Name</code>: The name of the configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account number of the account that created the configuration</p> </li> <li> <p> <code>ShareStatus</code>: Whether the configuration is shared with other AWS accounts or shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSortBy",
        "getterDocumentation" : "/**<p>The element that you want Resolver to sort query logging configurations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>Arn</code>: The ARN of the query logging configuration</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the specified configuration </p> </li> <li> <p> <code>CreationTime</code>: The date and time that Resolver returned when the configuration was created</p> </li> <li> <p> <code>CreatorRequestId</code>: The value that was specified for <code>CreatorRequestId</code> when the configuration was created</p> </li> <li> <p> <code>DestinationArn</code>: The location that logs are sent to</p> </li> <li> <p> <code>Id</code>: The ID of the configuration</p> </li> <li> <p> <code>Name</code>: The name of the configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account number of the account that created the configuration</p> </li> <li> <p> <code>ShareStatus</code>: Whether the configuration is shared with other AWS accounts or shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li> </ul>\n@return The element that you want Resolver to sort query logging configurations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>Arn</code>: The ARN of the query logging configuration</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the specified configuration </p> </li> <li> <p> <code>CreationTime</code>: The date and time that Resolver returned when the configuration was created</p> </li> <li> <p> <code>CreatorRequestId</code>: The value that was specified for <code>CreatorRequestId</code> when the configuration was created</p> </li> <li> <p> <code>DestinationArn</code>: The location that logs are sent to</p> </li> <li> <p> <code>Id</code>: The ID of the configuration</p> </li> <li> <p> <code>Name</code>: The name of the configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account number of the account that created the configuration</p> </li> <li> <p> <code>ShareStatus</code>: Whether the configuration is shared with other AWS accounts or shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li>*/",
        "getterMethodName" : "getSortBy",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SortBy",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SortBy",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SortBy",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The element that you want Resolver to sort query logging configurations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>Arn</code>: The ARN of the query logging configuration</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the specified configuration </p> </li> <li> <p> <code>CreationTime</code>: The date and time that Resolver returned when the configuration was created</p> </li> <li> <p> <code>CreatorRequestId</code>: The value that was specified for <code>CreatorRequestId</code> when the configuration was created</p> </li> <li> <p> <code>DestinationArn</code>: The location that logs are sent to</p> </li> <li> <p> <code>Id</code>: The ID of the configuration</p> </li> <li> <p> <code>Name</code>: The name of the configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account number of the account that created the configuration</p> </li> <li> <p> <code>ShareStatus</code>: Whether the configuration is shared with other AWS accounts or shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li> </ul>\n@param sortBy The element that you want Resolver to sort query logging configurations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>Arn</code>: The ARN of the query logging configuration</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the specified configuration </p> </li> <li> <p> <code>CreationTime</code>: The date and time that Resolver returned when the configuration was created</p> </li> <li> <p> <code>CreatorRequestId</code>: The value that was specified for <code>CreatorRequestId</code> when the configuration was created</p> </li> <li> <p> <code>DestinationArn</code>: The location that logs are sent to</p> </li> <li> <p> <code>Id</code>: The ID of the configuration</p> </li> <li> <p> <code>Name</code>: The name of the configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account number of the account that created the configuration</p> </li> <li> <p> <code>ShareStatus</code>: Whether the configuration is shared with other AWS accounts or shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li>*/",
        "setterMethodName" : "setSortBy",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sortBy",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The element that you want Resolver to sort query logging configurations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>Arn</code>: The ARN of the query logging configuration</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the specified configuration </p> </li> <li> <p> <code>CreationTime</code>: The date and time that Resolver returned when the configuration was created</p> </li> <li> <p> <code>CreatorRequestId</code>: The value that was specified for <code>CreatorRequestId</code> when the configuration was created</p> </li> <li> <p> <code>DestinationArn</code>: The location that logs are sent to</p> </li> <li> <p> <code>Id</code>: The ID of the configuration</p> </li> <li> <p> <code>Name</code>: The name of the configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account number of the account that created the configuration</p> </li> <li> <p> <code>ShareStatus</code>: Whether the configuration is shared with other AWS accounts or shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li> </ul>\n@param sortBy The element that you want Resolver to sort query logging configurations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>Arn</code>: The ARN of the query logging configuration</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the specified configuration </p> </li> <li> <p> <code>CreationTime</code>: The date and time that Resolver returned when the configuration was created</p> </li> <li> <p> <code>CreatorRequestId</code>: The value that was specified for <code>CreatorRequestId</code> when the configuration was created</p> </li> <li> <p> <code>DestinationArn</code>: The location that logs are sent to</p> </li> <li> <p> <code>Id</code>: The ID of the configuration</p> </li> <li> <p> <code>Name</code>: The name of the configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account number of the account that created the configuration</p> </li> <li> <p> <code>ShareStatus</code>: Whether the configuration is shared with other AWS accounts or shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sortBy",
          "variableType" : "String",
          "documentation" : "<p>The element that you want Resolver to sort query logging configurations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>Arn</code>: The ARN of the query logging configuration</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the specified configuration </p> </li> <li> <p> <code>CreationTime</code>: The date and time that Resolver returned when the configuration was created</p> </li> <li> <p> <code>CreatorRequestId</code>: The value that was specified for <code>CreatorRequestId</code> when the configuration was created</p> </li> <li> <p> <code>DestinationArn</code>: The location that logs are sent to</p> </li> <li> <p> <code>Id</code>: The ID of the configuration</p> </li> <li> <p> <code>Name</code>: The name of the configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account number of the account that created the configuration</p> </li> <li> <p> <code>ShareStatus</code>: Whether the configuration is shared with other AWS accounts or shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li> </ul>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "SortOrder",
        "c2jShape" : "SortOrder",
        "deprecated" : false,
        "documentation" : "<p>If you specified a value for <code>SortBy</code>, the order that you want query logging configurations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p> </note>",
        "endpointDiscoveryId" : false,
        "enumType" : "SortOrder",
        "fluentSetterDocumentation" : "/**<p>If you specified a value for <code>SortBy</code>, the order that you want query logging configurations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p> </note>\n@param sortOrder If you specified a value for <code>SortBy</code>, the order that you want query logging configurations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see SortOrder*/",
        "fluentSetterMethodName" : "withSortOrder",
        "getterDocumentation" : "/**<p>If you specified a value for <code>SortBy</code>, the order that you want query logging configurations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p> </note>\n@return If you specified a value for <code>SortBy</code>, the order that you want query logging configurations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p>\n@see SortOrder*/",
        "getterMethodName" : "getSortOrder",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SortOrder",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SortOrder",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SortOrder",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>If you specified a value for <code>SortBy</code>, the order that you want query logging configurations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p> </note>\n@param sortOrder If you specified a value for <code>SortBy</code>, the order that you want query logging configurations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p>\n@see SortOrder*/",
        "setterMethodName" : "setSortOrder",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sortOrder",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>If you specified a value for <code>SortBy</code>, the order that you want query logging configurations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p> </note>\n@param sortOrder If you specified a value for <code>SortBy</code>, the order that you want query logging configurations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see SortOrder*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sortOrder",
          "variableType" : "String",
          "documentation" : "<p>If you specified a value for <code>SortBy</code>, the order that you want query logging configurations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p> </note>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Filters" : {
          "c2jName" : "Filters",
          "c2jShape" : "Filters",
          "deprecated" : false,
          "documentation" : "<p>An optional specification to return a subset of query logging configurations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An optional specification to return a subset of query logging configurations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@param filters An optional specification to return a subset of query logging configurations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFilters",
          "getterDocumentation" : "/**<p>An optional specification to return a subset of query logging configurations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@return An optional specification to return a subset of query logging configurations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>*/",
          "getterMethodName" : "getFilters",
          "getterModel" : {
            "returnType" : "java.util.List<Filter>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Filters",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Filters",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Filter",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Filter",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Filter",
                "variableName" : "member",
                "variableType" : "Filter",
                "documentation" : "",
                "simpleType" : "Filter",
                "variableSetterType" : "Filter"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Filter",
                "variableName" : "member",
                "variableType" : "Filter",
                "documentation" : "",
                "simpleType" : "Filter",
                "variableSetterType" : "Filter"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Filter",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Filter",
            "templateImplType" : "java.util.ArrayList<Filter>",
            "templateType" : "java.util.List<Filter>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Filters",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>An optional specification to return a subset of query logging configurations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@param filters An optional specification to return a subset of query logging configurations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>*/",
          "setterMethodName" : "setFilters",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Filter>",
            "variableName" : "filters",
            "variableType" : "java.util.List<Filter>",
            "documentation" : "",
            "simpleType" : "List<Filter>",
            "variableSetterType" : "java.util.Collection<Filter>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An optional specification to return a subset of query logging configurations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFilters(java.util.Collection)} or {@link #withFilters(java.util.Collection)} if you want to override the existing values.</p>\n@param filters An optional specification to return a subset of query logging configurations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Filter>",
            "variableName" : "filters",
            "variableType" : "java.util.List<Filter>",
            "documentation" : "<p>An optional specification to return a subset of query logging configurations.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>",
            "simpleType" : "List<Filter>",
            "variableSetterType" : "java.util.Collection<Filter>"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "MaxResults",
          "deprecated" : false,
          "documentation" : "<p>The maximum number of query logging configurations that you want to return in the response to a <code>ListResolverQueryLogConfigs</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging configurations. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The maximum number of query logging configurations that you want to return in the response to a <code>ListResolverQueryLogConfigs</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging configurations. </p>\n@param maxResults The maximum number of query logging configurations that you want to return in the response to a <code>ListResolverQueryLogConfigs</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging configurations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>The maximum number of query logging configurations that you want to return in the response to a <code>ListResolverQueryLogConfigs</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging configurations. </p>\n@return The maximum number of query logging configurations that you want to return in the response to a <code>ListResolverQueryLogConfigs</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging configurations.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The maximum number of query logging configurations that you want to return in the response to a <code>ListResolverQueryLogConfigs</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging configurations. </p>\n@param maxResults The maximum number of query logging configurations that you want to return in the response to a <code>ListResolverQueryLogConfigs</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging configurations.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The maximum number of query logging configurations that you want to return in the response to a <code>ListResolverQueryLogConfigs</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging configurations. </p>\n@param maxResults The maximum number of query logging configurations that you want to return in the response to a <code>ListResolverQueryLogConfigs</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging configurations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>The maximum number of query logging configurations that you want to return in the response to a <code>ListResolverQueryLogConfigs</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging configurations. </p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>For the first <code>ListResolverQueryLogConfigs</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging configurations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>For the first <code>ListResolverQueryLogConfigs</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging configurations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverQueryLogConfigs</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging configurations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>For the first <code>ListResolverQueryLogConfigs</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging configurations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return For the first <code>ListResolverQueryLogConfigs</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging configurations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>For the first <code>ListResolverQueryLogConfigs</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging configurations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverQueryLogConfigs</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging configurations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>For the first <code>ListResolverQueryLogConfigs</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging configurations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverQueryLogConfigs</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging configurations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>For the first <code>ListResolverQueryLogConfigs</code> request, omit this value.</p> <p>If there are more than <code>MaxResults</code> query logging configurations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SortBy" : {
          "c2jName" : "SortBy",
          "c2jShape" : "SortByKey",
          "deprecated" : false,
          "documentation" : "<p>The element that you want Resolver to sort query logging configurations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>Arn</code>: The ARN of the query logging configuration</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the specified configuration </p> </li> <li> <p> <code>CreationTime</code>: The date and time that Resolver returned when the configuration was created</p> </li> <li> <p> <code>CreatorRequestId</code>: The value that was specified for <code>CreatorRequestId</code> when the configuration was created</p> </li> <li> <p> <code>DestinationArn</code>: The location that logs are sent to</p> </li> <li> <p> <code>Id</code>: The ID of the configuration</p> </li> <li> <p> <code>Name</code>: The name of the configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account number of the account that created the configuration</p> </li> <li> <p> <code>ShareStatus</code>: Whether the configuration is shared with other AWS accounts or shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li> </ul>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The element that you want Resolver to sort query logging configurations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>Arn</code>: The ARN of the query logging configuration</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the specified configuration </p> </li> <li> <p> <code>CreationTime</code>: The date and time that Resolver returned when the configuration was created</p> </li> <li> <p> <code>CreatorRequestId</code>: The value that was specified for <code>CreatorRequestId</code> when the configuration was created</p> </li> <li> <p> <code>DestinationArn</code>: The location that logs are sent to</p> </li> <li> <p> <code>Id</code>: The ID of the configuration</p> </li> <li> <p> <code>Name</code>: The name of the configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account number of the account that created the configuration</p> </li> <li> <p> <code>ShareStatus</code>: Whether the configuration is shared with other AWS accounts or shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li> </ul>\n@param sortBy The element that you want Resolver to sort query logging configurations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>Arn</code>: The ARN of the query logging configuration</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the specified configuration </p> </li> <li> <p> <code>CreationTime</code>: The date and time that Resolver returned when the configuration was created</p> </li> <li> <p> <code>CreatorRequestId</code>: The value that was specified for <code>CreatorRequestId</code> when the configuration was created</p> </li> <li> <p> <code>DestinationArn</code>: The location that logs are sent to</p> </li> <li> <p> <code>Id</code>: The ID of the configuration</p> </li> <li> <p> <code>Name</code>: The name of the configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account number of the account that created the configuration</p> </li> <li> <p> <code>ShareStatus</code>: Whether the configuration is shared with other AWS accounts or shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSortBy",
          "getterDocumentation" : "/**<p>The element that you want Resolver to sort query logging configurations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>Arn</code>: The ARN of the query logging configuration</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the specified configuration </p> </li> <li> <p> <code>CreationTime</code>: The date and time that Resolver returned when the configuration was created</p> </li> <li> <p> <code>CreatorRequestId</code>: The value that was specified for <code>CreatorRequestId</code> when the configuration was created</p> </li> <li> <p> <code>DestinationArn</code>: The location that logs are sent to</p> </li> <li> <p> <code>Id</code>: The ID of the configuration</p> </li> <li> <p> <code>Name</code>: The name of the configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account number of the account that created the configuration</p> </li> <li> <p> <code>ShareStatus</code>: Whether the configuration is shared with other AWS accounts or shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li> </ul>\n@return The element that you want Resolver to sort query logging configurations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>Arn</code>: The ARN of the query logging configuration</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the specified configuration </p> </li> <li> <p> <code>CreationTime</code>: The date and time that Resolver returned when the configuration was created</p> </li> <li> <p> <code>CreatorRequestId</code>: The value that was specified for <code>CreatorRequestId</code> when the configuration was created</p> </li> <li> <p> <code>DestinationArn</code>: The location that logs are sent to</p> </li> <li> <p> <code>Id</code>: The ID of the configuration</p> </li> <li> <p> <code>Name</code>: The name of the configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account number of the account that created the configuration</p> </li> <li> <p> <code>ShareStatus</code>: Whether the configuration is shared with other AWS accounts or shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li>*/",
          "getterMethodName" : "getSortBy",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SortBy",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SortBy",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SortBy",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The element that you want Resolver to sort query logging configurations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>Arn</code>: The ARN of the query logging configuration</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the specified configuration </p> </li> <li> <p> <code>CreationTime</code>: The date and time that Resolver returned when the configuration was created</p> </li> <li> <p> <code>CreatorRequestId</code>: The value that was specified for <code>CreatorRequestId</code> when the configuration was created</p> </li> <li> <p> <code>DestinationArn</code>: The location that logs are sent to</p> </li> <li> <p> <code>Id</code>: The ID of the configuration</p> </li> <li> <p> <code>Name</code>: The name of the configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account number of the account that created the configuration</p> </li> <li> <p> <code>ShareStatus</code>: Whether the configuration is shared with other AWS accounts or shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li> </ul>\n@param sortBy The element that you want Resolver to sort query logging configurations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>Arn</code>: The ARN of the query logging configuration</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the specified configuration </p> </li> <li> <p> <code>CreationTime</code>: The date and time that Resolver returned when the configuration was created</p> </li> <li> <p> <code>CreatorRequestId</code>: The value that was specified for <code>CreatorRequestId</code> when the configuration was created</p> </li> <li> <p> <code>DestinationArn</code>: The location that logs are sent to</p> </li> <li> <p> <code>Id</code>: The ID of the configuration</p> </li> <li> <p> <code>Name</code>: The name of the configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account number of the account that created the configuration</p> </li> <li> <p> <code>ShareStatus</code>: Whether the configuration is shared with other AWS accounts or shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li>*/",
          "setterMethodName" : "setSortBy",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sortBy",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The element that you want Resolver to sort query logging configurations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>Arn</code>: The ARN of the query logging configuration</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the specified configuration </p> </li> <li> <p> <code>CreationTime</code>: The date and time that Resolver returned when the configuration was created</p> </li> <li> <p> <code>CreatorRequestId</code>: The value that was specified for <code>CreatorRequestId</code> when the configuration was created</p> </li> <li> <p> <code>DestinationArn</code>: The location that logs are sent to</p> </li> <li> <p> <code>Id</code>: The ID of the configuration</p> </li> <li> <p> <code>Name</code>: The name of the configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account number of the account that created the configuration</p> </li> <li> <p> <code>ShareStatus</code>: Whether the configuration is shared with other AWS accounts or shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li> </ul>\n@param sortBy The element that you want Resolver to sort query logging configurations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>Arn</code>: The ARN of the query logging configuration</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the specified configuration </p> </li> <li> <p> <code>CreationTime</code>: The date and time that Resolver returned when the configuration was created</p> </li> <li> <p> <code>CreatorRequestId</code>: The value that was specified for <code>CreatorRequestId</code> when the configuration was created</p> </li> <li> <p> <code>DestinationArn</code>: The location that logs are sent to</p> </li> <li> <p> <code>Id</code>: The ID of the configuration</p> </li> <li> <p> <code>Name</code>: The name of the configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account number of the account that created the configuration</p> </li> <li> <p> <code>ShareStatus</code>: Whether the configuration is shared with other AWS accounts or shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sortBy",
            "variableType" : "String",
            "documentation" : "<p>The element that you want Resolver to sort query logging configurations by. </p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p> </note> <p>Valid values include the following elements:</p> <ul> <li> <p> <code>Arn</code>: The ARN of the query logging configuration</p> </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that are associated with the specified configuration </p> </li> <li> <p> <code>CreationTime</code>: The date and time that Resolver returned when the configuration was created</p> </li> <li> <p> <code>CreatorRequestId</code>: The value that was specified for <code>CreatorRequestId</code> when the configuration was created</p> </li> <li> <p> <code>DestinationArn</code>: The location that logs are sent to</p> </li> <li> <p> <code>Id</code>: The ID of the configuration</p> </li> <li> <p> <code>Name</code>: The name of the configuration</p> </li> <li> <p> <code>OwnerId</code>: The AWS account number of the account that created the configuration</p> </li> <li> <p> <code>ShareStatus</code>: Whether the configuration is shared with other AWS accounts or shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).</p> </li> <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul> </li> </ul>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SortOrder" : {
          "c2jName" : "SortOrder",
          "c2jShape" : "SortOrder",
          "deprecated" : false,
          "documentation" : "<p>If you specified a value for <code>SortBy</code>, the order that you want query logging configurations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p> </note>",
          "endpointDiscoveryId" : false,
          "enumType" : "SortOrder",
          "fluentSetterDocumentation" : "/**<p>If you specified a value for <code>SortBy</code>, the order that you want query logging configurations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p> </note>\n@param sortOrder If you specified a value for <code>SortBy</code>, the order that you want query logging configurations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see SortOrder*/",
          "fluentSetterMethodName" : "withSortOrder",
          "getterDocumentation" : "/**<p>If you specified a value for <code>SortBy</code>, the order that you want query logging configurations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p> </note>\n@return If you specified a value for <code>SortBy</code>, the order that you want query logging configurations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p>\n@see SortOrder*/",
          "getterMethodName" : "getSortOrder",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SortOrder",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SortOrder",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SortOrder",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>If you specified a value for <code>SortBy</code>, the order that you want query logging configurations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p> </note>\n@param sortOrder If you specified a value for <code>SortBy</code>, the order that you want query logging configurations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p>\n@see SortOrder*/",
          "setterMethodName" : "setSortOrder",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sortOrder",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>If you specified a value for <code>SortBy</code>, the order that you want query logging configurations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p> </note>\n@param sortOrder If you specified a value for <code>SortBy</code>, the order that you want query logging configurations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see SortOrder*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sortOrder",
            "variableType" : "String",
            "documentation" : "<p>If you specified a value for <code>SortBy</code>, the order that you want query logging configurations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p> </note>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListResolverQueryLogConfigsRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListResolverQueryLogConfigsRequest",
        "variableName" : "listResolverQueryLogConfigsRequest",
        "variableType" : "ListResolverQueryLogConfigsRequest",
        "documentation" : null,
        "simpleType" : "ListResolverQueryLogConfigsRequest",
        "variableSetterType" : "ListResolverQueryLogConfigsRequest"
      },
      "wrapper" : false
    },
    "ListResolverQueryLogConfigsResult" : {
      "c2jName" : "ListResolverQueryLogConfigsResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.response.ListResolverQueryLogConfigsResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>If there are more than <code>MaxResults</code> query logging configurations, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>If there are more than <code>MaxResults</code> query logging configurations, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If there are more than <code>MaxResults</code> query logging configurations, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>If there are more than <code>MaxResults</code> query logging configurations, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return If there are more than <code>MaxResults</code> query logging configurations, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>If there are more than <code>MaxResults</code> query logging configurations, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If there are more than <code>MaxResults</code> query logging configurations, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>If there are more than <code>MaxResults</code> query logging configurations, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If there are more than <code>MaxResults</code> query logging configurations, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>If there are more than <code>MaxResults</code> query logging configurations, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "TotalCount",
        "c2jShape" : "Count",
        "deprecated" : false,
        "documentation" : "<p>The total number of query logging configurations that were created by the current account in the specified Region. This count can differ from the number of query logging configurations that are returned in a <code>ListResolverQueryLogConfigs</code> response, depending on the values that you specify in the request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The total number of query logging configurations that were created by the current account in the specified Region. This count can differ from the number of query logging configurations that are returned in a <code>ListResolverQueryLogConfigs</code> response, depending on the values that you specify in the request.</p>\n@param totalCount The total number of query logging configurations that were created by the current account in the specified Region. This count can differ from the number of query logging configurations that are returned in a <code>ListResolverQueryLogConfigs</code> response, depending on the values that you specify in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTotalCount",
        "getterDocumentation" : "/**<p>The total number of query logging configurations that were created by the current account in the specified Region. This count can differ from the number of query logging configurations that are returned in a <code>ListResolverQueryLogConfigs</code> response, depending on the values that you specify in the request.</p>\n@return The total number of query logging configurations that were created by the current account in the specified Region. This count can differ from the number of query logging configurations that are returned in a <code>ListResolverQueryLogConfigs</code> response, depending on the values that you specify in the request.*/",
        "getterMethodName" : "getTotalCount",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TotalCount",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TotalCount",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "TotalCount",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The total number of query logging configurations that were created by the current account in the specified Region. This count can differ from the number of query logging configurations that are returned in a <code>ListResolverQueryLogConfigs</code> response, depending on the values that you specify in the request.</p>\n@param totalCount The total number of query logging configurations that were created by the current account in the specified Region. This count can differ from the number of query logging configurations that are returned in a <code>ListResolverQueryLogConfigs</code> response, depending on the values that you specify in the request.*/",
        "setterMethodName" : "setTotalCount",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "totalCount",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The total number of query logging configurations that were created by the current account in the specified Region. This count can differ from the number of query logging configurations that are returned in a <code>ListResolverQueryLogConfigs</code> response, depending on the values that you specify in the request.</p>\n@param totalCount The total number of query logging configurations that were created by the current account in the specified Region. This count can differ from the number of query logging configurations that are returned in a <code>ListResolverQueryLogConfigs</code> response, depending on the values that you specify in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "totalCount",
          "variableType" : "Integer",
          "documentation" : "<p>The total number of query logging configurations that were created by the current account in the specified Region. This count can differ from the number of query logging configurations that are returned in a <code>ListResolverQueryLogConfigs</code> response, depending on the values that you specify in the request.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "TotalFilteredCount",
        "c2jShape" : "Count",
        "deprecated" : false,
        "documentation" : "<p>The total number of query logging configurations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigs</code> request. For the total number of query logging configurations that were created by the current account in the specified Region, see <code>TotalCount</code>.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The total number of query logging configurations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigs</code> request. For the total number of query logging configurations that were created by the current account in the specified Region, see <code>TotalCount</code>.</p>\n@param totalFilteredCount The total number of query logging configurations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigs</code> request. For the total number of query logging configurations that were created by the current account in the specified Region, see <code>TotalCount</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTotalFilteredCount",
        "getterDocumentation" : "/**<p>The total number of query logging configurations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigs</code> request. For the total number of query logging configurations that were created by the current account in the specified Region, see <code>TotalCount</code>.</p>\n@return The total number of query logging configurations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigs</code> request. For the total number of query logging configurations that were created by the current account in the specified Region, see <code>TotalCount</code>.*/",
        "getterMethodName" : "getTotalFilteredCount",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TotalFilteredCount",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TotalFilteredCount",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "TotalFilteredCount",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The total number of query logging configurations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigs</code> request. For the total number of query logging configurations that were created by the current account in the specified Region, see <code>TotalCount</code>.</p>\n@param totalFilteredCount The total number of query logging configurations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigs</code> request. For the total number of query logging configurations that were created by the current account in the specified Region, see <code>TotalCount</code>.*/",
        "setterMethodName" : "setTotalFilteredCount",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "totalFilteredCount",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The total number of query logging configurations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigs</code> request. For the total number of query logging configurations that were created by the current account in the specified Region, see <code>TotalCount</code>.</p>\n@param totalFilteredCount The total number of query logging configurations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigs</code> request. For the total number of query logging configurations that were created by the current account in the specified Region, see <code>TotalCount</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "totalFilteredCount",
          "variableType" : "Integer",
          "documentation" : "<p>The total number of query logging configurations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigs</code> request. For the total number of query logging configurations that were created by the current account in the specified Region, see <code>TotalCount</code>.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ResolverQueryLogConfigs",
        "c2jShape" : "ResolverQueryLogConfigList",
        "deprecated" : false,
        "documentation" : "<p>A list that contains one <code>ResolverQueryLogConfig</code> element for each query logging configuration that matches the values that you specified for <code>Filter</code>.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A list that contains one <code>ResolverQueryLogConfig</code> element for each query logging configuration that matches the values that you specified for <code>Filter</code>.</p>\n@param resolverQueryLogConfigs A list that contains one <code>ResolverQueryLogConfig</code> element for each query logging configuration that matches the values that you specified for <code>Filter</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverQueryLogConfigs",
        "getterDocumentation" : "/**<p>A list that contains one <code>ResolverQueryLogConfig</code> element for each query logging configuration that matches the values that you specified for <code>Filter</code>.</p>\n@return A list that contains one <code>ResolverQueryLogConfig</code> element for each query logging configuration that matches the values that you specified for <code>Filter</code>.*/",
        "getterMethodName" : "getResolverQueryLogConfigs",
        "getterModel" : {
          "returnType" : "java.util.List<ResolverQueryLogConfig>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverQueryLogConfigs",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverQueryLogConfigs",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ResolverQueryLogConfig",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "ResolverQueryLogConfig",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ResolverQueryLogConfig",
              "variableName" : "member",
              "variableType" : "ResolverQueryLogConfig",
              "documentation" : "",
              "simpleType" : "ResolverQueryLogConfig",
              "variableSetterType" : "ResolverQueryLogConfig"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ResolverQueryLogConfig",
              "variableName" : "member",
              "variableType" : "ResolverQueryLogConfig",
              "documentation" : "",
              "simpleType" : "ResolverQueryLogConfig",
              "variableSetterType" : "ResolverQueryLogConfig"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "ResolverQueryLogConfig",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "ResolverQueryLogConfig",
          "templateImplType" : "java.util.ArrayList<ResolverQueryLogConfig>",
          "templateType" : "java.util.List<ResolverQueryLogConfig>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "ResolverQueryLogConfigs",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A list that contains one <code>ResolverQueryLogConfig</code> element for each query logging configuration that matches the values that you specified for <code>Filter</code>.</p>\n@param resolverQueryLogConfigs A list that contains one <code>ResolverQueryLogConfig</code> element for each query logging configuration that matches the values that you specified for <code>Filter</code>.*/",
        "setterMethodName" : "setResolverQueryLogConfigs",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ResolverQueryLogConfig>",
          "variableName" : "resolverQueryLogConfigs",
          "variableType" : "java.util.List<ResolverQueryLogConfig>",
          "documentation" : "",
          "simpleType" : "List<ResolverQueryLogConfig>",
          "variableSetterType" : "java.util.Collection<ResolverQueryLogConfig>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A list that contains one <code>ResolverQueryLogConfig</code> element for each query logging configuration that matches the values that you specified for <code>Filter</code>.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setResolverQueryLogConfigs(java.util.Collection)} or {@link #withResolverQueryLogConfigs(java.util.Collection)} if you want to override the existing values.</p>\n@param resolverQueryLogConfigs A list that contains one <code>ResolverQueryLogConfig</code> element for each query logging configuration that matches the values that you specified for <code>Filter</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ResolverQueryLogConfig>",
          "variableName" : "resolverQueryLogConfigs",
          "variableType" : "java.util.List<ResolverQueryLogConfig>",
          "documentation" : "<p>A list that contains one <code>ResolverQueryLogConfig</code> element for each query logging configuration that matches the values that you specified for <code>Filter</code>.</p>",
          "simpleType" : "List<ResolverQueryLogConfig>",
          "variableSetterType" : "java.util.Collection<ResolverQueryLogConfig>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>If there are more than <code>MaxResults</code> query logging configurations, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>If there are more than <code>MaxResults</code> query logging configurations, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If there are more than <code>MaxResults</code> query logging configurations, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>If there are more than <code>MaxResults</code> query logging configurations, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return If there are more than <code>MaxResults</code> query logging configurations, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>If there are more than <code>MaxResults</code> query logging configurations, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If there are more than <code>MaxResults</code> query logging configurations, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>If there are more than <code>MaxResults</code> query logging configurations, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If there are more than <code>MaxResults</code> query logging configurations, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>If there are more than <code>MaxResults</code> query logging configurations, you can submit another <code>ListResolverQueryLogConfigs</code> request to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResolverQueryLogConfigs" : {
          "c2jName" : "ResolverQueryLogConfigs",
          "c2jShape" : "ResolverQueryLogConfigList",
          "deprecated" : false,
          "documentation" : "<p>A list that contains one <code>ResolverQueryLogConfig</code> element for each query logging configuration that matches the values that you specified for <code>Filter</code>.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A list that contains one <code>ResolverQueryLogConfig</code> element for each query logging configuration that matches the values that you specified for <code>Filter</code>.</p>\n@param resolverQueryLogConfigs A list that contains one <code>ResolverQueryLogConfig</code> element for each query logging configuration that matches the values that you specified for <code>Filter</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverQueryLogConfigs",
          "getterDocumentation" : "/**<p>A list that contains one <code>ResolverQueryLogConfig</code> element for each query logging configuration that matches the values that you specified for <code>Filter</code>.</p>\n@return A list that contains one <code>ResolverQueryLogConfig</code> element for each query logging configuration that matches the values that you specified for <code>Filter</code>.*/",
          "getterMethodName" : "getResolverQueryLogConfigs",
          "getterModel" : {
            "returnType" : "java.util.List<ResolverQueryLogConfig>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverQueryLogConfigs",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverQueryLogConfigs",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ResolverQueryLogConfig",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "ResolverQueryLogConfig",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ResolverQueryLogConfig",
                "variableName" : "member",
                "variableType" : "ResolverQueryLogConfig",
                "documentation" : "",
                "simpleType" : "ResolverQueryLogConfig",
                "variableSetterType" : "ResolverQueryLogConfig"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ResolverQueryLogConfig",
                "variableName" : "member",
                "variableType" : "ResolverQueryLogConfig",
                "documentation" : "",
                "simpleType" : "ResolverQueryLogConfig",
                "variableSetterType" : "ResolverQueryLogConfig"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "ResolverQueryLogConfig",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "ResolverQueryLogConfig",
            "templateImplType" : "java.util.ArrayList<ResolverQueryLogConfig>",
            "templateType" : "java.util.List<ResolverQueryLogConfig>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "ResolverQueryLogConfigs",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A list that contains one <code>ResolverQueryLogConfig</code> element for each query logging configuration that matches the values that you specified for <code>Filter</code>.</p>\n@param resolverQueryLogConfigs A list that contains one <code>ResolverQueryLogConfig</code> element for each query logging configuration that matches the values that you specified for <code>Filter</code>.*/",
          "setterMethodName" : "setResolverQueryLogConfigs",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ResolverQueryLogConfig>",
            "variableName" : "resolverQueryLogConfigs",
            "variableType" : "java.util.List<ResolverQueryLogConfig>",
            "documentation" : "",
            "simpleType" : "List<ResolverQueryLogConfig>",
            "variableSetterType" : "java.util.Collection<ResolverQueryLogConfig>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A list that contains one <code>ResolverQueryLogConfig</code> element for each query logging configuration that matches the values that you specified for <code>Filter</code>.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setResolverQueryLogConfigs(java.util.Collection)} or {@link #withResolverQueryLogConfigs(java.util.Collection)} if you want to override the existing values.</p>\n@param resolverQueryLogConfigs A list that contains one <code>ResolverQueryLogConfig</code> element for each query logging configuration that matches the values that you specified for <code>Filter</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ResolverQueryLogConfig>",
            "variableName" : "resolverQueryLogConfigs",
            "variableType" : "java.util.List<ResolverQueryLogConfig>",
            "documentation" : "<p>A list that contains one <code>ResolverQueryLogConfig</code> element for each query logging configuration that matches the values that you specified for <code>Filter</code>.</p>",
            "simpleType" : "List<ResolverQueryLogConfig>",
            "variableSetterType" : "java.util.Collection<ResolverQueryLogConfig>"
          },
          "xmlNameSpaceUri" : null
        },
        "TotalCount" : {
          "c2jName" : "TotalCount",
          "c2jShape" : "Count",
          "deprecated" : false,
          "documentation" : "<p>The total number of query logging configurations that were created by the current account in the specified Region. This count can differ from the number of query logging configurations that are returned in a <code>ListResolverQueryLogConfigs</code> response, depending on the values that you specify in the request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The total number of query logging configurations that were created by the current account in the specified Region. This count can differ from the number of query logging configurations that are returned in a <code>ListResolverQueryLogConfigs</code> response, depending on the values that you specify in the request.</p>\n@param totalCount The total number of query logging configurations that were created by the current account in the specified Region. This count can differ from the number of query logging configurations that are returned in a <code>ListResolverQueryLogConfigs</code> response, depending on the values that you specify in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTotalCount",
          "getterDocumentation" : "/**<p>The total number of query logging configurations that were created by the current account in the specified Region. This count can differ from the number of query logging configurations that are returned in a <code>ListResolverQueryLogConfigs</code> response, depending on the values that you specify in the request.</p>\n@return The total number of query logging configurations that were created by the current account in the specified Region. This count can differ from the number of query logging configurations that are returned in a <code>ListResolverQueryLogConfigs</code> response, depending on the values that you specify in the request.*/",
          "getterMethodName" : "getTotalCount",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TotalCount",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TotalCount",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "TotalCount",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The total number of query logging configurations that were created by the current account in the specified Region. This count can differ from the number of query logging configurations that are returned in a <code>ListResolverQueryLogConfigs</code> response, depending on the values that you specify in the request.</p>\n@param totalCount The total number of query logging configurations that were created by the current account in the specified Region. This count can differ from the number of query logging configurations that are returned in a <code>ListResolverQueryLogConfigs</code> response, depending on the values that you specify in the request.*/",
          "setterMethodName" : "setTotalCount",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "totalCount",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The total number of query logging configurations that were created by the current account in the specified Region. This count can differ from the number of query logging configurations that are returned in a <code>ListResolverQueryLogConfigs</code> response, depending on the values that you specify in the request.</p>\n@param totalCount The total number of query logging configurations that were created by the current account in the specified Region. This count can differ from the number of query logging configurations that are returned in a <code>ListResolverQueryLogConfigs</code> response, depending on the values that you specify in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "totalCount",
            "variableType" : "Integer",
            "documentation" : "<p>The total number of query logging configurations that were created by the current account in the specified Region. This count can differ from the number of query logging configurations that are returned in a <code>ListResolverQueryLogConfigs</code> response, depending on the values that you specify in the request.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "TotalFilteredCount" : {
          "c2jName" : "TotalFilteredCount",
          "c2jShape" : "Count",
          "deprecated" : false,
          "documentation" : "<p>The total number of query logging configurations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigs</code> request. For the total number of query logging configurations that were created by the current account in the specified Region, see <code>TotalCount</code>.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The total number of query logging configurations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigs</code> request. For the total number of query logging configurations that were created by the current account in the specified Region, see <code>TotalCount</code>.</p>\n@param totalFilteredCount The total number of query logging configurations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigs</code> request. For the total number of query logging configurations that were created by the current account in the specified Region, see <code>TotalCount</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTotalFilteredCount",
          "getterDocumentation" : "/**<p>The total number of query logging configurations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigs</code> request. For the total number of query logging configurations that were created by the current account in the specified Region, see <code>TotalCount</code>.</p>\n@return The total number of query logging configurations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigs</code> request. For the total number of query logging configurations that were created by the current account in the specified Region, see <code>TotalCount</code>.*/",
          "getterMethodName" : "getTotalFilteredCount",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TotalFilteredCount",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TotalFilteredCount",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "TotalFilteredCount",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The total number of query logging configurations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigs</code> request. For the total number of query logging configurations that were created by the current account in the specified Region, see <code>TotalCount</code>.</p>\n@param totalFilteredCount The total number of query logging configurations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigs</code> request. For the total number of query logging configurations that were created by the current account in the specified Region, see <code>TotalCount</code>.*/",
          "setterMethodName" : "setTotalFilteredCount",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "totalFilteredCount",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The total number of query logging configurations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigs</code> request. For the total number of query logging configurations that were created by the current account in the specified Region, see <code>TotalCount</code>.</p>\n@param totalFilteredCount The total number of query logging configurations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigs</code> request. For the total number of query logging configurations that were created by the current account in the specified Region, see <code>TotalCount</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "totalFilteredCount",
            "variableType" : "Integer",
            "documentation" : "<p>The total number of query logging configurations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigs</code> request. For the total number of query logging configurations that were created by the current account in the specified Region, see <code>TotalCount</code>.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListResolverQueryLogConfigsResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListResolverQueryLogConfigsResult",
        "variableName" : "listResolverQueryLogConfigsResult",
        "variableType" : "ListResolverQueryLogConfigsResult",
        "documentation" : null,
        "simpleType" : "ListResolverQueryLogConfigsResult",
        "variableSetterType" : "ListResolverQueryLogConfigsResult"
      },
      "wrapper" : false
    },
    "ListResolverRuleAssociationsRequest" : {
      "c2jName" : "ListResolverRuleAssociationsRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.request.ListResolverRuleAssociationsRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListResolverRuleAssociations",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.ListResolverRuleAssociations",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "MaxResults",
        "c2jShape" : "MaxResults",
        "deprecated" : false,
        "documentation" : "<p>The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations. </p>\n@param maxResults The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations. </p>\n@return The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations. </p>\n@param maxResults The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations. </p>\n@param maxResults The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations. </p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Filters",
        "c2jShape" : "Filters",
        "deprecated" : false,
        "documentation" : "<p>An optional specification to return a subset of Resolver rules, such as Resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An optional specification to return a subset of Resolver rules, such as Resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@param filters An optional specification to return a subset of Resolver rules, such as Resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFilters",
        "getterDocumentation" : "/**<p>An optional specification to return a subset of Resolver rules, such as Resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@return An optional specification to return a subset of Resolver rules, such as Resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>*/",
        "getterMethodName" : "getFilters",
        "getterModel" : {
          "returnType" : "java.util.List<Filter>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Filters",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Filters",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Filter",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Filter",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Filter",
              "variableName" : "member",
              "variableType" : "Filter",
              "documentation" : "",
              "simpleType" : "Filter",
              "variableSetterType" : "Filter"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Filter",
              "variableName" : "member",
              "variableType" : "Filter",
              "documentation" : "",
              "simpleType" : "Filter",
              "variableSetterType" : "Filter"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Filter",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Filter",
          "templateImplType" : "java.util.ArrayList<Filter>",
          "templateType" : "java.util.List<Filter>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Filters",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>An optional specification to return a subset of Resolver rules, such as Resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@param filters An optional specification to return a subset of Resolver rules, such as Resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>*/",
        "setterMethodName" : "setFilters",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Filter>",
          "variableName" : "filters",
          "variableType" : "java.util.List<Filter>",
          "documentation" : "",
          "simpleType" : "List<Filter>",
          "variableSetterType" : "java.util.Collection<Filter>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An optional specification to return a subset of Resolver rules, such as Resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFilters(java.util.Collection)} or {@link #withFilters(java.util.Collection)} if you want to override the existing values.</p>\n@param filters An optional specification to return a subset of Resolver rules, such as Resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Filter>",
          "variableName" : "filters",
          "variableType" : "java.util.List<Filter>",
          "documentation" : "<p>An optional specification to return a subset of Resolver rules, such as Resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>",
          "simpleType" : "List<Filter>",
          "variableSetterType" : "java.util.Collection<Filter>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Filters" : {
          "c2jName" : "Filters",
          "c2jShape" : "Filters",
          "deprecated" : false,
          "documentation" : "<p>An optional specification to return a subset of Resolver rules, such as Resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An optional specification to return a subset of Resolver rules, such as Resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@param filters An optional specification to return a subset of Resolver rules, such as Resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFilters",
          "getterDocumentation" : "/**<p>An optional specification to return a subset of Resolver rules, such as Resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@return An optional specification to return a subset of Resolver rules, such as Resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>*/",
          "getterMethodName" : "getFilters",
          "getterModel" : {
            "returnType" : "java.util.List<Filter>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Filters",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Filters",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Filter",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Filter",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Filter",
                "variableName" : "member",
                "variableType" : "Filter",
                "documentation" : "",
                "simpleType" : "Filter",
                "variableSetterType" : "Filter"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Filter",
                "variableName" : "member",
                "variableType" : "Filter",
                "documentation" : "",
                "simpleType" : "Filter",
                "variableSetterType" : "Filter"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Filter",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Filter",
            "templateImplType" : "java.util.ArrayList<Filter>",
            "templateType" : "java.util.List<Filter>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Filters",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>An optional specification to return a subset of Resolver rules, such as Resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@param filters An optional specification to return a subset of Resolver rules, such as Resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>*/",
          "setterMethodName" : "setFilters",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Filter>",
            "variableName" : "filters",
            "variableType" : "java.util.List<Filter>",
            "documentation" : "",
            "simpleType" : "List<Filter>",
            "variableSetterType" : "java.util.Collection<Filter>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An optional specification to return a subset of Resolver rules, such as Resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFilters(java.util.Collection)} or {@link #withFilters(java.util.Collection)} if you want to override the existing values.</p>\n@param filters An optional specification to return a subset of Resolver rules, such as Resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Filter>",
            "variableName" : "filters",
            "variableType" : "java.util.List<Filter>",
            "documentation" : "<p>An optional specification to return a subset of Resolver rules, such as Resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>",
            "simpleType" : "List<Filter>",
            "variableSetterType" : "java.util.Collection<Filter>"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "MaxResults",
          "deprecated" : false,
          "documentation" : "<p>The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations. </p>\n@param maxResults The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations. </p>\n@return The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations. </p>\n@param maxResults The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations. </p>\n@param maxResults The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations. </p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListResolverRuleAssociationsRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListResolverRuleAssociationsRequest",
        "variableName" : "listResolverRuleAssociationsRequest",
        "variableType" : "ListResolverRuleAssociationsRequest",
        "documentation" : null,
        "simpleType" : "ListResolverRuleAssociationsRequest",
        "variableSetterType" : "ListResolverRuleAssociationsRequest"
      },
      "wrapper" : false
    },
    "ListResolverRuleAssociationsResult" : {
      "c2jName" : "ListResolverRuleAssociationsResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.response.ListResolverRuleAssociationsResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MaxResults",
        "c2jShape" : "MaxResults",
        "deprecated" : false,
        "documentation" : "<p>The value that you specified for <code>MaxResults</code> in the request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@return The value that you specified for <code>MaxResults</code> in the request.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>The value that you specified for <code>MaxResults</code> in the request.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ResolverRuleAssociations",
        "c2jShape" : "ResolverRuleAssociations",
        "deprecated" : false,
        "documentation" : "<p>The associations that were created between Resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The associations that were created between Resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.</p>\n@param resolverRuleAssociations The associations that were created between Resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverRuleAssociations",
        "getterDocumentation" : "/**<p>The associations that were created between Resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.</p>\n@return The associations that were created between Resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.*/",
        "getterMethodName" : "getResolverRuleAssociations",
        "getterModel" : {
          "returnType" : "java.util.List<ResolverRuleAssociation>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverRuleAssociations",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverRuleAssociations",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ResolverRuleAssociation",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "ResolverRuleAssociation",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ResolverRuleAssociation",
              "variableName" : "member",
              "variableType" : "ResolverRuleAssociation",
              "documentation" : "",
              "simpleType" : "ResolverRuleAssociation",
              "variableSetterType" : "ResolverRuleAssociation"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ResolverRuleAssociation",
              "variableName" : "member",
              "variableType" : "ResolverRuleAssociation",
              "documentation" : "",
              "simpleType" : "ResolverRuleAssociation",
              "variableSetterType" : "ResolverRuleAssociation"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "ResolverRuleAssociation",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "ResolverRuleAssociation",
          "templateImplType" : "java.util.ArrayList<ResolverRuleAssociation>",
          "templateType" : "java.util.List<ResolverRuleAssociation>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "ResolverRuleAssociations",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The associations that were created between Resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.</p>\n@param resolverRuleAssociations The associations that were created between Resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.*/",
        "setterMethodName" : "setResolverRuleAssociations",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ResolverRuleAssociation>",
          "variableName" : "resolverRuleAssociations",
          "variableType" : "java.util.List<ResolverRuleAssociation>",
          "documentation" : "",
          "simpleType" : "List<ResolverRuleAssociation>",
          "variableSetterType" : "java.util.Collection<ResolverRuleAssociation>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The associations that were created between Resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setResolverRuleAssociations(java.util.Collection)} or {@link #withResolverRuleAssociations(java.util.Collection)} if you want to override the existing values.</p>\n@param resolverRuleAssociations The associations that were created between Resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ResolverRuleAssociation>",
          "variableName" : "resolverRuleAssociations",
          "variableType" : "java.util.List<ResolverRuleAssociation>",
          "documentation" : "<p>The associations that were created between Resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.</p>",
          "simpleType" : "List<ResolverRuleAssociation>",
          "variableSetterType" : "java.util.Collection<ResolverRuleAssociation>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "MaxResults",
          "deprecated" : false,
          "documentation" : "<p>The value that you specified for <code>MaxResults</code> in the request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@return The value that you specified for <code>MaxResults</code> in the request.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>The value that you specified for <code>MaxResults</code> in the request.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResolverRuleAssociations" : {
          "c2jName" : "ResolverRuleAssociations",
          "c2jShape" : "ResolverRuleAssociations",
          "deprecated" : false,
          "documentation" : "<p>The associations that were created between Resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The associations that were created between Resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.</p>\n@param resolverRuleAssociations The associations that were created between Resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverRuleAssociations",
          "getterDocumentation" : "/**<p>The associations that were created between Resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.</p>\n@return The associations that were created between Resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.*/",
          "getterMethodName" : "getResolverRuleAssociations",
          "getterModel" : {
            "returnType" : "java.util.List<ResolverRuleAssociation>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverRuleAssociations",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverRuleAssociations",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ResolverRuleAssociation",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "ResolverRuleAssociation",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ResolverRuleAssociation",
                "variableName" : "member",
                "variableType" : "ResolverRuleAssociation",
                "documentation" : "",
                "simpleType" : "ResolverRuleAssociation",
                "variableSetterType" : "ResolverRuleAssociation"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ResolverRuleAssociation",
                "variableName" : "member",
                "variableType" : "ResolverRuleAssociation",
                "documentation" : "",
                "simpleType" : "ResolverRuleAssociation",
                "variableSetterType" : "ResolverRuleAssociation"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "ResolverRuleAssociation",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "ResolverRuleAssociation",
            "templateImplType" : "java.util.ArrayList<ResolverRuleAssociation>",
            "templateType" : "java.util.List<ResolverRuleAssociation>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "ResolverRuleAssociations",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The associations that were created between Resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.</p>\n@param resolverRuleAssociations The associations that were created between Resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.*/",
          "setterMethodName" : "setResolverRuleAssociations",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ResolverRuleAssociation>",
            "variableName" : "resolverRuleAssociations",
            "variableType" : "java.util.List<ResolverRuleAssociation>",
            "documentation" : "",
            "simpleType" : "List<ResolverRuleAssociation>",
            "variableSetterType" : "java.util.Collection<ResolverRuleAssociation>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The associations that were created between Resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setResolverRuleAssociations(java.util.Collection)} or {@link #withResolverRuleAssociations(java.util.Collection)} if you want to override the existing values.</p>\n@param resolverRuleAssociations The associations that were created between Resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ResolverRuleAssociation>",
            "variableName" : "resolverRuleAssociations",
            "variableType" : "java.util.List<ResolverRuleAssociation>",
            "documentation" : "<p>The associations that were created between Resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.</p>",
            "simpleType" : "List<ResolverRuleAssociation>",
            "variableSetterType" : "java.util.Collection<ResolverRuleAssociation>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListResolverRuleAssociationsResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListResolverRuleAssociationsResult",
        "variableName" : "listResolverRuleAssociationsResult",
        "variableType" : "ListResolverRuleAssociationsResult",
        "documentation" : null,
        "simpleType" : "ListResolverRuleAssociationsResult",
        "variableSetterType" : "ListResolverRuleAssociationsResult"
      },
      "wrapper" : false
    },
    "ListResolverRulesRequest" : {
      "c2jName" : "ListResolverRulesRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.request.ListResolverRulesRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListResolverRules",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.ListResolverRules",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "MaxResults",
        "c2jShape" : "MaxResults",
        "deprecated" : false,
        "documentation" : "<p>The maximum number of Resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver rules.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The maximum number of Resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver rules.</p>\n@param maxResults The maximum number of Resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver rules.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>The maximum number of Resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver rules.</p>\n@return The maximum number of Resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver rules.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The maximum number of Resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver rules.</p>\n@param maxResults The maximum number of Resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver rules.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The maximum number of Resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver rules.</p>\n@param maxResults The maximum number of Resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver rules.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>The maximum number of Resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver rules.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of Resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of Resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of Resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of Resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of Resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of Resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of Resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of Resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of Resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of Resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Filters",
        "c2jShape" : "Filters",
        "deprecated" : false,
        "documentation" : "<p>An optional specification to return a subset of Resolver rules, such as all Resolver rules that are associated with the same Resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An optional specification to return a subset of Resolver rules, such as all Resolver rules that are associated with the same Resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@param filters An optional specification to return a subset of Resolver rules, such as all Resolver rules that are associated with the same Resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFilters",
        "getterDocumentation" : "/**<p>An optional specification to return a subset of Resolver rules, such as all Resolver rules that are associated with the same Resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@return An optional specification to return a subset of Resolver rules, such as all Resolver rules that are associated with the same Resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>*/",
        "getterMethodName" : "getFilters",
        "getterModel" : {
          "returnType" : "java.util.List<Filter>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Filters",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Filters",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Filter",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Filter",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Filter",
              "variableName" : "member",
              "variableType" : "Filter",
              "documentation" : "",
              "simpleType" : "Filter",
              "variableSetterType" : "Filter"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Filter",
              "variableName" : "member",
              "variableType" : "Filter",
              "documentation" : "",
              "simpleType" : "Filter",
              "variableSetterType" : "Filter"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Filter",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Filter",
          "templateImplType" : "java.util.ArrayList<Filter>",
          "templateType" : "java.util.List<Filter>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Filters",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>An optional specification to return a subset of Resolver rules, such as all Resolver rules that are associated with the same Resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@param filters An optional specification to return a subset of Resolver rules, such as all Resolver rules that are associated with the same Resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>*/",
        "setterMethodName" : "setFilters",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Filter>",
          "variableName" : "filters",
          "variableType" : "java.util.List<Filter>",
          "documentation" : "",
          "simpleType" : "List<Filter>",
          "variableSetterType" : "java.util.Collection<Filter>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An optional specification to return a subset of Resolver rules, such as all Resolver rules that are associated with the same Resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFilters(java.util.Collection)} or {@link #withFilters(java.util.Collection)} if you want to override the existing values.</p>\n@param filters An optional specification to return a subset of Resolver rules, such as all Resolver rules that are associated with the same Resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Filter>",
          "variableName" : "filters",
          "variableType" : "java.util.List<Filter>",
          "documentation" : "<p>An optional specification to return a subset of Resolver rules, such as all Resolver rules that are associated with the same Resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>",
          "simpleType" : "List<Filter>",
          "variableSetterType" : "java.util.Collection<Filter>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Filters" : {
          "c2jName" : "Filters",
          "c2jShape" : "Filters",
          "deprecated" : false,
          "documentation" : "<p>An optional specification to return a subset of Resolver rules, such as all Resolver rules that are associated with the same Resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An optional specification to return a subset of Resolver rules, such as all Resolver rules that are associated with the same Resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@param filters An optional specification to return a subset of Resolver rules, such as all Resolver rules that are associated with the same Resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFilters",
          "getterDocumentation" : "/**<p>An optional specification to return a subset of Resolver rules, such as all Resolver rules that are associated with the same Resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@return An optional specification to return a subset of Resolver rules, such as all Resolver rules that are associated with the same Resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>*/",
          "getterMethodName" : "getFilters",
          "getterModel" : {
            "returnType" : "java.util.List<Filter>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Filters",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Filters",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Filter",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Filter",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Filter",
                "variableName" : "member",
                "variableType" : "Filter",
                "documentation" : "",
                "simpleType" : "Filter",
                "variableSetterType" : "Filter"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Filter",
                "variableName" : "member",
                "variableType" : "Filter",
                "documentation" : "",
                "simpleType" : "Filter",
                "variableSetterType" : "Filter"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Filter",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Filter",
            "templateImplType" : "java.util.ArrayList<Filter>",
            "templateType" : "java.util.List<Filter>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Filters",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>An optional specification to return a subset of Resolver rules, such as all Resolver rules that are associated with the same Resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@param filters An optional specification to return a subset of Resolver rules, such as all Resolver rules that are associated with the same Resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>*/",
          "setterMethodName" : "setFilters",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Filter>",
            "variableName" : "filters",
            "variableType" : "java.util.List<Filter>",
            "documentation" : "",
            "simpleType" : "List<Filter>",
            "variableSetterType" : "java.util.Collection<Filter>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An optional specification to return a subset of Resolver rules, such as all Resolver rules that are associated with the same Resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFilters(java.util.Collection)} or {@link #withFilters(java.util.Collection)} if you want to override the existing values.</p>\n@param filters An optional specification to return a subset of Resolver rules, such as all Resolver rules that are associated with the same Resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Filter>",
            "variableName" : "filters",
            "variableType" : "java.util.List<Filter>",
            "documentation" : "<p>An optional specification to return a subset of Resolver rules, such as all Resolver rules that are associated with the same Resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>",
            "simpleType" : "List<Filter>",
            "variableSetterType" : "java.util.Collection<Filter>"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "MaxResults",
          "deprecated" : false,
          "documentation" : "<p>The maximum number of Resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver rules.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The maximum number of Resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver rules.</p>\n@param maxResults The maximum number of Resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver rules.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>The maximum number of Resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver rules.</p>\n@return The maximum number of Resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver rules.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The maximum number of Resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver rules.</p>\n@param maxResults The maximum number of Resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver rules.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The maximum number of Resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver rules.</p>\n@param maxResults The maximum number of Resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver rules.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>The maximum number of Resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 Resolver rules.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of Resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of Resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of Resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of Resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of Resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of Resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of Resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of Resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of Resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> Resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of Resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListResolverRulesRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListResolverRulesRequest",
        "variableName" : "listResolverRulesRequest",
        "variableType" : "ListResolverRulesRequest",
        "documentation" : null,
        "simpleType" : "ListResolverRulesRequest",
        "variableSetterType" : "ListResolverRulesRequest"
      },
      "wrapper" : false
    },
    "ListResolverRulesResult" : {
      "c2jName" : "ListResolverRulesResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.response.ListResolverRulesResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>If more than <code>MaxResults</code> Resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>If more than <code>MaxResults</code> Resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> Resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>If more than <code>MaxResults</code> Resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return If more than <code>MaxResults</code> Resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>If more than <code>MaxResults</code> Resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> Resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>If more than <code>MaxResults</code> Resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> Resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>If more than <code>MaxResults</code> Resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MaxResults",
        "c2jShape" : "MaxResults",
        "deprecated" : false,
        "documentation" : "<p>The value that you specified for <code>MaxResults</code> in the request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@return The value that you specified for <code>MaxResults</code> in the request.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>The value that you specified for <code>MaxResults</code> in the request.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ResolverRules",
        "c2jShape" : "ResolverRules",
        "deprecated" : false,
        "documentation" : "<p>The Resolver rules that were created using the current AWS account and that match the specified filters, if any.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The Resolver rules that were created using the current AWS account and that match the specified filters, if any.</p>\n@param resolverRules The Resolver rules that were created using the current AWS account and that match the specified filters, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverRules",
        "getterDocumentation" : "/**<p>The Resolver rules that were created using the current AWS account and that match the specified filters, if any.</p>\n@return The Resolver rules that were created using the current AWS account and that match the specified filters, if any.*/",
        "getterMethodName" : "getResolverRules",
        "getterModel" : {
          "returnType" : "java.util.List<ResolverRule>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverRules",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverRules",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ResolverRule",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "ResolverRule",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ResolverRule",
              "variableName" : "member",
              "variableType" : "ResolverRule",
              "documentation" : "",
              "simpleType" : "ResolverRule",
              "variableSetterType" : "ResolverRule"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ResolverRule",
              "variableName" : "member",
              "variableType" : "ResolverRule",
              "documentation" : "",
              "simpleType" : "ResolverRule",
              "variableSetterType" : "ResolverRule"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "ResolverRule",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "ResolverRule",
          "templateImplType" : "java.util.ArrayList<ResolverRule>",
          "templateType" : "java.util.List<ResolverRule>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "ResolverRules",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The Resolver rules that were created using the current AWS account and that match the specified filters, if any.</p>\n@param resolverRules The Resolver rules that were created using the current AWS account and that match the specified filters, if any.*/",
        "setterMethodName" : "setResolverRules",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ResolverRule>",
          "variableName" : "resolverRules",
          "variableType" : "java.util.List<ResolverRule>",
          "documentation" : "",
          "simpleType" : "List<ResolverRule>",
          "variableSetterType" : "java.util.Collection<ResolverRule>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The Resolver rules that were created using the current AWS account and that match the specified filters, if any.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setResolverRules(java.util.Collection)} or {@link #withResolverRules(java.util.Collection)} if you want to override the existing values.</p>\n@param resolverRules The Resolver rules that were created using the current AWS account and that match the specified filters, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ResolverRule>",
          "variableName" : "resolverRules",
          "variableType" : "java.util.List<ResolverRule>",
          "documentation" : "<p>The Resolver rules that were created using the current AWS account and that match the specified filters, if any.</p>",
          "simpleType" : "List<ResolverRule>",
          "variableSetterType" : "java.util.Collection<ResolverRule>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "MaxResults",
          "deprecated" : false,
          "documentation" : "<p>The value that you specified for <code>MaxResults</code> in the request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@return The value that you specified for <code>MaxResults</code> in the request.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>The value that you specified for <code>MaxResults</code> in the request.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>If more than <code>MaxResults</code> Resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>If more than <code>MaxResults</code> Resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> Resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>If more than <code>MaxResults</code> Resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return If more than <code>MaxResults</code> Resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>If more than <code>MaxResults</code> Resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> Resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>If more than <code>MaxResults</code> Resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> Resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>If more than <code>MaxResults</code> Resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResolverRules" : {
          "c2jName" : "ResolverRules",
          "c2jShape" : "ResolverRules",
          "deprecated" : false,
          "documentation" : "<p>The Resolver rules that were created using the current AWS account and that match the specified filters, if any.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The Resolver rules that were created using the current AWS account and that match the specified filters, if any.</p>\n@param resolverRules The Resolver rules that were created using the current AWS account and that match the specified filters, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverRules",
          "getterDocumentation" : "/**<p>The Resolver rules that were created using the current AWS account and that match the specified filters, if any.</p>\n@return The Resolver rules that were created using the current AWS account and that match the specified filters, if any.*/",
          "getterMethodName" : "getResolverRules",
          "getterModel" : {
            "returnType" : "java.util.List<ResolverRule>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverRules",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverRules",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ResolverRule",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "ResolverRule",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ResolverRule",
                "variableName" : "member",
                "variableType" : "ResolverRule",
                "documentation" : "",
                "simpleType" : "ResolverRule",
                "variableSetterType" : "ResolverRule"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ResolverRule",
                "variableName" : "member",
                "variableType" : "ResolverRule",
                "documentation" : "",
                "simpleType" : "ResolverRule",
                "variableSetterType" : "ResolverRule"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "ResolverRule",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "ResolverRule",
            "templateImplType" : "java.util.ArrayList<ResolverRule>",
            "templateType" : "java.util.List<ResolverRule>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "ResolverRules",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The Resolver rules that were created using the current AWS account and that match the specified filters, if any.</p>\n@param resolverRules The Resolver rules that were created using the current AWS account and that match the specified filters, if any.*/",
          "setterMethodName" : "setResolverRules",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ResolverRule>",
            "variableName" : "resolverRules",
            "variableType" : "java.util.List<ResolverRule>",
            "documentation" : "",
            "simpleType" : "List<ResolverRule>",
            "variableSetterType" : "java.util.Collection<ResolverRule>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The Resolver rules that were created using the current AWS account and that match the specified filters, if any.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setResolverRules(java.util.Collection)} or {@link #withResolverRules(java.util.Collection)} if you want to override the existing values.</p>\n@param resolverRules The Resolver rules that were created using the current AWS account and that match the specified filters, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ResolverRule>",
            "variableName" : "resolverRules",
            "variableType" : "java.util.List<ResolverRule>",
            "documentation" : "<p>The Resolver rules that were created using the current AWS account and that match the specified filters, if any.</p>",
            "simpleType" : "List<ResolverRule>",
            "variableSetterType" : "java.util.Collection<ResolverRule>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListResolverRulesResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListResolverRulesResult",
        "variableName" : "listResolverRulesResult",
        "variableType" : "ListResolverRulesResult",
        "documentation" : null,
        "simpleType" : "ListResolverRulesResult",
        "variableSetterType" : "ListResolverRulesResult"
      },
      "wrapper" : false
    },
    "ListTagsForResourceRequest" : {
      "c2jName" : "ListTagsForResourceRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.request.ListTagsForResourceRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListTagsForResource",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.ListTagsForResource",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResourceArn",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>The Amazon Resource Name (ARN) for the resource that you want to list tags for.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to list tags for.</p>\n@param resourceArn The Amazon Resource Name (ARN) for the resource that you want to list tags for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceArn",
        "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to list tags for.</p>\n@return The Amazon Resource Name (ARN) for the resource that you want to list tags for.*/",
        "getterMethodName" : "getResourceArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceArn",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceArn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to list tags for.</p>\n@param resourceArn The Amazon Resource Name (ARN) for the resource that you want to list tags for.*/",
        "setterMethodName" : "setResourceArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to list tags for.</p>\n@param resourceArn The Amazon Resource Name (ARN) for the resource that you want to list tags for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceArn",
          "variableType" : "String",
          "documentation" : "<p>The Amazon Resource Name (ARN) for the resource that you want to list tags for.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MaxResults",
        "c2jShape" : "MaxResults",
        "deprecated" : false,
        "documentation" : "<p>The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.</p>\n@param maxResults The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.</p>\n@return The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.</p>\n@param maxResults The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.</p>\n@param maxResults The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "MaxResults",
          "deprecated" : false,
          "documentation" : "<p>The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.</p>\n@param maxResults The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.</p>\n@return The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.</p>\n@param maxResults The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.</p>\n@param maxResults The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResourceArn" : {
          "c2jName" : "ResourceArn",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>The Amazon Resource Name (ARN) for the resource that you want to list tags for.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to list tags for.</p>\n@param resourceArn The Amazon Resource Name (ARN) for the resource that you want to list tags for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceArn",
          "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to list tags for.</p>\n@return The Amazon Resource Name (ARN) for the resource that you want to list tags for.*/",
          "getterMethodName" : "getResourceArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceArn",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceArn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to list tags for.</p>\n@param resourceArn The Amazon Resource Name (ARN) for the resource that you want to list tags for.*/",
          "setterMethodName" : "setResourceArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to list tags for.</p>\n@param resourceArn The Amazon Resource Name (ARN) for the resource that you want to list tags for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceArn",
            "variableType" : "String",
            "documentation" : "<p>The Amazon Resource Name (ARN) for the resource that you want to list tags for.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResourceArn" ],
      "shapeName" : "ListTagsForResourceRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListTagsForResourceRequest",
        "variableName" : "listTagsForResourceRequest",
        "variableType" : "ListTagsForResourceRequest",
        "documentation" : null,
        "simpleType" : "ListTagsForResourceRequest",
        "variableSetterType" : "ListTagsForResourceRequest"
      },
      "wrapper" : false
    },
    "ListTagsForResourceResult" : {
      "c2jName" : "ListTagsForResourceResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.response.ListTagsForResourceResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Tags",
        "c2jShape" : "TagList",
        "deprecated" : false,
        "documentation" : "<p>The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.</p>\n@param tags The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTags",
        "getterDocumentation" : "/**<p>The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.</p>\n@return The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.*/",
        "getterMethodName" : "getTags",
        "getterModel" : {
          "returnType" : "java.util.List<Tag>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Tags",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Tags",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Tag",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Tag",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Tag",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Tag",
          "templateImplType" : "java.util.ArrayList<Tag>",
          "templateType" : "java.util.List<Tag>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Tags",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.</p>\n@param tags The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.*/",
        "setterMethodName" : "setTags",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "<p>The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.</p>",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Tags" : {
          "c2jName" : "Tags",
          "c2jShape" : "TagList",
          "deprecated" : false,
          "documentation" : "<p>The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.</p>\n@param tags The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTags",
          "getterDocumentation" : "/**<p>The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.</p>\n@return The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.*/",
          "getterMethodName" : "getTags",
          "getterModel" : {
            "returnType" : "java.util.List<Tag>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Tags",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Tags",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Tag",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Tag",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Tag",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Tag",
            "templateImplType" : "java.util.ArrayList<Tag>",
            "templateType" : "java.util.List<Tag>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Tags",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.</p>\n@param tags The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.*/",
          "setterMethodName" : "setTags",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "<p>The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.</p>",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListTagsForResourceResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListTagsForResourceResult",
        "variableName" : "listTagsForResourceResult",
        "variableType" : "ListTagsForResourceResult",
        "documentation" : null,
        "simpleType" : "ListTagsForResourceResult",
        "variableSetterType" : "ListTagsForResourceResult"
      },
      "wrapper" : false
    },
    "PutResolverQueryLogConfigPolicyRequest" : {
      "c2jName" : "PutResolverQueryLogConfigPolicyRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.request.PutResolverQueryLogConfigPolicyRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "PutResolverQueryLogConfigPolicy",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.PutResolverQueryLogConfigPolicy",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "Arn",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>The Amazon Resource Name (ARN) of the account that you want to share rules with.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the account that you want to share rules with.</p>\n@param arn The Amazon Resource Name (ARN) of the account that you want to share rules with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withArn",
        "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the account that you want to share rules with.</p>\n@return The Amazon Resource Name (ARN) of the account that you want to share rules with.*/",
        "getterMethodName" : "getArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Arn",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Arn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Arn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the account that you want to share rules with.</p>\n@param arn The Amazon Resource Name (ARN) of the account that you want to share rules with.*/",
        "setterMethodName" : "setArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the account that you want to share rules with.</p>\n@param arn The Amazon Resource Name (ARN) of the account that you want to share rules with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "<p>The Amazon Resource Name (ARN) of the account that you want to share rules with.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ResolverQueryLogConfigPolicy",
        "c2jShape" : "ResolverQueryLogConfigPolicy",
        "deprecated" : false,
        "documentation" : "<p>An AWS Identity and Access Management policy statement that lists the query logging configurations that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Actions</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:AssociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigAssociations</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigs</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, you specify the ARNs for the query logging configurations that you want to share with the account that you specified in <code>Arn</code>. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An AWS Identity and Access Management policy statement that lists the query logging configurations that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Actions</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:AssociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigAssociations</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigs</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, you specify the ARNs for the query logging configurations that you want to share with the account that you specified in <code>Arn</code>. </p>\n@param resolverQueryLogConfigPolicy An AWS Identity and Access Management policy statement that lists the query logging configurations that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Actions</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:AssociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigAssociations</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigs</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, you specify the ARNs for the query logging configurations that you want to share with the account that you specified in <code>Arn</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverQueryLogConfigPolicy",
        "getterDocumentation" : "/**<p>An AWS Identity and Access Management policy statement that lists the query logging configurations that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Actions</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:AssociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigAssociations</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigs</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, you specify the ARNs for the query logging configurations that you want to share with the account that you specified in <code>Arn</code>. </p>\n@return An AWS Identity and Access Management policy statement that lists the query logging configurations that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Actions</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:AssociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigAssociations</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigs</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, you specify the ARNs for the query logging configurations that you want to share with the account that you specified in <code>Arn</code>.*/",
        "getterMethodName" : "getResolverQueryLogConfigPolicy",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverQueryLogConfigPolicy",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverQueryLogConfigPolicy",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverQueryLogConfigPolicy",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>An AWS Identity and Access Management policy statement that lists the query logging configurations that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Actions</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:AssociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigAssociations</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigs</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, you specify the ARNs for the query logging configurations that you want to share with the account that you specified in <code>Arn</code>. </p>\n@param resolverQueryLogConfigPolicy An AWS Identity and Access Management policy statement that lists the query logging configurations that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Actions</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:AssociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigAssociations</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigs</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, you specify the ARNs for the query logging configurations that you want to share with the account that you specified in <code>Arn</code>.*/",
        "setterMethodName" : "setResolverQueryLogConfigPolicy",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverQueryLogConfigPolicy",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An AWS Identity and Access Management policy statement that lists the query logging configurations that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Actions</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:AssociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigAssociations</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigs</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, you specify the ARNs for the query logging configurations that you want to share with the account that you specified in <code>Arn</code>. </p>\n@param resolverQueryLogConfigPolicy An AWS Identity and Access Management policy statement that lists the query logging configurations that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Actions</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:AssociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigAssociations</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigs</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, you specify the ARNs for the query logging configurations that you want to share with the account that you specified in <code>Arn</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverQueryLogConfigPolicy",
          "variableType" : "String",
          "documentation" : "<p>An AWS Identity and Access Management policy statement that lists the query logging configurations that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Actions</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:AssociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigAssociations</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigs</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, you specify the ARNs for the query logging configurations that you want to share with the account that you specified in <code>Arn</code>. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Arn" : {
          "c2jName" : "Arn",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>The Amazon Resource Name (ARN) of the account that you want to share rules with.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the account that you want to share rules with.</p>\n@param arn The Amazon Resource Name (ARN) of the account that you want to share rules with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withArn",
          "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the account that you want to share rules with.</p>\n@return The Amazon Resource Name (ARN) of the account that you want to share rules with.*/",
          "getterMethodName" : "getArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Arn",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Arn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Arn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the account that you want to share rules with.</p>\n@param arn The Amazon Resource Name (ARN) of the account that you want to share rules with.*/",
          "setterMethodName" : "setArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the account that you want to share rules with.</p>\n@param arn The Amazon Resource Name (ARN) of the account that you want to share rules with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "<p>The Amazon Resource Name (ARN) of the account that you want to share rules with.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResolverQueryLogConfigPolicy" : {
          "c2jName" : "ResolverQueryLogConfigPolicy",
          "c2jShape" : "ResolverQueryLogConfigPolicy",
          "deprecated" : false,
          "documentation" : "<p>An AWS Identity and Access Management policy statement that lists the query logging configurations that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Actions</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:AssociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigAssociations</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigs</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, you specify the ARNs for the query logging configurations that you want to share with the account that you specified in <code>Arn</code>. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An AWS Identity and Access Management policy statement that lists the query logging configurations that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Actions</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:AssociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigAssociations</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigs</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, you specify the ARNs for the query logging configurations that you want to share with the account that you specified in <code>Arn</code>. </p>\n@param resolverQueryLogConfigPolicy An AWS Identity and Access Management policy statement that lists the query logging configurations that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Actions</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:AssociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigAssociations</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigs</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, you specify the ARNs for the query logging configurations that you want to share with the account that you specified in <code>Arn</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverQueryLogConfigPolicy",
          "getterDocumentation" : "/**<p>An AWS Identity and Access Management policy statement that lists the query logging configurations that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Actions</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:AssociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigAssociations</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigs</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, you specify the ARNs for the query logging configurations that you want to share with the account that you specified in <code>Arn</code>. </p>\n@return An AWS Identity and Access Management policy statement that lists the query logging configurations that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Actions</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:AssociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigAssociations</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigs</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, you specify the ARNs for the query logging configurations that you want to share with the account that you specified in <code>Arn</code>.*/",
          "getterMethodName" : "getResolverQueryLogConfigPolicy",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverQueryLogConfigPolicy",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverQueryLogConfigPolicy",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverQueryLogConfigPolicy",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>An AWS Identity and Access Management policy statement that lists the query logging configurations that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Actions</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:AssociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigAssociations</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigs</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, you specify the ARNs for the query logging configurations that you want to share with the account that you specified in <code>Arn</code>. </p>\n@param resolverQueryLogConfigPolicy An AWS Identity and Access Management policy statement that lists the query logging configurations that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Actions</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:AssociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigAssociations</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigs</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, you specify the ARNs for the query logging configurations that you want to share with the account that you specified in <code>Arn</code>.*/",
          "setterMethodName" : "setResolverQueryLogConfigPolicy",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverQueryLogConfigPolicy",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An AWS Identity and Access Management policy statement that lists the query logging configurations that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Actions</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:AssociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigAssociations</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigs</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, you specify the ARNs for the query logging configurations that you want to share with the account that you specified in <code>Arn</code>. </p>\n@param resolverQueryLogConfigPolicy An AWS Identity and Access Management policy statement that lists the query logging configurations that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Actions</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:AssociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigAssociations</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigs</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, you specify the ARNs for the query logging configurations that you want to share with the account that you specified in <code>Arn</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverQueryLogConfigPolicy",
            "variableType" : "String",
            "documentation" : "<p>An AWS Identity and Access Management policy statement that lists the query logging configurations that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Actions</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:AssociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverQueryLogConfig</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigAssociations</code> </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigs</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, you specify the ARNs for the query logging configurations that you want to share with the account that you specified in <code>Arn</code>. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Arn", "ResolverQueryLogConfigPolicy" ],
      "shapeName" : "PutResolverQueryLogConfigPolicyRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "PutResolverQueryLogConfigPolicyRequest",
        "variableName" : "putResolverQueryLogConfigPolicyRequest",
        "variableType" : "PutResolverQueryLogConfigPolicyRequest",
        "documentation" : null,
        "simpleType" : "PutResolverQueryLogConfigPolicyRequest",
        "variableSetterType" : "PutResolverQueryLogConfigPolicyRequest"
      },
      "wrapper" : false
    },
    "PutResolverQueryLogConfigPolicyResult" : {
      "c2jName" : "PutResolverQueryLogConfigPolicyResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The response to a <code>PutResolverQueryLogConfigPolicy</code> request.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.response.PutResolverQueryLogConfigPolicyResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ReturnValue",
        "c2jShape" : "Boolean",
        "deprecated" : false,
        "documentation" : "<p>Whether the <code>PutResolverQueryLogConfigPolicy</code> request was successful.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Whether the <code>PutResolverQueryLogConfigPolicy</code> request was successful.</p>\n@param returnValue Whether the <code>PutResolverQueryLogConfigPolicy</code> request was successful.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withReturnValue",
        "getterDocumentation" : "/**<p>Whether the <code>PutResolverQueryLogConfigPolicy</code> request was successful.</p>\n@return Whether the <code>PutResolverQueryLogConfigPolicy</code> request was successful.*/",
        "getterMethodName" : "getReturnValue",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ReturnValue",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ReturnValue",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "ReturnValue",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Whether the <code>PutResolverQueryLogConfigPolicy</code> request was successful.</p>\n@param returnValue Whether the <code>PutResolverQueryLogConfigPolicy</code> request was successful.*/",
        "setterMethodName" : "setReturnValue",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "returnValue",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Whether the <code>PutResolverQueryLogConfigPolicy</code> request was successful.</p>\n@param returnValue Whether the <code>PutResolverQueryLogConfigPolicy</code> request was successful.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "returnValue",
          "variableType" : "Boolean",
          "documentation" : "<p>Whether the <code>PutResolverQueryLogConfigPolicy</code> request was successful.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ReturnValue" : {
          "c2jName" : "ReturnValue",
          "c2jShape" : "Boolean",
          "deprecated" : false,
          "documentation" : "<p>Whether the <code>PutResolverQueryLogConfigPolicy</code> request was successful.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Whether the <code>PutResolverQueryLogConfigPolicy</code> request was successful.</p>\n@param returnValue Whether the <code>PutResolverQueryLogConfigPolicy</code> request was successful.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withReturnValue",
          "getterDocumentation" : "/**<p>Whether the <code>PutResolverQueryLogConfigPolicy</code> request was successful.</p>\n@return Whether the <code>PutResolverQueryLogConfigPolicy</code> request was successful.*/",
          "getterMethodName" : "getReturnValue",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ReturnValue",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ReturnValue",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "ReturnValue",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Whether the <code>PutResolverQueryLogConfigPolicy</code> request was successful.</p>\n@param returnValue Whether the <code>PutResolverQueryLogConfigPolicy</code> request was successful.*/",
          "setterMethodName" : "setReturnValue",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "returnValue",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Whether the <code>PutResolverQueryLogConfigPolicy</code> request was successful.</p>\n@param returnValue Whether the <code>PutResolverQueryLogConfigPolicy</code> request was successful.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "returnValue",
            "variableType" : "Boolean",
            "documentation" : "<p>Whether the <code>PutResolverQueryLogConfigPolicy</code> request was successful.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "PutResolverQueryLogConfigPolicyResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "PutResolverQueryLogConfigPolicyResult",
        "variableName" : "putResolverQueryLogConfigPolicyResult",
        "variableType" : "PutResolverQueryLogConfigPolicyResult",
        "documentation" : null,
        "simpleType" : "PutResolverQueryLogConfigPolicyResult",
        "variableSetterType" : "PutResolverQueryLogConfigPolicyResult"
      },
      "wrapper" : false
    },
    "PutResolverRulePolicyRequest" : {
      "c2jName" : "PutResolverRulePolicyRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.request.PutResolverRulePolicyRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "PutResolverRulePolicy",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.PutResolverRulePolicy",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "Arn",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>The Amazon Resource Name (ARN) of the rule that you want to share with another account.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the rule that you want to share with another account.</p>\n@param arn The Amazon Resource Name (ARN) of the rule that you want to share with another account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withArn",
        "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the rule that you want to share with another account.</p>\n@return The Amazon Resource Name (ARN) of the rule that you want to share with another account.*/",
        "getterMethodName" : "getArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Arn",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Arn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Arn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the rule that you want to share with another account.</p>\n@param arn The Amazon Resource Name (ARN) of the rule that you want to share with another account.*/",
        "setterMethodName" : "setArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the rule that you want to share with another account.</p>\n@param arn The Amazon Resource Name (ARN) of the rule that you want to share with another account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "<p>The Amazon Resource Name (ARN) of the rule that you want to share with another account.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ResolverRulePolicy",
        "c2jShape" : "ResolverRulePolicy",
        "deprecated" : false,
        "documentation" : "<p>An AWS Identity and Access Management policy statement that lists the rules that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Action</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:GetResolverRule</code> </p> </li> <li> <p> <code>route53resolver:AssociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRules</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRuleAssociations</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, specify the ARN for the rule that you want to share with another account. Specify the same ARN that you specified in <code>Arn</code>.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An AWS Identity and Access Management policy statement that lists the rules that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Action</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:GetResolverRule</code> </p> </li> <li> <p> <code>route53resolver:AssociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRules</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRuleAssociations</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, specify the ARN for the rule that you want to share with another account. Specify the same ARN that you specified in <code>Arn</code>.</p>\n@param resolverRulePolicy An AWS Identity and Access Management policy statement that lists the rules that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Action</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:GetResolverRule</code> </p> </li> <li> <p> <code>route53resolver:AssociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRules</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRuleAssociations</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, specify the ARN for the rule that you want to share with another account. Specify the same ARN that you specified in <code>Arn</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverRulePolicy",
        "getterDocumentation" : "/**<p>An AWS Identity and Access Management policy statement that lists the rules that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Action</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:GetResolverRule</code> </p> </li> <li> <p> <code>route53resolver:AssociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRules</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRuleAssociations</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, specify the ARN for the rule that you want to share with another account. Specify the same ARN that you specified in <code>Arn</code>.</p>\n@return An AWS Identity and Access Management policy statement that lists the rules that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Action</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:GetResolverRule</code> </p> </li> <li> <p> <code>route53resolver:AssociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRules</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRuleAssociations</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, specify the ARN for the rule that you want to share with another account. Specify the same ARN that you specified in <code>Arn</code>.*/",
        "getterMethodName" : "getResolverRulePolicy",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverRulePolicy",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverRulePolicy",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverRulePolicy",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>An AWS Identity and Access Management policy statement that lists the rules that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Action</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:GetResolverRule</code> </p> </li> <li> <p> <code>route53resolver:AssociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRules</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRuleAssociations</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, specify the ARN for the rule that you want to share with another account. Specify the same ARN that you specified in <code>Arn</code>.</p>\n@param resolverRulePolicy An AWS Identity and Access Management policy statement that lists the rules that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Action</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:GetResolverRule</code> </p> </li> <li> <p> <code>route53resolver:AssociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRules</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRuleAssociations</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, specify the ARN for the rule that you want to share with another account. Specify the same ARN that you specified in <code>Arn</code>.*/",
        "setterMethodName" : "setResolverRulePolicy",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverRulePolicy",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An AWS Identity and Access Management policy statement that lists the rules that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Action</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:GetResolverRule</code> </p> </li> <li> <p> <code>route53resolver:AssociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRules</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRuleAssociations</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, specify the ARN for the rule that you want to share with another account. Specify the same ARN that you specified in <code>Arn</code>.</p>\n@param resolverRulePolicy An AWS Identity and Access Management policy statement that lists the rules that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Action</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:GetResolverRule</code> </p> </li> <li> <p> <code>route53resolver:AssociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRules</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRuleAssociations</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, specify the ARN for the rule that you want to share with another account. Specify the same ARN that you specified in <code>Arn</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverRulePolicy",
          "variableType" : "String",
          "documentation" : "<p>An AWS Identity and Access Management policy statement that lists the rules that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Action</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:GetResolverRule</code> </p> </li> <li> <p> <code>route53resolver:AssociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRules</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRuleAssociations</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, specify the ARN for the rule that you want to share with another account. Specify the same ARN that you specified in <code>Arn</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Arn" : {
          "c2jName" : "Arn",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>The Amazon Resource Name (ARN) of the rule that you want to share with another account.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the rule that you want to share with another account.</p>\n@param arn The Amazon Resource Name (ARN) of the rule that you want to share with another account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withArn",
          "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the rule that you want to share with another account.</p>\n@return The Amazon Resource Name (ARN) of the rule that you want to share with another account.*/",
          "getterMethodName" : "getArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Arn",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Arn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Arn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the rule that you want to share with another account.</p>\n@param arn The Amazon Resource Name (ARN) of the rule that you want to share with another account.*/",
          "setterMethodName" : "setArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the rule that you want to share with another account.</p>\n@param arn The Amazon Resource Name (ARN) of the rule that you want to share with another account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "<p>The Amazon Resource Name (ARN) of the rule that you want to share with another account.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResolverRulePolicy" : {
          "c2jName" : "ResolverRulePolicy",
          "c2jShape" : "ResolverRulePolicy",
          "deprecated" : false,
          "documentation" : "<p>An AWS Identity and Access Management policy statement that lists the rules that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Action</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:GetResolverRule</code> </p> </li> <li> <p> <code>route53resolver:AssociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRules</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRuleAssociations</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, specify the ARN for the rule that you want to share with another account. Specify the same ARN that you specified in <code>Arn</code>.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An AWS Identity and Access Management policy statement that lists the rules that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Action</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:GetResolverRule</code> </p> </li> <li> <p> <code>route53resolver:AssociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRules</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRuleAssociations</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, specify the ARN for the rule that you want to share with another account. Specify the same ARN that you specified in <code>Arn</code>.</p>\n@param resolverRulePolicy An AWS Identity and Access Management policy statement that lists the rules that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Action</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:GetResolverRule</code> </p> </li> <li> <p> <code>route53resolver:AssociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRules</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRuleAssociations</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, specify the ARN for the rule that you want to share with another account. Specify the same ARN that you specified in <code>Arn</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverRulePolicy",
          "getterDocumentation" : "/**<p>An AWS Identity and Access Management policy statement that lists the rules that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Action</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:GetResolverRule</code> </p> </li> <li> <p> <code>route53resolver:AssociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRules</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRuleAssociations</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, specify the ARN for the rule that you want to share with another account. Specify the same ARN that you specified in <code>Arn</code>.</p>\n@return An AWS Identity and Access Management policy statement that lists the rules that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Action</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:GetResolverRule</code> </p> </li> <li> <p> <code>route53resolver:AssociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRules</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRuleAssociations</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, specify the ARN for the rule that you want to share with another account. Specify the same ARN that you specified in <code>Arn</code>.*/",
          "getterMethodName" : "getResolverRulePolicy",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverRulePolicy",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverRulePolicy",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverRulePolicy",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>An AWS Identity and Access Management policy statement that lists the rules that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Action</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:GetResolverRule</code> </p> </li> <li> <p> <code>route53resolver:AssociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRules</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRuleAssociations</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, specify the ARN for the rule that you want to share with another account. Specify the same ARN that you specified in <code>Arn</code>.</p>\n@param resolverRulePolicy An AWS Identity and Access Management policy statement that lists the rules that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Action</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:GetResolverRule</code> </p> </li> <li> <p> <code>route53resolver:AssociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRules</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRuleAssociations</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, specify the ARN for the rule that you want to share with another account. Specify the same ARN that you specified in <code>Arn</code>.*/",
          "setterMethodName" : "setResolverRulePolicy",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverRulePolicy",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An AWS Identity and Access Management policy statement that lists the rules that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Action</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:GetResolverRule</code> </p> </li> <li> <p> <code>route53resolver:AssociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRules</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRuleAssociations</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, specify the ARN for the rule that you want to share with another account. Specify the same ARN that you specified in <code>Arn</code>.</p>\n@param resolverRulePolicy An AWS Identity and Access Management policy statement that lists the rules that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Action</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:GetResolverRule</code> </p> </li> <li> <p> <code>route53resolver:AssociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRules</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRuleAssociations</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, specify the ARN for the rule that you want to share with another account. Specify the same ARN that you specified in <code>Arn</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverRulePolicy",
            "variableType" : "String",
            "documentation" : "<p>An AWS Identity and Access Management policy statement that lists the rules that you want to share with another AWS account and the operations that you want the account to be able to perform. You can specify the following operations in the <code>Action</code> section of the statement:</p> <ul> <li> <p> <code>route53resolver:GetResolverRule</code> </p> </li> <li> <p> <code>route53resolver:AssociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:DisassociateResolverRule</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRules</code> </p> </li> <li> <p> <code>route53resolver:ListResolverRuleAssociations</code> </p> </li> </ul> <p>In the <code>Resource</code> section of the statement, specify the ARN for the rule that you want to share with another account. Specify the same ARN that you specified in <code>Arn</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Arn", "ResolverRulePolicy" ],
      "shapeName" : "PutResolverRulePolicyRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "PutResolverRulePolicyRequest",
        "variableName" : "putResolverRulePolicyRequest",
        "variableType" : "PutResolverRulePolicyRequest",
        "documentation" : null,
        "simpleType" : "PutResolverRulePolicyRequest",
        "variableSetterType" : "PutResolverRulePolicyRequest"
      },
      "wrapper" : false
    },
    "PutResolverRulePolicyResult" : {
      "c2jName" : "PutResolverRulePolicyResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The response to a <code>PutResolverRulePolicy</code> request.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.response.PutResolverRulePolicyResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ReturnValue",
        "c2jShape" : "Boolean",
        "deprecated" : false,
        "documentation" : "<p>Whether the <code>PutResolverRulePolicy</code> request was successful.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Whether the <code>PutResolverRulePolicy</code> request was successful.</p>\n@param returnValue Whether the <code>PutResolverRulePolicy</code> request was successful.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withReturnValue",
        "getterDocumentation" : "/**<p>Whether the <code>PutResolverRulePolicy</code> request was successful.</p>\n@return Whether the <code>PutResolverRulePolicy</code> request was successful.*/",
        "getterMethodName" : "getReturnValue",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ReturnValue",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ReturnValue",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "ReturnValue",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Whether the <code>PutResolverRulePolicy</code> request was successful.</p>\n@param returnValue Whether the <code>PutResolverRulePolicy</code> request was successful.*/",
        "setterMethodName" : "setReturnValue",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "returnValue",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Whether the <code>PutResolverRulePolicy</code> request was successful.</p>\n@param returnValue Whether the <code>PutResolverRulePolicy</code> request was successful.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "returnValue",
          "variableType" : "Boolean",
          "documentation" : "<p>Whether the <code>PutResolverRulePolicy</code> request was successful.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ReturnValue" : {
          "c2jName" : "ReturnValue",
          "c2jShape" : "Boolean",
          "deprecated" : false,
          "documentation" : "<p>Whether the <code>PutResolverRulePolicy</code> request was successful.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Whether the <code>PutResolverRulePolicy</code> request was successful.</p>\n@param returnValue Whether the <code>PutResolverRulePolicy</code> request was successful.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withReturnValue",
          "getterDocumentation" : "/**<p>Whether the <code>PutResolverRulePolicy</code> request was successful.</p>\n@return Whether the <code>PutResolverRulePolicy</code> request was successful.*/",
          "getterMethodName" : "getReturnValue",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ReturnValue",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ReturnValue",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "ReturnValue",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Whether the <code>PutResolverRulePolicy</code> request was successful.</p>\n@param returnValue Whether the <code>PutResolverRulePolicy</code> request was successful.*/",
          "setterMethodName" : "setReturnValue",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "returnValue",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Whether the <code>PutResolverRulePolicy</code> request was successful.</p>\n@param returnValue Whether the <code>PutResolverRulePolicy</code> request was successful.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "returnValue",
            "variableType" : "Boolean",
            "documentation" : "<p>Whether the <code>PutResolverRulePolicy</code> request was successful.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "PutResolverRulePolicyResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "PutResolverRulePolicyResult",
        "variableName" : "putResolverRulePolicyResult",
        "variableType" : "PutResolverRulePolicyResult",
        "documentation" : null,
        "simpleType" : "PutResolverRulePolicyResult",
        "variableSetterType" : "PutResolverRulePolicyResult"
      },
      "wrapper" : false
    },
    "ResolverDNSSECValidationStatus" : {
      "c2jName" : "ResolverDNSSECValidationStatus",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : [ {
        "name" : "ENABLING",
        "value" : "ENABLING"
      }, {
        "name" : "ENABLED",
        "value" : "ENABLED"
      }, {
        "name" : "DISABLING",
        "value" : "DISABLING"
      }, {
        "name" : "DISABLED",
        "value" : "DISABLED"
      } ],
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.enum.ResolverDNSSECValidationStatus",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.route53resolver.enum",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResolverDNSSECValidationStatus",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResolverDNSSECValidationStatus",
        "variableName" : "resolverDNSSECValidationStatus",
        "variableType" : "ResolverDNSSECValidationStatus",
        "documentation" : null,
        "simpleType" : "ResolverDNSSECValidationStatus",
        "variableSetterType" : "ResolverDNSSECValidationStatus"
      },
      "wrapper" : false
    },
    "ResolverDnssecConfig" : {
      "c2jName" : "ResolverDnssecConfig",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A complex type that contains information about a configuration for DNSSEC validation.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.model.ResolverDnssecConfig",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Id",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID for a configuration for DNSSEC validation.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID for a configuration for DNSSEC validation.</p>\n@param id The ID for a configuration for DNSSEC validation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withId",
        "getterDocumentation" : "/**<p>The ID for a configuration for DNSSEC validation.</p>\n@return The ID for a configuration for DNSSEC validation.*/",
        "getterMethodName" : "getId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Id",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Id",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Id",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID for a configuration for DNSSEC validation.</p>\n@param id The ID for a configuration for DNSSEC validation.*/",
        "setterMethodName" : "setId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "id",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID for a configuration for DNSSEC validation.</p>\n@param id The ID for a configuration for DNSSEC validation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "id",
          "variableType" : "String",
          "documentation" : "<p>The ID for a configuration for DNSSEC validation.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "OwnerId",
        "c2jShape" : "AccountId",
        "deprecated" : false,
        "documentation" : "<p>The owner account ID of the virtual private cloud (VPC) for a configuration for DNSSEC validation.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The owner account ID of the virtual private cloud (VPC) for a configuration for DNSSEC validation.</p>\n@param ownerId The owner account ID of the virtual private cloud (VPC) for a configuration for DNSSEC validation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withOwnerId",
        "getterDocumentation" : "/**<p>The owner account ID of the virtual private cloud (VPC) for a configuration for DNSSEC validation.</p>\n@return The owner account ID of the virtual private cloud (VPC) for a configuration for DNSSEC validation.*/",
        "getterMethodName" : "getOwnerId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "OwnerId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "OwnerId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "OwnerId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The owner account ID of the virtual private cloud (VPC) for a configuration for DNSSEC validation.</p>\n@param ownerId The owner account ID of the virtual private cloud (VPC) for a configuration for DNSSEC validation.*/",
        "setterMethodName" : "setOwnerId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ownerId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The owner account ID of the virtual private cloud (VPC) for a configuration for DNSSEC validation.</p>\n@param ownerId The owner account ID of the virtual private cloud (VPC) for a configuration for DNSSEC validation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ownerId",
          "variableType" : "String",
          "documentation" : "<p>The owner account ID of the virtual private cloud (VPC) for a configuration for DNSSEC validation.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ResourceId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the virtual private cloud (VPC) that you're configuring the DNSSEC validation status for.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the virtual private cloud (VPC) that you're configuring the DNSSEC validation status for.</p>\n@param resourceId The ID of the virtual private cloud (VPC) that you're configuring the DNSSEC validation status for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceId",
        "getterDocumentation" : "/**<p>The ID of the virtual private cloud (VPC) that you're configuring the DNSSEC validation status for.</p>\n@return The ID of the virtual private cloud (VPC) that you're configuring the DNSSEC validation status for.*/",
        "getterMethodName" : "getResourceId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the virtual private cloud (VPC) that you're configuring the DNSSEC validation status for.</p>\n@param resourceId The ID of the virtual private cloud (VPC) that you're configuring the DNSSEC validation status for.*/",
        "setterMethodName" : "setResourceId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the virtual private cloud (VPC) that you're configuring the DNSSEC validation status for.</p>\n@param resourceId The ID of the virtual private cloud (VPC) that you're configuring the DNSSEC validation status for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the virtual private cloud (VPC) that you're configuring the DNSSEC validation status for.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ValidationStatus",
        "c2jShape" : "ResolverDNSSECValidationStatus",
        "deprecated" : false,
        "documentation" : "<p>The validation status for a DNSSEC configuration. The status can be one of the following:</p> <ul> <li> <p> <b>ENABLING:</b> DNSSEC validation is being enabled but is not complete.</p> </li> <li> <p> <b>ENABLED:</b> DNSSEC validation is enabled.</p> </li> <li> <p> <b>DISABLING:</b> DNSSEC validation is being disabled but is not complete.</p> </li> <li> <p> <b>DISABLED</b> DNSSEC validation is disabled.</p> </li> </ul>",
        "endpointDiscoveryId" : false,
        "enumType" : "ResolverDNSSECValidationStatus",
        "fluentSetterDocumentation" : "/**<p>The validation status for a DNSSEC configuration. The status can be one of the following:</p> <ul> <li> <p> <b>ENABLING:</b> DNSSEC validation is being enabled but is not complete.</p> </li> <li> <p> <b>ENABLED:</b> DNSSEC validation is enabled.</p> </li> <li> <p> <b>DISABLING:</b> DNSSEC validation is being disabled but is not complete.</p> </li> <li> <p> <b>DISABLED</b> DNSSEC validation is disabled.</p> </li> </ul>\n@param validationStatus The validation status for a DNSSEC configuration. The status can be one of the following:</p> <ul> <li> <p> <b>ENABLING:</b> DNSSEC validation is being enabled but is not complete.</p> </li> <li> <p> <b>ENABLED:</b> DNSSEC validation is enabled.</p> </li> <li> <p> <b>DISABLING:</b> DNSSEC validation is being disabled but is not complete.</p> </li> <li> <p> <b>DISABLED</b> DNSSEC validation is disabled.</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverDNSSECValidationStatus*/",
        "fluentSetterMethodName" : "withValidationStatus",
        "getterDocumentation" : "/**<p>The validation status for a DNSSEC configuration. The status can be one of the following:</p> <ul> <li> <p> <b>ENABLING:</b> DNSSEC validation is being enabled but is not complete.</p> </li> <li> <p> <b>ENABLED:</b> DNSSEC validation is enabled.</p> </li> <li> <p> <b>DISABLING:</b> DNSSEC validation is being disabled but is not complete.</p> </li> <li> <p> <b>DISABLED</b> DNSSEC validation is disabled.</p> </li> </ul>\n@return The validation status for a DNSSEC configuration. The status can be one of the following:</p> <ul> <li> <p> <b>ENABLING:</b> DNSSEC validation is being enabled but is not complete.</p> </li> <li> <p> <b>ENABLED:</b> DNSSEC validation is enabled.</p> </li> <li> <p> <b>DISABLING:</b> DNSSEC validation is being disabled but is not complete.</p> </li> <li> <p> <b>DISABLED</b> DNSSEC validation is disabled.</p> </li>\n@see ResolverDNSSECValidationStatus*/",
        "getterMethodName" : "getValidationStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ValidationStatus",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ValidationStatus",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ValidationStatus",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The validation status for a DNSSEC configuration. The status can be one of the following:</p> <ul> <li> <p> <b>ENABLING:</b> DNSSEC validation is being enabled but is not complete.</p> </li> <li> <p> <b>ENABLED:</b> DNSSEC validation is enabled.</p> </li> <li> <p> <b>DISABLING:</b> DNSSEC validation is being disabled but is not complete.</p> </li> <li> <p> <b>DISABLED</b> DNSSEC validation is disabled.</p> </li> </ul>\n@param validationStatus The validation status for a DNSSEC configuration. The status can be one of the following:</p> <ul> <li> <p> <b>ENABLING:</b> DNSSEC validation is being enabled but is not complete.</p> </li> <li> <p> <b>ENABLED:</b> DNSSEC validation is enabled.</p> </li> <li> <p> <b>DISABLING:</b> DNSSEC validation is being disabled but is not complete.</p> </li> <li> <p> <b>DISABLED</b> DNSSEC validation is disabled.</p> </li>\n@see ResolverDNSSECValidationStatus*/",
        "setterMethodName" : "setValidationStatus",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "validationStatus",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The validation status for a DNSSEC configuration. The status can be one of the following:</p> <ul> <li> <p> <b>ENABLING:</b> DNSSEC validation is being enabled but is not complete.</p> </li> <li> <p> <b>ENABLED:</b> DNSSEC validation is enabled.</p> </li> <li> <p> <b>DISABLING:</b> DNSSEC validation is being disabled but is not complete.</p> </li> <li> <p> <b>DISABLED</b> DNSSEC validation is disabled.</p> </li> </ul>\n@param validationStatus The validation status for a DNSSEC configuration. The status can be one of the following:</p> <ul> <li> <p> <b>ENABLING:</b> DNSSEC validation is being enabled but is not complete.</p> </li> <li> <p> <b>ENABLED:</b> DNSSEC validation is enabled.</p> </li> <li> <p> <b>DISABLING:</b> DNSSEC validation is being disabled but is not complete.</p> </li> <li> <p> <b>DISABLED</b> DNSSEC validation is disabled.</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverDNSSECValidationStatus*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "validationStatus",
          "variableType" : "String",
          "documentation" : "<p>The validation status for a DNSSEC configuration. The status can be one of the following:</p> <ul> <li> <p> <b>ENABLING:</b> DNSSEC validation is being enabled but is not complete.</p> </li> <li> <p> <b>ENABLED:</b> DNSSEC validation is enabled.</p> </li> <li> <p> <b>DISABLING:</b> DNSSEC validation is being disabled but is not complete.</p> </li> <li> <p> <b>DISABLED</b> DNSSEC validation is disabled.</p> </li> </ul>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Id" : {
          "c2jName" : "Id",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID for a configuration for DNSSEC validation.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID for a configuration for DNSSEC validation.</p>\n@param id The ID for a configuration for DNSSEC validation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withId",
          "getterDocumentation" : "/**<p>The ID for a configuration for DNSSEC validation.</p>\n@return The ID for a configuration for DNSSEC validation.*/",
          "getterMethodName" : "getId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Id",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Id",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Id",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID for a configuration for DNSSEC validation.</p>\n@param id The ID for a configuration for DNSSEC validation.*/",
          "setterMethodName" : "setId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "id",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID for a configuration for DNSSEC validation.</p>\n@param id The ID for a configuration for DNSSEC validation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "id",
            "variableType" : "String",
            "documentation" : "<p>The ID for a configuration for DNSSEC validation.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "OwnerId" : {
          "c2jName" : "OwnerId",
          "c2jShape" : "AccountId",
          "deprecated" : false,
          "documentation" : "<p>The owner account ID of the virtual private cloud (VPC) for a configuration for DNSSEC validation.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The owner account ID of the virtual private cloud (VPC) for a configuration for DNSSEC validation.</p>\n@param ownerId The owner account ID of the virtual private cloud (VPC) for a configuration for DNSSEC validation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withOwnerId",
          "getterDocumentation" : "/**<p>The owner account ID of the virtual private cloud (VPC) for a configuration for DNSSEC validation.</p>\n@return The owner account ID of the virtual private cloud (VPC) for a configuration for DNSSEC validation.*/",
          "getterMethodName" : "getOwnerId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "OwnerId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "OwnerId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "OwnerId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The owner account ID of the virtual private cloud (VPC) for a configuration for DNSSEC validation.</p>\n@param ownerId The owner account ID of the virtual private cloud (VPC) for a configuration for DNSSEC validation.*/",
          "setterMethodName" : "setOwnerId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ownerId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The owner account ID of the virtual private cloud (VPC) for a configuration for DNSSEC validation.</p>\n@param ownerId The owner account ID of the virtual private cloud (VPC) for a configuration for DNSSEC validation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ownerId",
            "variableType" : "String",
            "documentation" : "<p>The owner account ID of the virtual private cloud (VPC) for a configuration for DNSSEC validation.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResourceId" : {
          "c2jName" : "ResourceId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the virtual private cloud (VPC) that you're configuring the DNSSEC validation status for.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the virtual private cloud (VPC) that you're configuring the DNSSEC validation status for.</p>\n@param resourceId The ID of the virtual private cloud (VPC) that you're configuring the DNSSEC validation status for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceId",
          "getterDocumentation" : "/**<p>The ID of the virtual private cloud (VPC) that you're configuring the DNSSEC validation status for.</p>\n@return The ID of the virtual private cloud (VPC) that you're configuring the DNSSEC validation status for.*/",
          "getterMethodName" : "getResourceId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the virtual private cloud (VPC) that you're configuring the DNSSEC validation status for.</p>\n@param resourceId The ID of the virtual private cloud (VPC) that you're configuring the DNSSEC validation status for.*/",
          "setterMethodName" : "setResourceId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the virtual private cloud (VPC) that you're configuring the DNSSEC validation status for.</p>\n@param resourceId The ID of the virtual private cloud (VPC) that you're configuring the DNSSEC validation status for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the virtual private cloud (VPC) that you're configuring the DNSSEC validation status for.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ValidationStatus" : {
          "c2jName" : "ValidationStatus",
          "c2jShape" : "ResolverDNSSECValidationStatus",
          "deprecated" : false,
          "documentation" : "<p>The validation status for a DNSSEC configuration. The status can be one of the following:</p> <ul> <li> <p> <b>ENABLING:</b> DNSSEC validation is being enabled but is not complete.</p> </li> <li> <p> <b>ENABLED:</b> DNSSEC validation is enabled.</p> </li> <li> <p> <b>DISABLING:</b> DNSSEC validation is being disabled but is not complete.</p> </li> <li> <p> <b>DISABLED</b> DNSSEC validation is disabled.</p> </li> </ul>",
          "endpointDiscoveryId" : false,
          "enumType" : "ResolverDNSSECValidationStatus",
          "fluentSetterDocumentation" : "/**<p>The validation status for a DNSSEC configuration. The status can be one of the following:</p> <ul> <li> <p> <b>ENABLING:</b> DNSSEC validation is being enabled but is not complete.</p> </li> <li> <p> <b>ENABLED:</b> DNSSEC validation is enabled.</p> </li> <li> <p> <b>DISABLING:</b> DNSSEC validation is being disabled but is not complete.</p> </li> <li> <p> <b>DISABLED</b> DNSSEC validation is disabled.</p> </li> </ul>\n@param validationStatus The validation status for a DNSSEC configuration. The status can be one of the following:</p> <ul> <li> <p> <b>ENABLING:</b> DNSSEC validation is being enabled but is not complete.</p> </li> <li> <p> <b>ENABLED:</b> DNSSEC validation is enabled.</p> </li> <li> <p> <b>DISABLING:</b> DNSSEC validation is being disabled but is not complete.</p> </li> <li> <p> <b>DISABLED</b> DNSSEC validation is disabled.</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverDNSSECValidationStatus*/",
          "fluentSetterMethodName" : "withValidationStatus",
          "getterDocumentation" : "/**<p>The validation status for a DNSSEC configuration. The status can be one of the following:</p> <ul> <li> <p> <b>ENABLING:</b> DNSSEC validation is being enabled but is not complete.</p> </li> <li> <p> <b>ENABLED:</b> DNSSEC validation is enabled.</p> </li> <li> <p> <b>DISABLING:</b> DNSSEC validation is being disabled but is not complete.</p> </li> <li> <p> <b>DISABLED</b> DNSSEC validation is disabled.</p> </li> </ul>\n@return The validation status for a DNSSEC configuration. The status can be one of the following:</p> <ul> <li> <p> <b>ENABLING:</b> DNSSEC validation is being enabled but is not complete.</p> </li> <li> <p> <b>ENABLED:</b> DNSSEC validation is enabled.</p> </li> <li> <p> <b>DISABLING:</b> DNSSEC validation is being disabled but is not complete.</p> </li> <li> <p> <b>DISABLED</b> DNSSEC validation is disabled.</p> </li>\n@see ResolverDNSSECValidationStatus*/",
          "getterMethodName" : "getValidationStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ValidationStatus",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ValidationStatus",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ValidationStatus",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The validation status for a DNSSEC configuration. The status can be one of the following:</p> <ul> <li> <p> <b>ENABLING:</b> DNSSEC validation is being enabled but is not complete.</p> </li> <li> <p> <b>ENABLED:</b> DNSSEC validation is enabled.</p> </li> <li> <p> <b>DISABLING:</b> DNSSEC validation is being disabled but is not complete.</p> </li> <li> <p> <b>DISABLED</b> DNSSEC validation is disabled.</p> </li> </ul>\n@param validationStatus The validation status for a DNSSEC configuration. The status can be one of the following:</p> <ul> <li> <p> <b>ENABLING:</b> DNSSEC validation is being enabled but is not complete.</p> </li> <li> <p> <b>ENABLED:</b> DNSSEC validation is enabled.</p> </li> <li> <p> <b>DISABLING:</b> DNSSEC validation is being disabled but is not complete.</p> </li> <li> <p> <b>DISABLED</b> DNSSEC validation is disabled.</p> </li>\n@see ResolverDNSSECValidationStatus*/",
          "setterMethodName" : "setValidationStatus",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "validationStatus",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The validation status for a DNSSEC configuration. The status can be one of the following:</p> <ul> <li> <p> <b>ENABLING:</b> DNSSEC validation is being enabled but is not complete.</p> </li> <li> <p> <b>ENABLED:</b> DNSSEC validation is enabled.</p> </li> <li> <p> <b>DISABLING:</b> DNSSEC validation is being disabled but is not complete.</p> </li> <li> <p> <b>DISABLED</b> DNSSEC validation is disabled.</p> </li> </ul>\n@param validationStatus The validation status for a DNSSEC configuration. The status can be one of the following:</p> <ul> <li> <p> <b>ENABLING:</b> DNSSEC validation is being enabled but is not complete.</p> </li> <li> <p> <b>ENABLED:</b> DNSSEC validation is enabled.</p> </li> <li> <p> <b>DISABLING:</b> DNSSEC validation is being disabled but is not complete.</p> </li> <li> <p> <b>DISABLED</b> DNSSEC validation is disabled.</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverDNSSECValidationStatus*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "validationStatus",
            "variableType" : "String",
            "documentation" : "<p>The validation status for a DNSSEC configuration. The status can be one of the following:</p> <ul> <li> <p> <b>ENABLING:</b> DNSSEC validation is being enabled but is not complete.</p> </li> <li> <p> <b>ENABLED:</b> DNSSEC validation is enabled.</p> </li> <li> <p> <b>DISABLING:</b> DNSSEC validation is being disabled but is not complete.</p> </li> <li> <p> <b>DISABLED</b> DNSSEC validation is disabled.</p> </li> </ul>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResolverDnssecConfig",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResolverDnssecConfig",
        "variableName" : "resolverDnssecConfig",
        "variableType" : "ResolverDnssecConfig",
        "documentation" : null,
        "simpleType" : "ResolverDnssecConfig",
        "variableSetterType" : "ResolverDnssecConfig"
      },
      "wrapper" : false
    },
    "ResolverEndpoint" : {
      "c2jName" : "ResolverEndpoint",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>In the response to a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DeleteResolverEndpoint.html\">DeleteResolverEndpoint</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a>, or <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_UpdateResolverEndpoint.html\">UpdateResolverEndpoint</a> request, a complex type that contains settings for an existing inbound or outbound Resolver endpoint.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.model.ResolverEndpoint",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Id",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the Resolver endpoint.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the Resolver endpoint.</p>\n@param id The ID of the Resolver endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withId",
        "getterDocumentation" : "/**<p>The ID of the Resolver endpoint.</p>\n@return The ID of the Resolver endpoint.*/",
        "getterMethodName" : "getId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Id",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Id",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Id",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the Resolver endpoint.</p>\n@param id The ID of the Resolver endpoint.*/",
        "setterMethodName" : "setId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "id",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the Resolver endpoint.</p>\n@param id The ID of the Resolver endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "id",
          "variableType" : "String",
          "documentation" : "<p>The ID of the Resolver endpoint.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "CreatorRequestId",
        "c2jShape" : "CreatorRequestId",
        "deprecated" : false,
        "documentation" : "<p>A unique string that identifies the request that created the Resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A unique string that identifies the request that created the Resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.</p>\n@param creatorRequestId A unique string that identifies the request that created the Resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCreatorRequestId",
        "getterDocumentation" : "/**<p>A unique string that identifies the request that created the Resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.</p>\n@return A unique string that identifies the request that created the Resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.*/",
        "getterMethodName" : "getCreatorRequestId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "CreatorRequestId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CreatorRequestId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CreatorRequestId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A unique string that identifies the request that created the Resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.</p>\n@param creatorRequestId A unique string that identifies the request that created the Resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.*/",
        "setterMethodName" : "setCreatorRequestId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "creatorRequestId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A unique string that identifies the request that created the Resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.</p>\n@param creatorRequestId A unique string that identifies the request that created the Resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "creatorRequestId",
          "variableType" : "String",
          "documentation" : "<p>A unique string that identifies the request that created the Resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Arn",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>The ARN (Amazon Resource Name) for the Resolver endpoint.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ARN (Amazon Resource Name) for the Resolver endpoint.</p>\n@param arn The ARN (Amazon Resource Name) for the Resolver endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withArn",
        "getterDocumentation" : "/**<p>The ARN (Amazon Resource Name) for the Resolver endpoint.</p>\n@return The ARN (Amazon Resource Name) for the Resolver endpoint.*/",
        "getterMethodName" : "getArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Arn",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Arn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Arn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ARN (Amazon Resource Name) for the Resolver endpoint.</p>\n@param arn The ARN (Amazon Resource Name) for the Resolver endpoint.*/",
        "setterMethodName" : "setArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ARN (Amazon Resource Name) for the Resolver endpoint.</p>\n@param arn The ARN (Amazon Resource Name) for the Resolver endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "<p>The ARN (Amazon Resource Name) for the Resolver endpoint.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Name",
        "c2jShape" : "Name",
        "deprecated" : false,
        "documentation" : "<p>The name that you assigned to the Resolver endpoint when you submitted a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name that you assigned to the Resolver endpoint when you submitted a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request.</p>\n@param name The name that you assigned to the Resolver endpoint when you submitted a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>The name that you assigned to the Resolver endpoint when you submitted a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request.</p>\n@return The name that you assigned to the Resolver endpoint when you submitted a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Name",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name that you assigned to the Resolver endpoint when you submitted a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request.</p>\n@param name The name that you assigned to the Resolver endpoint when you submitted a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name that you assigned to the Resolver endpoint when you submitted a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request.</p>\n@param name The name that you assigned to the Resolver endpoint when you submitted a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>The name that you assigned to the Resolver endpoint when you submitted a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "SecurityGroupIds",
        "c2jShape" : "SecurityGroupIds",
        "deprecated" : false,
        "documentation" : "<p>The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound rules (for inbound endpoints) or outbound rules (for outbound endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound rules (for inbound endpoints) or outbound rules (for outbound endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.</p>\n@param securityGroupIds The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound rules (for inbound endpoints) or outbound rules (for outbound endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSecurityGroupIds",
        "getterDocumentation" : "/**<p>The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound rules (for inbound endpoints) or outbound rules (for outbound endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.</p>\n@return The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound rules (for inbound endpoints) or outbound rules (for outbound endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.*/",
        "getterMethodName" : "getSecurityGroupIds",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SecurityGroupIds",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SecurityGroupIds",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ResourceId",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "SecurityGroupIds",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound rules (for inbound endpoints) or outbound rules (for outbound endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.</p>\n@param securityGroupIds The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound rules (for inbound endpoints) or outbound rules (for outbound endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.*/",
        "setterMethodName" : "setSecurityGroupIds",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "securityGroupIds",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound rules (for inbound endpoints) or outbound rules (for outbound endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setSecurityGroupIds(java.util.Collection)} or {@link #withSecurityGroupIds(java.util.Collection)} if you want to override the existing values.</p>\n@param securityGroupIds The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound rules (for inbound endpoints) or outbound rules (for outbound endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "securityGroupIds",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound rules (for inbound endpoints) or outbound rules (for outbound endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Direction",
        "c2jShape" : "ResolverEndpointDirection",
        "deprecated" : false,
        "documentation" : "<p>Indicates whether the Resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network</p> </li> </ul>",
        "endpointDiscoveryId" : false,
        "enumType" : "ResolverEndpointDirection",
        "fluentSetterDocumentation" : "/**<p>Indicates whether the Resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network</p> </li> </ul>\n@param direction Indicates whether the Resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverEndpointDirection*/",
        "fluentSetterMethodName" : "withDirection",
        "getterDocumentation" : "/**<p>Indicates whether the Resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network</p> </li> </ul>\n@return Indicates whether the Resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network</p> </li>\n@see ResolverEndpointDirection*/",
        "getterMethodName" : "getDirection",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Direction",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Direction",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Direction",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Indicates whether the Resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network</p> </li> </ul>\n@param direction Indicates whether the Resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network</p> </li>\n@see ResolverEndpointDirection*/",
        "setterMethodName" : "setDirection",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "direction",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Indicates whether the Resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network</p> </li> </ul>\n@param direction Indicates whether the Resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverEndpointDirection*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "direction",
          "variableType" : "String",
          "documentation" : "<p>Indicates whether the Resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network</p> </li> </ul>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "IpAddressCount",
        "c2jShape" : "IpAddressCount",
        "deprecated" : false,
        "documentation" : "<p>The number of IP addresses that the Resolver endpoint can use for DNS queries.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The number of IP addresses that the Resolver endpoint can use for DNS queries.</p>\n@param ipAddressCount The number of IP addresses that the Resolver endpoint can use for DNS queries.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withIpAddressCount",
        "getterDocumentation" : "/**<p>The number of IP addresses that the Resolver endpoint can use for DNS queries.</p>\n@return The number of IP addresses that the Resolver endpoint can use for DNS queries.*/",
        "getterMethodName" : "getIpAddressCount",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "IpAddressCount",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "IpAddressCount",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "IpAddressCount",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The number of IP addresses that the Resolver endpoint can use for DNS queries.</p>\n@param ipAddressCount The number of IP addresses that the Resolver endpoint can use for DNS queries.*/",
        "setterMethodName" : "setIpAddressCount",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "ipAddressCount",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The number of IP addresses that the Resolver endpoint can use for DNS queries.</p>\n@param ipAddressCount The number of IP addresses that the Resolver endpoint can use for DNS queries.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "ipAddressCount",
          "variableType" : "Integer",
          "documentation" : "<p>The number of IP addresses that the Resolver endpoint can use for DNS queries.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "HostVPCId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the VPC that you want to create the Resolver endpoint in.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the VPC that you want to create the Resolver endpoint in.</p>\n@param hostVPCId The ID of the VPC that you want to create the Resolver endpoint in.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withHostVPCId",
        "getterDocumentation" : "/**<p>The ID of the VPC that you want to create the Resolver endpoint in.</p>\n@return The ID of the VPC that you want to create the Resolver endpoint in.*/",
        "getterMethodName" : "getHostVPCId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "HostVPCId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "HostVPCId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "HostVPCId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the VPC that you want to create the Resolver endpoint in.</p>\n@param hostVPCId The ID of the VPC that you want to create the Resolver endpoint in.*/",
        "setterMethodName" : "setHostVPCId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "hostVPCId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the VPC that you want to create the Resolver endpoint in.</p>\n@param hostVPCId The ID of the VPC that you want to create the Resolver endpoint in.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "hostVPCId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the VPC that you want to create the Resolver endpoint in.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Status",
        "c2jShape" : "ResolverEndpointStatus",
        "deprecated" : false,
        "documentation" : "<p>A code that specifies the current status of the Resolver endpoint. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating and configuring one or more Amazon VPC network interfaces for this endpoint.</p> </li> <li> <p> <code>OPERATIONAL</code>: The Amazon VPC network interfaces for this endpoint are correctly configured and able to pass inbound or outbound DNS queries between your network and Resolver.</p> </li> <li> <p> <code>UPDATING</code>: Resolver is associating or disassociating one or more network interfaces with this endpoint.</p> </li> <li> <p> <code>AUTO_RECOVERING</code>: Resolver is trying to recover one or more of the network interfaces that are associated with this endpoint. During the recovery process, the endpoint functions with limited capacity because of the limit on the number of DNS queries per IP address (per network interface). For the current limit, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html#limits-api-entities-resolver\">Limits on Route 53 Resolver</a>.</p> </li> <li> <p> <code>ACTION_NEEDED</code>: This endpoint is unhealthy, and Resolver can't automatically recover it. To resolve the problem, we recommend that you check each IP address that you associated with the endpoint. For each IP address that isn't available, add another IP address and then delete the IP address that isn't available. (An endpoint must always include at least two IP addresses.) A status of <code>ACTION_NEEDED</code> can have a variety of causes. Here are two common causes:</p> <ul> <li> <p>One or more of the network interfaces that are associated with the endpoint were deleted using Amazon VPC.</p> </li> <li> <p>The network interface couldn't be created for some reason that's outside the control of Resolver.</p> </li> </ul> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this endpoint and the associated network interfaces.</p> </li> </ul>",
        "endpointDiscoveryId" : false,
        "enumType" : "ResolverEndpointStatus",
        "fluentSetterDocumentation" : "/**<p>A code that specifies the current status of the Resolver endpoint. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating and configuring one or more Amazon VPC network interfaces for this endpoint.</p> </li> <li> <p> <code>OPERATIONAL</code>: The Amazon VPC network interfaces for this endpoint are correctly configured and able to pass inbound or outbound DNS queries between your network and Resolver.</p> </li> <li> <p> <code>UPDATING</code>: Resolver is associating or disassociating one or more network interfaces with this endpoint.</p> </li> <li> <p> <code>AUTO_RECOVERING</code>: Resolver is trying to recover one or more of the network interfaces that are associated with this endpoint. During the recovery process, the endpoint functions with limited capacity because of the limit on the number of DNS queries per IP address (per network interface). For the current limit, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html#limits-api-entities-resolver\">Limits on Route 53 Resolver</a>.</p> </li> <li> <p> <code>ACTION_NEEDED</code>: This endpoint is unhealthy, and Resolver can't automatically recover it. To resolve the problem, we recommend that you check each IP address that you associated with the endpoint. For each IP address that isn't available, add another IP address and then delete the IP address that isn't available. (An endpoint must always include at least two IP addresses.) A status of <code>ACTION_NEEDED</code> can have a variety of causes. Here are two common causes:</p> <ul> <li> <p>One or more of the network interfaces that are associated with the endpoint were deleted using Amazon VPC.</p> </li> <li> <p>The network interface couldn't be created for some reason that's outside the control of Resolver.</p> </li> </ul> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this endpoint and the associated network interfaces.</p> </li> </ul>\n@param status A code that specifies the current status of the Resolver endpoint. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating and configuring one or more Amazon VPC network interfaces for this endpoint.</p> </li> <li> <p> <code>OPERATIONAL</code>: The Amazon VPC network interfaces for this endpoint are correctly configured and able to pass inbound or outbound DNS queries between your network and Resolver.</p> </li> <li> <p> <code>UPDATING</code>: Resolver is associating or disassociating one or more network interfaces with this endpoint.</p> </li> <li> <p> <code>AUTO_RECOVERING</code>: Resolver is trying to recover one or more of the network interfaces that are associated with this endpoint. During the recovery process, the endpoint functions with limited capacity because of the limit on the number of DNS queries per IP address (per network interface). For the current limit, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html#limits-api-entities-resolver\">Limits on Route 53 Resolver</a>.</p> </li> <li> <p> <code>ACTION_NEEDED</code>: This endpoint is unhealthy, and Resolver can't automatically recover it. To resolve the problem, we recommend that you check each IP address that you associated with the endpoint. For each IP address that isn't available, add another IP address and then delete the IP address that isn't available. (An endpoint must always include at least two IP addresses.) A status of <code>ACTION_NEEDED</code> can have a variety of causes. Here are two common causes:</p> <ul> <li> <p>One or more of the network interfaces that are associated with the endpoint were deleted using Amazon VPC.</p> </li> <li> <p>The network interface couldn't be created for some reason that's outside the control of Resolver.</p> </li> </ul> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this endpoint and the associated network interfaces.</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverEndpointStatus*/",
        "fluentSetterMethodName" : "withStatus",
        "getterDocumentation" : "/**<p>A code that specifies the current status of the Resolver endpoint. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating and configuring one or more Amazon VPC network interfaces for this endpoint.</p> </li> <li> <p> <code>OPERATIONAL</code>: The Amazon VPC network interfaces for this endpoint are correctly configured and able to pass inbound or outbound DNS queries between your network and Resolver.</p> </li> <li> <p> <code>UPDATING</code>: Resolver is associating or disassociating one or more network interfaces with this endpoint.</p> </li> <li> <p> <code>AUTO_RECOVERING</code>: Resolver is trying to recover one or more of the network interfaces that are associated with this endpoint. During the recovery process, the endpoint functions with limited capacity because of the limit on the number of DNS queries per IP address (per network interface). For the current limit, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html#limits-api-entities-resolver\">Limits on Route 53 Resolver</a>.</p> </li> <li> <p> <code>ACTION_NEEDED</code>: This endpoint is unhealthy, and Resolver can't automatically recover it. To resolve the problem, we recommend that you check each IP address that you associated with the endpoint. For each IP address that isn't available, add another IP address and then delete the IP address that isn't available. (An endpoint must always include at least two IP addresses.) A status of <code>ACTION_NEEDED</code> can have a variety of causes. Here are two common causes:</p> <ul> <li> <p>One or more of the network interfaces that are associated with the endpoint were deleted using Amazon VPC.</p> </li> <li> <p>The network interface couldn't be created for some reason that's outside the control of Resolver.</p> </li> </ul> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this endpoint and the associated network interfaces.</p> </li> </ul>\n@return A code that specifies the current status of the Resolver endpoint. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating and configuring one or more Amazon VPC network interfaces for this endpoint.</p> </li> <li> <p> <code>OPERATIONAL</code>: The Amazon VPC network interfaces for this endpoint are correctly configured and able to pass inbound or outbound DNS queries between your network and Resolver.</p> </li> <li> <p> <code>UPDATING</code>: Resolver is associating or disassociating one or more network interfaces with this endpoint.</p> </li> <li> <p> <code>AUTO_RECOVERING</code>: Resolver is trying to recover one or more of the network interfaces that are associated with this endpoint. During the recovery process, the endpoint functions with limited capacity because of the limit on the number of DNS queries per IP address (per network interface). For the current limit, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html#limits-api-entities-resolver\">Limits on Route 53 Resolver</a>.</p> </li> <li> <p> <code>ACTION_NEEDED</code>: This endpoint is unhealthy, and Resolver can't automatically recover it. To resolve the problem, we recommend that you check each IP address that you associated with the endpoint. For each IP address that isn't available, add another IP address and then delete the IP address that isn't available. (An endpoint must always include at least two IP addresses.) A status of <code>ACTION_NEEDED</code> can have a variety of causes. Here are two common causes:</p> <ul> <li> <p>One or more of the network interfaces that are associated with the endpoint were deleted using Amazon VPC.</p> </li> <li> <p>The network interface couldn't be created for some reason that's outside the control of Resolver.</p> </li> </ul> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this endpoint and the associated network interfaces.</p> </li>\n@see ResolverEndpointStatus*/",
        "getterMethodName" : "getStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Status",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Status",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Status",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A code that specifies the current status of the Resolver endpoint. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating and configuring one or more Amazon VPC network interfaces for this endpoint.</p> </li> <li> <p> <code>OPERATIONAL</code>: The Amazon VPC network interfaces for this endpoint are correctly configured and able to pass inbound or outbound DNS queries between your network and Resolver.</p> </li> <li> <p> <code>UPDATING</code>: Resolver is associating or disassociating one or more network interfaces with this endpoint.</p> </li> <li> <p> <code>AUTO_RECOVERING</code>: Resolver is trying to recover one or more of the network interfaces that are associated with this endpoint. During the recovery process, the endpoint functions with limited capacity because of the limit on the number of DNS queries per IP address (per network interface). For the current limit, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html#limits-api-entities-resolver\">Limits on Route 53 Resolver</a>.</p> </li> <li> <p> <code>ACTION_NEEDED</code>: This endpoint is unhealthy, and Resolver can't automatically recover it. To resolve the problem, we recommend that you check each IP address that you associated with the endpoint. For each IP address that isn't available, add another IP address and then delete the IP address that isn't available. (An endpoint must always include at least two IP addresses.) A status of <code>ACTION_NEEDED</code> can have a variety of causes. Here are two common causes:</p> <ul> <li> <p>One or more of the network interfaces that are associated with the endpoint were deleted using Amazon VPC.</p> </li> <li> <p>The network interface couldn't be created for some reason that's outside the control of Resolver.</p> </li> </ul> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this endpoint and the associated network interfaces.</p> </li> </ul>\n@param status A code that specifies the current status of the Resolver endpoint. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating and configuring one or more Amazon VPC network interfaces for this endpoint.</p> </li> <li> <p> <code>OPERATIONAL</code>: The Amazon VPC network interfaces for this endpoint are correctly configured and able to pass inbound or outbound DNS queries between your network and Resolver.</p> </li> <li> <p> <code>UPDATING</code>: Resolver is associating or disassociating one or more network interfaces with this endpoint.</p> </li> <li> <p> <code>AUTO_RECOVERING</code>: Resolver is trying to recover one or more of the network interfaces that are associated with this endpoint. During the recovery process, the endpoint functions with limited capacity because of the limit on the number of DNS queries per IP address (per network interface). For the current limit, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html#limits-api-entities-resolver\">Limits on Route 53 Resolver</a>.</p> </li> <li> <p> <code>ACTION_NEEDED</code>: This endpoint is unhealthy, and Resolver can't automatically recover it. To resolve the problem, we recommend that you check each IP address that you associated with the endpoint. For each IP address that isn't available, add another IP address and then delete the IP address that isn't available. (An endpoint must always include at least two IP addresses.) A status of <code>ACTION_NEEDED</code> can have a variety of causes. Here are two common causes:</p> <ul> <li> <p>One or more of the network interfaces that are associated with the endpoint were deleted using Amazon VPC.</p> </li> <li> <p>The network interface couldn't be created for some reason that's outside the control of Resolver.</p> </li> </ul> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this endpoint and the associated network interfaces.</p> </li>\n@see ResolverEndpointStatus*/",
        "setterMethodName" : "setStatus",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A code that specifies the current status of the Resolver endpoint. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating and configuring one or more Amazon VPC network interfaces for this endpoint.</p> </li> <li> <p> <code>OPERATIONAL</code>: The Amazon VPC network interfaces for this endpoint are correctly configured and able to pass inbound or outbound DNS queries between your network and Resolver.</p> </li> <li> <p> <code>UPDATING</code>: Resolver is associating or disassociating one or more network interfaces with this endpoint.</p> </li> <li> <p> <code>AUTO_RECOVERING</code>: Resolver is trying to recover one or more of the network interfaces that are associated with this endpoint. During the recovery process, the endpoint functions with limited capacity because of the limit on the number of DNS queries per IP address (per network interface). For the current limit, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html#limits-api-entities-resolver\">Limits on Route 53 Resolver</a>.</p> </li> <li> <p> <code>ACTION_NEEDED</code>: This endpoint is unhealthy, and Resolver can't automatically recover it. To resolve the problem, we recommend that you check each IP address that you associated with the endpoint. For each IP address that isn't available, add another IP address and then delete the IP address that isn't available. (An endpoint must always include at least two IP addresses.) A status of <code>ACTION_NEEDED</code> can have a variety of causes. Here are two common causes:</p> <ul> <li> <p>One or more of the network interfaces that are associated with the endpoint were deleted using Amazon VPC.</p> </li> <li> <p>The network interface couldn't be created for some reason that's outside the control of Resolver.</p> </li> </ul> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this endpoint and the associated network interfaces.</p> </li> </ul>\n@param status A code that specifies the current status of the Resolver endpoint. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating and configuring one or more Amazon VPC network interfaces for this endpoint.</p> </li> <li> <p> <code>OPERATIONAL</code>: The Amazon VPC network interfaces for this endpoint are correctly configured and able to pass inbound or outbound DNS queries between your network and Resolver.</p> </li> <li> <p> <code>UPDATING</code>: Resolver is associating or disassociating one or more network interfaces with this endpoint.</p> </li> <li> <p> <code>AUTO_RECOVERING</code>: Resolver is trying to recover one or more of the network interfaces that are associated with this endpoint. During the recovery process, the endpoint functions with limited capacity because of the limit on the number of DNS queries per IP address (per network interface). For the current limit, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html#limits-api-entities-resolver\">Limits on Route 53 Resolver</a>.</p> </li> <li> <p> <code>ACTION_NEEDED</code>: This endpoint is unhealthy, and Resolver can't automatically recover it. To resolve the problem, we recommend that you check each IP address that you associated with the endpoint. For each IP address that isn't available, add another IP address and then delete the IP address that isn't available. (An endpoint must always include at least two IP addresses.) A status of <code>ACTION_NEEDED</code> can have a variety of causes. Here are two common causes:</p> <ul> <li> <p>One or more of the network interfaces that are associated with the endpoint were deleted using Amazon VPC.</p> </li> <li> <p>The network interface couldn't be created for some reason that's outside the control of Resolver.</p> </li> </ul> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this endpoint and the associated network interfaces.</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverEndpointStatus*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "<p>A code that specifies the current status of the Resolver endpoint. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating and configuring one or more Amazon VPC network interfaces for this endpoint.</p> </li> <li> <p> <code>OPERATIONAL</code>: The Amazon VPC network interfaces for this endpoint are correctly configured and able to pass inbound or outbound DNS queries between your network and Resolver.</p> </li> <li> <p> <code>UPDATING</code>: Resolver is associating or disassociating one or more network interfaces with this endpoint.</p> </li> <li> <p> <code>AUTO_RECOVERING</code>: Resolver is trying to recover one or more of the network interfaces that are associated with this endpoint. During the recovery process, the endpoint functions with limited capacity because of the limit on the number of DNS queries per IP address (per network interface). For the current limit, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html#limits-api-entities-resolver\">Limits on Route 53 Resolver</a>.</p> </li> <li> <p> <code>ACTION_NEEDED</code>: This endpoint is unhealthy, and Resolver can't automatically recover it. To resolve the problem, we recommend that you check each IP address that you associated with the endpoint. For each IP address that isn't available, add another IP address and then delete the IP address that isn't available. (An endpoint must always include at least two IP addresses.) A status of <code>ACTION_NEEDED</code> can have a variety of causes. Here are two common causes:</p> <ul> <li> <p>One or more of the network interfaces that are associated with the endpoint were deleted using Amazon VPC.</p> </li> <li> <p>The network interface couldn't be created for some reason that's outside the control of Resolver.</p> </li> </ul> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this endpoint and the associated network interfaces.</p> </li> </ul>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "StatusMessage",
        "c2jShape" : "StatusMessage",
        "deprecated" : false,
        "documentation" : "<p>A detailed description of the status of the Resolver endpoint.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A detailed description of the status of the Resolver endpoint.</p>\n@param statusMessage A detailed description of the status of the Resolver endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withStatusMessage",
        "getterDocumentation" : "/**<p>A detailed description of the status of the Resolver endpoint.</p>\n@return A detailed description of the status of the Resolver endpoint.*/",
        "getterMethodName" : "getStatusMessage",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "StatusMessage",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "StatusMessage",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "StatusMessage",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A detailed description of the status of the Resolver endpoint.</p>\n@param statusMessage A detailed description of the status of the Resolver endpoint.*/",
        "setterMethodName" : "setStatusMessage",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "statusMessage",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A detailed description of the status of the Resolver endpoint.</p>\n@param statusMessage A detailed description of the status of the Resolver endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "statusMessage",
          "variableType" : "String",
          "documentation" : "<p>A detailed description of the status of the Resolver endpoint.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "CreationTime",
        "c2jShape" : "Rfc3339TimeString",
        "deprecated" : false,
        "documentation" : "<p>The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCreationTime",
        "getterDocumentation" : "/**<p>The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@return The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).*/",
        "getterMethodName" : "getCreationTime",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "CreationTime",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CreationTime",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CreationTime",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).*/",
        "setterMethodName" : "setCreationTime",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "creationTime",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "creationTime",
          "variableType" : "String",
          "documentation" : "<p>The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ModificationTime",
        "c2jShape" : "Rfc3339TimeString",
        "deprecated" : false,
        "documentation" : "<p>The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param modificationTime The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withModificationTime",
        "getterDocumentation" : "/**<p>The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n@return The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).*/",
        "getterMethodName" : "getModificationTime",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ModificationTime",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ModificationTime",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ModificationTime",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param modificationTime The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).*/",
        "setterMethodName" : "setModificationTime",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "modificationTime",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param modificationTime The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "modificationTime",
          "variableType" : "String",
          "documentation" : "<p>The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Arn" : {
          "c2jName" : "Arn",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>The ARN (Amazon Resource Name) for the Resolver endpoint.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ARN (Amazon Resource Name) for the Resolver endpoint.</p>\n@param arn The ARN (Amazon Resource Name) for the Resolver endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withArn",
          "getterDocumentation" : "/**<p>The ARN (Amazon Resource Name) for the Resolver endpoint.</p>\n@return The ARN (Amazon Resource Name) for the Resolver endpoint.*/",
          "getterMethodName" : "getArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Arn",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Arn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Arn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ARN (Amazon Resource Name) for the Resolver endpoint.</p>\n@param arn The ARN (Amazon Resource Name) for the Resolver endpoint.*/",
          "setterMethodName" : "setArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ARN (Amazon Resource Name) for the Resolver endpoint.</p>\n@param arn The ARN (Amazon Resource Name) for the Resolver endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "<p>The ARN (Amazon Resource Name) for the Resolver endpoint.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CreationTime" : {
          "c2jName" : "CreationTime",
          "c2jShape" : "Rfc3339TimeString",
          "deprecated" : false,
          "documentation" : "<p>The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCreationTime",
          "getterDocumentation" : "/**<p>The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@return The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).*/",
          "getterMethodName" : "getCreationTime",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "CreationTime",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CreationTime",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CreationTime",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).*/",
          "setterMethodName" : "setCreationTime",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "creationTime",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "creationTime",
            "variableType" : "String",
            "documentation" : "<p>The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CreatorRequestId" : {
          "c2jName" : "CreatorRequestId",
          "c2jShape" : "CreatorRequestId",
          "deprecated" : false,
          "documentation" : "<p>A unique string that identifies the request that created the Resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A unique string that identifies the request that created the Resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.</p>\n@param creatorRequestId A unique string that identifies the request that created the Resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCreatorRequestId",
          "getterDocumentation" : "/**<p>A unique string that identifies the request that created the Resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.</p>\n@return A unique string that identifies the request that created the Resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.*/",
          "getterMethodName" : "getCreatorRequestId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "CreatorRequestId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CreatorRequestId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CreatorRequestId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A unique string that identifies the request that created the Resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.</p>\n@param creatorRequestId A unique string that identifies the request that created the Resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.*/",
          "setterMethodName" : "setCreatorRequestId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "creatorRequestId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A unique string that identifies the request that created the Resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.</p>\n@param creatorRequestId A unique string that identifies the request that created the Resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "creatorRequestId",
            "variableType" : "String",
            "documentation" : "<p>A unique string that identifies the request that created the Resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Direction" : {
          "c2jName" : "Direction",
          "c2jShape" : "ResolverEndpointDirection",
          "deprecated" : false,
          "documentation" : "<p>Indicates whether the Resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network</p> </li> </ul>",
          "endpointDiscoveryId" : false,
          "enumType" : "ResolverEndpointDirection",
          "fluentSetterDocumentation" : "/**<p>Indicates whether the Resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network</p> </li> </ul>\n@param direction Indicates whether the Resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverEndpointDirection*/",
          "fluentSetterMethodName" : "withDirection",
          "getterDocumentation" : "/**<p>Indicates whether the Resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network</p> </li> </ul>\n@return Indicates whether the Resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network</p> </li>\n@see ResolverEndpointDirection*/",
          "getterMethodName" : "getDirection",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Direction",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Direction",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Direction",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Indicates whether the Resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network</p> </li> </ul>\n@param direction Indicates whether the Resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network</p> </li>\n@see ResolverEndpointDirection*/",
          "setterMethodName" : "setDirection",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "direction",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Indicates whether the Resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network</p> </li> </ul>\n@param direction Indicates whether the Resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverEndpointDirection*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "direction",
            "variableType" : "String",
            "documentation" : "<p>Indicates whether the Resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network</p> </li> </ul>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "HostVPCId" : {
          "c2jName" : "HostVPCId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the VPC that you want to create the Resolver endpoint in.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the VPC that you want to create the Resolver endpoint in.</p>\n@param hostVPCId The ID of the VPC that you want to create the Resolver endpoint in.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withHostVPCId",
          "getterDocumentation" : "/**<p>The ID of the VPC that you want to create the Resolver endpoint in.</p>\n@return The ID of the VPC that you want to create the Resolver endpoint in.*/",
          "getterMethodName" : "getHostVPCId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "HostVPCId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "HostVPCId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "HostVPCId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the VPC that you want to create the Resolver endpoint in.</p>\n@param hostVPCId The ID of the VPC that you want to create the Resolver endpoint in.*/",
          "setterMethodName" : "setHostVPCId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "hostVPCId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the VPC that you want to create the Resolver endpoint in.</p>\n@param hostVPCId The ID of the VPC that you want to create the Resolver endpoint in.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "hostVPCId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the VPC that you want to create the Resolver endpoint in.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Id" : {
          "c2jName" : "Id",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the Resolver endpoint.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the Resolver endpoint.</p>\n@param id The ID of the Resolver endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withId",
          "getterDocumentation" : "/**<p>The ID of the Resolver endpoint.</p>\n@return The ID of the Resolver endpoint.*/",
          "getterMethodName" : "getId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Id",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Id",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Id",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the Resolver endpoint.</p>\n@param id The ID of the Resolver endpoint.*/",
          "setterMethodName" : "setId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "id",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the Resolver endpoint.</p>\n@param id The ID of the Resolver endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "id",
            "variableType" : "String",
            "documentation" : "<p>The ID of the Resolver endpoint.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "IpAddressCount" : {
          "c2jName" : "IpAddressCount",
          "c2jShape" : "IpAddressCount",
          "deprecated" : false,
          "documentation" : "<p>The number of IP addresses that the Resolver endpoint can use for DNS queries.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The number of IP addresses that the Resolver endpoint can use for DNS queries.</p>\n@param ipAddressCount The number of IP addresses that the Resolver endpoint can use for DNS queries.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withIpAddressCount",
          "getterDocumentation" : "/**<p>The number of IP addresses that the Resolver endpoint can use for DNS queries.</p>\n@return The number of IP addresses that the Resolver endpoint can use for DNS queries.*/",
          "getterMethodName" : "getIpAddressCount",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "IpAddressCount",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "IpAddressCount",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "IpAddressCount",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The number of IP addresses that the Resolver endpoint can use for DNS queries.</p>\n@param ipAddressCount The number of IP addresses that the Resolver endpoint can use for DNS queries.*/",
          "setterMethodName" : "setIpAddressCount",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "ipAddressCount",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The number of IP addresses that the Resolver endpoint can use for DNS queries.</p>\n@param ipAddressCount The number of IP addresses that the Resolver endpoint can use for DNS queries.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "ipAddressCount",
            "variableType" : "Integer",
            "documentation" : "<p>The number of IP addresses that the Resolver endpoint can use for DNS queries.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "ModificationTime" : {
          "c2jName" : "ModificationTime",
          "c2jShape" : "Rfc3339TimeString",
          "deprecated" : false,
          "documentation" : "<p>The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param modificationTime The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withModificationTime",
          "getterDocumentation" : "/**<p>The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n@return The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).*/",
          "getterMethodName" : "getModificationTime",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ModificationTime",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ModificationTime",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ModificationTime",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param modificationTime The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).*/",
          "setterMethodName" : "setModificationTime",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "modificationTime",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param modificationTime The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "modificationTime",
            "variableType" : "String",
            "documentation" : "<p>The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "Name",
          "deprecated" : false,
          "documentation" : "<p>The name that you assigned to the Resolver endpoint when you submitted a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name that you assigned to the Resolver endpoint when you submitted a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request.</p>\n@param name The name that you assigned to the Resolver endpoint when you submitted a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>The name that you assigned to the Resolver endpoint when you submitted a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request.</p>\n@return The name that you assigned to the Resolver endpoint when you submitted a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Name",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name that you assigned to the Resolver endpoint when you submitted a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request.</p>\n@param name The name that you assigned to the Resolver endpoint when you submitted a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name that you assigned to the Resolver endpoint when you submitted a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request.</p>\n@param name The name that you assigned to the Resolver endpoint when you submitted a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>The name that you assigned to the Resolver endpoint when you submitted a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\">CreateResolverEndpoint</a> request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SecurityGroupIds" : {
          "c2jName" : "SecurityGroupIds",
          "c2jShape" : "SecurityGroupIds",
          "deprecated" : false,
          "documentation" : "<p>The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound rules (for inbound endpoints) or outbound rules (for outbound endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound rules (for inbound endpoints) or outbound rules (for outbound endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.</p>\n@param securityGroupIds The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound rules (for inbound endpoints) or outbound rules (for outbound endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSecurityGroupIds",
          "getterDocumentation" : "/**<p>The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound rules (for inbound endpoints) or outbound rules (for outbound endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.</p>\n@return The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound rules (for inbound endpoints) or outbound rules (for outbound endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.*/",
          "getterMethodName" : "getSecurityGroupIds",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SecurityGroupIds",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SecurityGroupIds",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ResourceId",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "SecurityGroupIds",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound rules (for inbound endpoints) or outbound rules (for outbound endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.</p>\n@param securityGroupIds The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound rules (for inbound endpoints) or outbound rules (for outbound endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.*/",
          "setterMethodName" : "setSecurityGroupIds",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "securityGroupIds",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound rules (for inbound endpoints) or outbound rules (for outbound endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setSecurityGroupIds(java.util.Collection)} or {@link #withSecurityGroupIds(java.util.Collection)} if you want to override the existing values.</p>\n@param securityGroupIds The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound rules (for inbound endpoints) or outbound rules (for outbound endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "securityGroupIds",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound rules (for inbound endpoints) or outbound rules (for outbound endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "Status" : {
          "c2jName" : "Status",
          "c2jShape" : "ResolverEndpointStatus",
          "deprecated" : false,
          "documentation" : "<p>A code that specifies the current status of the Resolver endpoint. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating and configuring one or more Amazon VPC network interfaces for this endpoint.</p> </li> <li> <p> <code>OPERATIONAL</code>: The Amazon VPC network interfaces for this endpoint are correctly configured and able to pass inbound or outbound DNS queries between your network and Resolver.</p> </li> <li> <p> <code>UPDATING</code>: Resolver is associating or disassociating one or more network interfaces with this endpoint.</p> </li> <li> <p> <code>AUTO_RECOVERING</code>: Resolver is trying to recover one or more of the network interfaces that are associated with this endpoint. During the recovery process, the endpoint functions with limited capacity because of the limit on the number of DNS queries per IP address (per network interface). For the current limit, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html#limits-api-entities-resolver\">Limits on Route 53 Resolver</a>.</p> </li> <li> <p> <code>ACTION_NEEDED</code>: This endpoint is unhealthy, and Resolver can't automatically recover it. To resolve the problem, we recommend that you check each IP address that you associated with the endpoint. For each IP address that isn't available, add another IP address and then delete the IP address that isn't available. (An endpoint must always include at least two IP addresses.) A status of <code>ACTION_NEEDED</code> can have a variety of causes. Here are two common causes:</p> <ul> <li> <p>One or more of the network interfaces that are associated with the endpoint were deleted using Amazon VPC.</p> </li> <li> <p>The network interface couldn't be created for some reason that's outside the control of Resolver.</p> </li> </ul> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this endpoint and the associated network interfaces.</p> </li> </ul>",
          "endpointDiscoveryId" : false,
          "enumType" : "ResolverEndpointStatus",
          "fluentSetterDocumentation" : "/**<p>A code that specifies the current status of the Resolver endpoint. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating and configuring one or more Amazon VPC network interfaces for this endpoint.</p> </li> <li> <p> <code>OPERATIONAL</code>: The Amazon VPC network interfaces for this endpoint are correctly configured and able to pass inbound or outbound DNS queries between your network and Resolver.</p> </li> <li> <p> <code>UPDATING</code>: Resolver is associating or disassociating one or more network interfaces with this endpoint.</p> </li> <li> <p> <code>AUTO_RECOVERING</code>: Resolver is trying to recover one or more of the network interfaces that are associated with this endpoint. During the recovery process, the endpoint functions with limited capacity because of the limit on the number of DNS queries per IP address (per network interface). For the current limit, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html#limits-api-entities-resolver\">Limits on Route 53 Resolver</a>.</p> </li> <li> <p> <code>ACTION_NEEDED</code>: This endpoint is unhealthy, and Resolver can't automatically recover it. To resolve the problem, we recommend that you check each IP address that you associated with the endpoint. For each IP address that isn't available, add another IP address and then delete the IP address that isn't available. (An endpoint must always include at least two IP addresses.) A status of <code>ACTION_NEEDED</code> can have a variety of causes. Here are two common causes:</p> <ul> <li> <p>One or more of the network interfaces that are associated with the endpoint were deleted using Amazon VPC.</p> </li> <li> <p>The network interface couldn't be created for some reason that's outside the control of Resolver.</p> </li> </ul> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this endpoint and the associated network interfaces.</p> </li> </ul>\n@param status A code that specifies the current status of the Resolver endpoint. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating and configuring one or more Amazon VPC network interfaces for this endpoint.</p> </li> <li> <p> <code>OPERATIONAL</code>: The Amazon VPC network interfaces for this endpoint are correctly configured and able to pass inbound or outbound DNS queries between your network and Resolver.</p> </li> <li> <p> <code>UPDATING</code>: Resolver is associating or disassociating one or more network interfaces with this endpoint.</p> </li> <li> <p> <code>AUTO_RECOVERING</code>: Resolver is trying to recover one or more of the network interfaces that are associated with this endpoint. During the recovery process, the endpoint functions with limited capacity because of the limit on the number of DNS queries per IP address (per network interface). For the current limit, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html#limits-api-entities-resolver\">Limits on Route 53 Resolver</a>.</p> </li> <li> <p> <code>ACTION_NEEDED</code>: This endpoint is unhealthy, and Resolver can't automatically recover it. To resolve the problem, we recommend that you check each IP address that you associated with the endpoint. For each IP address that isn't available, add another IP address and then delete the IP address that isn't available. (An endpoint must always include at least two IP addresses.) A status of <code>ACTION_NEEDED</code> can have a variety of causes. Here are two common causes:</p> <ul> <li> <p>One or more of the network interfaces that are associated with the endpoint were deleted using Amazon VPC.</p> </li> <li> <p>The network interface couldn't be created for some reason that's outside the control of Resolver.</p> </li> </ul> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this endpoint and the associated network interfaces.</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverEndpointStatus*/",
          "fluentSetterMethodName" : "withStatus",
          "getterDocumentation" : "/**<p>A code that specifies the current status of the Resolver endpoint. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating and configuring one or more Amazon VPC network interfaces for this endpoint.</p> </li> <li> <p> <code>OPERATIONAL</code>: The Amazon VPC network interfaces for this endpoint are correctly configured and able to pass inbound or outbound DNS queries between your network and Resolver.</p> </li> <li> <p> <code>UPDATING</code>: Resolver is associating or disassociating one or more network interfaces with this endpoint.</p> </li> <li> <p> <code>AUTO_RECOVERING</code>: Resolver is trying to recover one or more of the network interfaces that are associated with this endpoint. During the recovery process, the endpoint functions with limited capacity because of the limit on the number of DNS queries per IP address (per network interface). For the current limit, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html#limits-api-entities-resolver\">Limits on Route 53 Resolver</a>.</p> </li> <li> <p> <code>ACTION_NEEDED</code>: This endpoint is unhealthy, and Resolver can't automatically recover it. To resolve the problem, we recommend that you check each IP address that you associated with the endpoint. For each IP address that isn't available, add another IP address and then delete the IP address that isn't available. (An endpoint must always include at least two IP addresses.) A status of <code>ACTION_NEEDED</code> can have a variety of causes. Here are two common causes:</p> <ul> <li> <p>One or more of the network interfaces that are associated with the endpoint were deleted using Amazon VPC.</p> </li> <li> <p>The network interface couldn't be created for some reason that's outside the control of Resolver.</p> </li> </ul> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this endpoint and the associated network interfaces.</p> </li> </ul>\n@return A code that specifies the current status of the Resolver endpoint. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating and configuring one or more Amazon VPC network interfaces for this endpoint.</p> </li> <li> <p> <code>OPERATIONAL</code>: The Amazon VPC network interfaces for this endpoint are correctly configured and able to pass inbound or outbound DNS queries between your network and Resolver.</p> </li> <li> <p> <code>UPDATING</code>: Resolver is associating or disassociating one or more network interfaces with this endpoint.</p> </li> <li> <p> <code>AUTO_RECOVERING</code>: Resolver is trying to recover one or more of the network interfaces that are associated with this endpoint. During the recovery process, the endpoint functions with limited capacity because of the limit on the number of DNS queries per IP address (per network interface). For the current limit, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html#limits-api-entities-resolver\">Limits on Route 53 Resolver</a>.</p> </li> <li> <p> <code>ACTION_NEEDED</code>: This endpoint is unhealthy, and Resolver can't automatically recover it. To resolve the problem, we recommend that you check each IP address that you associated with the endpoint. For each IP address that isn't available, add another IP address and then delete the IP address that isn't available. (An endpoint must always include at least two IP addresses.) A status of <code>ACTION_NEEDED</code> can have a variety of causes. Here are two common causes:</p> <ul> <li> <p>One or more of the network interfaces that are associated with the endpoint were deleted using Amazon VPC.</p> </li> <li> <p>The network interface couldn't be created for some reason that's outside the control of Resolver.</p> </li> </ul> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this endpoint and the associated network interfaces.</p> </li>\n@see ResolverEndpointStatus*/",
          "getterMethodName" : "getStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Status",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Status",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Status",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A code that specifies the current status of the Resolver endpoint. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating and configuring one or more Amazon VPC network interfaces for this endpoint.</p> </li> <li> <p> <code>OPERATIONAL</code>: The Amazon VPC network interfaces for this endpoint are correctly configured and able to pass inbound or outbound DNS queries between your network and Resolver.</p> </li> <li> <p> <code>UPDATING</code>: Resolver is associating or disassociating one or more network interfaces with this endpoint.</p> </li> <li> <p> <code>AUTO_RECOVERING</code>: Resolver is trying to recover one or more of the network interfaces that are associated with this endpoint. During the recovery process, the endpoint functions with limited capacity because of the limit on the number of DNS queries per IP address (per network interface). For the current limit, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html#limits-api-entities-resolver\">Limits on Route 53 Resolver</a>.</p> </li> <li> <p> <code>ACTION_NEEDED</code>: This endpoint is unhealthy, and Resolver can't automatically recover it. To resolve the problem, we recommend that you check each IP address that you associated with the endpoint. For each IP address that isn't available, add another IP address and then delete the IP address that isn't available. (An endpoint must always include at least two IP addresses.) A status of <code>ACTION_NEEDED</code> can have a variety of causes. Here are two common causes:</p> <ul> <li> <p>One or more of the network interfaces that are associated with the endpoint were deleted using Amazon VPC.</p> </li> <li> <p>The network interface couldn't be created for some reason that's outside the control of Resolver.</p> </li> </ul> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this endpoint and the associated network interfaces.</p> </li> </ul>\n@param status A code that specifies the current status of the Resolver endpoint. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating and configuring one or more Amazon VPC network interfaces for this endpoint.</p> </li> <li> <p> <code>OPERATIONAL</code>: The Amazon VPC network interfaces for this endpoint are correctly configured and able to pass inbound or outbound DNS queries between your network and Resolver.</p> </li> <li> <p> <code>UPDATING</code>: Resolver is associating or disassociating one or more network interfaces with this endpoint.</p> </li> <li> <p> <code>AUTO_RECOVERING</code>: Resolver is trying to recover one or more of the network interfaces that are associated with this endpoint. During the recovery process, the endpoint functions with limited capacity because of the limit on the number of DNS queries per IP address (per network interface). For the current limit, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html#limits-api-entities-resolver\">Limits on Route 53 Resolver</a>.</p> </li> <li> <p> <code>ACTION_NEEDED</code>: This endpoint is unhealthy, and Resolver can't automatically recover it. To resolve the problem, we recommend that you check each IP address that you associated with the endpoint. For each IP address that isn't available, add another IP address and then delete the IP address that isn't available. (An endpoint must always include at least two IP addresses.) A status of <code>ACTION_NEEDED</code> can have a variety of causes. Here are two common causes:</p> <ul> <li> <p>One or more of the network interfaces that are associated with the endpoint were deleted using Amazon VPC.</p> </li> <li> <p>The network interface couldn't be created for some reason that's outside the control of Resolver.</p> </li> </ul> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this endpoint and the associated network interfaces.</p> </li>\n@see ResolverEndpointStatus*/",
          "setterMethodName" : "setStatus",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A code that specifies the current status of the Resolver endpoint. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating and configuring one or more Amazon VPC network interfaces for this endpoint.</p> </li> <li> <p> <code>OPERATIONAL</code>: The Amazon VPC network interfaces for this endpoint are correctly configured and able to pass inbound or outbound DNS queries between your network and Resolver.</p> </li> <li> <p> <code>UPDATING</code>: Resolver is associating or disassociating one or more network interfaces with this endpoint.</p> </li> <li> <p> <code>AUTO_RECOVERING</code>: Resolver is trying to recover one or more of the network interfaces that are associated with this endpoint. During the recovery process, the endpoint functions with limited capacity because of the limit on the number of DNS queries per IP address (per network interface). For the current limit, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html#limits-api-entities-resolver\">Limits on Route 53 Resolver</a>.</p> </li> <li> <p> <code>ACTION_NEEDED</code>: This endpoint is unhealthy, and Resolver can't automatically recover it. To resolve the problem, we recommend that you check each IP address that you associated with the endpoint. For each IP address that isn't available, add another IP address and then delete the IP address that isn't available. (An endpoint must always include at least two IP addresses.) A status of <code>ACTION_NEEDED</code> can have a variety of causes. Here are two common causes:</p> <ul> <li> <p>One or more of the network interfaces that are associated with the endpoint were deleted using Amazon VPC.</p> </li> <li> <p>The network interface couldn't be created for some reason that's outside the control of Resolver.</p> </li> </ul> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this endpoint and the associated network interfaces.</p> </li> </ul>\n@param status A code that specifies the current status of the Resolver endpoint. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating and configuring one or more Amazon VPC network interfaces for this endpoint.</p> </li> <li> <p> <code>OPERATIONAL</code>: The Amazon VPC network interfaces for this endpoint are correctly configured and able to pass inbound or outbound DNS queries between your network and Resolver.</p> </li> <li> <p> <code>UPDATING</code>: Resolver is associating or disassociating one or more network interfaces with this endpoint.</p> </li> <li> <p> <code>AUTO_RECOVERING</code>: Resolver is trying to recover one or more of the network interfaces that are associated with this endpoint. During the recovery process, the endpoint functions with limited capacity because of the limit on the number of DNS queries per IP address (per network interface). For the current limit, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html#limits-api-entities-resolver\">Limits on Route 53 Resolver</a>.</p> </li> <li> <p> <code>ACTION_NEEDED</code>: This endpoint is unhealthy, and Resolver can't automatically recover it. To resolve the problem, we recommend that you check each IP address that you associated with the endpoint. For each IP address that isn't available, add another IP address and then delete the IP address that isn't available. (An endpoint must always include at least two IP addresses.) A status of <code>ACTION_NEEDED</code> can have a variety of causes. Here are two common causes:</p> <ul> <li> <p>One or more of the network interfaces that are associated with the endpoint were deleted using Amazon VPC.</p> </li> <li> <p>The network interface couldn't be created for some reason that's outside the control of Resolver.</p> </li> </ul> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this endpoint and the associated network interfaces.</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverEndpointStatus*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "<p>A code that specifies the current status of the Resolver endpoint. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating and configuring one or more Amazon VPC network interfaces for this endpoint.</p> </li> <li> <p> <code>OPERATIONAL</code>: The Amazon VPC network interfaces for this endpoint are correctly configured and able to pass inbound or outbound DNS queries between your network and Resolver.</p> </li> <li> <p> <code>UPDATING</code>: Resolver is associating or disassociating one or more network interfaces with this endpoint.</p> </li> <li> <p> <code>AUTO_RECOVERING</code>: Resolver is trying to recover one or more of the network interfaces that are associated with this endpoint. During the recovery process, the endpoint functions with limited capacity because of the limit on the number of DNS queries per IP address (per network interface). For the current limit, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html#limits-api-entities-resolver\">Limits on Route 53 Resolver</a>.</p> </li> <li> <p> <code>ACTION_NEEDED</code>: This endpoint is unhealthy, and Resolver can't automatically recover it. To resolve the problem, we recommend that you check each IP address that you associated with the endpoint. For each IP address that isn't available, add another IP address and then delete the IP address that isn't available. (An endpoint must always include at least two IP addresses.) A status of <code>ACTION_NEEDED</code> can have a variety of causes. Here are two common causes:</p> <ul> <li> <p>One or more of the network interfaces that are associated with the endpoint were deleted using Amazon VPC.</p> </li> <li> <p>The network interface couldn't be created for some reason that's outside the control of Resolver.</p> </li> </ul> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this endpoint and the associated network interfaces.</p> </li> </ul>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "StatusMessage" : {
          "c2jName" : "StatusMessage",
          "c2jShape" : "StatusMessage",
          "deprecated" : false,
          "documentation" : "<p>A detailed description of the status of the Resolver endpoint.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A detailed description of the status of the Resolver endpoint.</p>\n@param statusMessage A detailed description of the status of the Resolver endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withStatusMessage",
          "getterDocumentation" : "/**<p>A detailed description of the status of the Resolver endpoint.</p>\n@return A detailed description of the status of the Resolver endpoint.*/",
          "getterMethodName" : "getStatusMessage",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "StatusMessage",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "StatusMessage",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "StatusMessage",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A detailed description of the status of the Resolver endpoint.</p>\n@param statusMessage A detailed description of the status of the Resolver endpoint.*/",
          "setterMethodName" : "setStatusMessage",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "statusMessage",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A detailed description of the status of the Resolver endpoint.</p>\n@param statusMessage A detailed description of the status of the Resolver endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "statusMessage",
            "variableType" : "String",
            "documentation" : "<p>A detailed description of the status of the Resolver endpoint.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResolverEndpoint",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResolverEndpoint",
        "variableName" : "resolverEndpoint",
        "variableType" : "ResolverEndpoint",
        "documentation" : null,
        "simpleType" : "ResolverEndpoint",
        "variableSetterType" : "ResolverEndpoint"
      },
      "wrapper" : false
    },
    "ResolverEndpointDirection" : {
      "c2jName" : "ResolverEndpointDirection",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : [ {
        "name" : "INBOUND",
        "value" : "INBOUND"
      }, {
        "name" : "OUTBOUND",
        "value" : "OUTBOUND"
      } ],
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.enum.ResolverEndpointDirection",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.route53resolver.enum",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResolverEndpointDirection",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResolverEndpointDirection",
        "variableName" : "resolverEndpointDirection",
        "variableType" : "ResolverEndpointDirection",
        "documentation" : null,
        "simpleType" : "ResolverEndpointDirection",
        "variableSetterType" : "ResolverEndpointDirection"
      },
      "wrapper" : false
    },
    "ResolverEndpointStatus" : {
      "c2jName" : "ResolverEndpointStatus",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : [ {
        "name" : "CREATING",
        "value" : "CREATING"
      }, {
        "name" : "OPERATIONAL",
        "value" : "OPERATIONAL"
      }, {
        "name" : "UPDATING",
        "value" : "UPDATING"
      }, {
        "name" : "AUTO_RECOVERING",
        "value" : "AUTO_RECOVERING"
      }, {
        "name" : "ACTION_NEEDED",
        "value" : "ACTION_NEEDED"
      }, {
        "name" : "DELETING",
        "value" : "DELETING"
      } ],
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.enum.ResolverEndpointStatus",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.route53resolver.enum",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResolverEndpointStatus",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResolverEndpointStatus",
        "variableName" : "resolverEndpointStatus",
        "variableType" : "ResolverEndpointStatus",
        "documentation" : null,
        "simpleType" : "ResolverEndpointStatus",
        "variableSetterType" : "ResolverEndpointStatus"
      },
      "wrapper" : false
    },
    "ResolverQueryLogConfig" : {
      "c2jName" : "ResolverQueryLogConfig",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>In the response to a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverQueryLogConfig.html\">CreateResolverQueryLogConfig</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DeleteResolverQueryLogConfig.html\">DeleteResolverQueryLogConfig</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverQueryLogConfig.html\">GetResolverQueryLogConfig</a>, or <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigs.html\">ListResolverQueryLogConfigs</a> request, a complex type that contains settings for one query logging configuration.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.model.ResolverQueryLogConfig",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Id",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID for the query logging configuration.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID for the query logging configuration.</p>\n@param id The ID for the query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withId",
        "getterDocumentation" : "/**<p>The ID for the query logging configuration.</p>\n@return The ID for the query logging configuration.*/",
        "getterMethodName" : "getId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Id",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Id",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Id",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID for the query logging configuration.</p>\n@param id The ID for the query logging configuration.*/",
        "setterMethodName" : "setId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "id",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID for the query logging configuration.</p>\n@param id The ID for the query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "id",
          "variableType" : "String",
          "documentation" : "<p>The ID for the query logging configuration.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "OwnerId",
        "c2jShape" : "AccountId",
        "deprecated" : false,
        "documentation" : "<p>The AWS account ID for the account that created the query logging configuration. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The AWS account ID for the account that created the query logging configuration. </p>\n@param ownerId The AWS account ID for the account that created the query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withOwnerId",
        "getterDocumentation" : "/**<p>The AWS account ID for the account that created the query logging configuration. </p>\n@return The AWS account ID for the account that created the query logging configuration.*/",
        "getterMethodName" : "getOwnerId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "OwnerId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "OwnerId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "OwnerId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The AWS account ID for the account that created the query logging configuration. </p>\n@param ownerId The AWS account ID for the account that created the query logging configuration.*/",
        "setterMethodName" : "setOwnerId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ownerId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The AWS account ID for the account that created the query logging configuration. </p>\n@param ownerId The AWS account ID for the account that created the query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ownerId",
          "variableType" : "String",
          "documentation" : "<p>The AWS account ID for the account that created the query logging configuration. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Status",
        "c2jShape" : "ResolverQueryLogConfigStatus",
        "deprecated" : false,
        "documentation" : "<p>The status of the specified query logging configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver can't deliver logs to the location that is specified in the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul>",
        "endpointDiscoveryId" : false,
        "enumType" : "ResolverQueryLogConfigStatus",
        "fluentSetterDocumentation" : "/**<p>The status of the specified query logging configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver can't deliver logs to the location that is specified in the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul>\n@param status The status of the specified query logging configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver can't deliver logs to the location that is specified in the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverQueryLogConfigStatus*/",
        "fluentSetterMethodName" : "withStatus",
        "getterDocumentation" : "/**<p>The status of the specified query logging configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver can't deliver logs to the location that is specified in the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul>\n@return The status of the specified query logging configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver can't deliver logs to the location that is specified in the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li>\n@see ResolverQueryLogConfigStatus*/",
        "getterMethodName" : "getStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Status",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Status",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Status",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The status of the specified query logging configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver can't deliver logs to the location that is specified in the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul>\n@param status The status of the specified query logging configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver can't deliver logs to the location that is specified in the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li>\n@see ResolverQueryLogConfigStatus*/",
        "setterMethodName" : "setStatus",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The status of the specified query logging configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver can't deliver logs to the location that is specified in the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul>\n@param status The status of the specified query logging configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver can't deliver logs to the location that is specified in the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverQueryLogConfigStatus*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "<p>The status of the specified query logging configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver can't deliver logs to the location that is specified in the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ShareStatus",
        "c2jShape" : "ShareStatus",
        "deprecated" : false,
        "documentation" : "<p>An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).</p>",
        "endpointDiscoveryId" : false,
        "enumType" : "ShareStatus",
        "fluentSetterDocumentation" : "/**<p>An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).</p>\n@param shareStatus An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).\n@return Returns a reference to this object so that method calls can be chained together.\n@see ShareStatus*/",
        "fluentSetterMethodName" : "withShareStatus",
        "getterDocumentation" : "/**<p>An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).</p>\n@return An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).\n@see ShareStatus*/",
        "getterMethodName" : "getShareStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ShareStatus",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ShareStatus",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ShareStatus",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).</p>\n@param shareStatus An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).\n@see ShareStatus*/",
        "setterMethodName" : "setShareStatus",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "shareStatus",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).</p>\n@param shareStatus An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).\n@return Returns a reference to this object so that method calls can be chained together.\n@see ShareStatus*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "shareStatus",
          "variableType" : "String",
          "documentation" : "<p>An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "AssociationCount",
        "c2jShape" : "Count",
        "deprecated" : false,
        "documentation" : "<p>The number of VPCs that are associated with the query logging configuration.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The number of VPCs that are associated with the query logging configuration.</p>\n@param associationCount The number of VPCs that are associated with the query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAssociationCount",
        "getterDocumentation" : "/**<p>The number of VPCs that are associated with the query logging configuration.</p>\n@return The number of VPCs that are associated with the query logging configuration.*/",
        "getterMethodName" : "getAssociationCount",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "AssociationCount",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "AssociationCount",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "AssociationCount",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The number of VPCs that are associated with the query logging configuration.</p>\n@param associationCount The number of VPCs that are associated with the query logging configuration.*/",
        "setterMethodName" : "setAssociationCount",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "associationCount",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The number of VPCs that are associated with the query logging configuration.</p>\n@param associationCount The number of VPCs that are associated with the query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "associationCount",
          "variableType" : "Integer",
          "documentation" : "<p>The number of VPCs that are associated with the query logging configuration.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Arn",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>The ARN for the query logging configuration.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ARN for the query logging configuration.</p>\n@param arn The ARN for the query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withArn",
        "getterDocumentation" : "/**<p>The ARN for the query logging configuration.</p>\n@return The ARN for the query logging configuration.*/",
        "getterMethodName" : "getArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Arn",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Arn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Arn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ARN for the query logging configuration.</p>\n@param arn The ARN for the query logging configuration.*/",
        "setterMethodName" : "setArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ARN for the query logging configuration.</p>\n@param arn The ARN for the query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "<p>The ARN for the query logging configuration.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Name",
        "c2jShape" : "ResolverQueryLogConfigName",
        "deprecated" : false,
        "documentation" : "<p>The name of the query logging configuration. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the query logging configuration. </p>\n@param name The name of the query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>The name of the query logging configuration. </p>\n@return The name of the query logging configuration.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Name",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the query logging configuration. </p>\n@param name The name of the query logging configuration.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the query logging configuration. </p>\n@param name The name of the query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>The name of the query logging configuration. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "DestinationArn",
        "c2jShape" : "DestinationArn",
        "deprecated" : false,
        "documentation" : "<p>The ARN of the resource that you want Resolver to send query logs: an Amazon S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ARN of the resource that you want Resolver to send query logs: an Amazon S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.</p>\n@param destinationArn The ARN of the resource that you want Resolver to send query logs: an Amazon S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDestinationArn",
        "getterDocumentation" : "/**<p>The ARN of the resource that you want Resolver to send query logs: an Amazon S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.</p>\n@return The ARN of the resource that you want Resolver to send query logs: an Amazon S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.*/",
        "getterMethodName" : "getDestinationArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "DestinationArn",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "DestinationArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "DestinationArn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ARN of the resource that you want Resolver to send query logs: an Amazon S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.</p>\n@param destinationArn The ARN of the resource that you want Resolver to send query logs: an Amazon S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.*/",
        "setterMethodName" : "setDestinationArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "destinationArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ARN of the resource that you want Resolver to send query logs: an Amazon S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.</p>\n@param destinationArn The ARN of the resource that you want Resolver to send query logs: an Amazon S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "destinationArn",
          "variableType" : "String",
          "documentation" : "<p>The ARN of the resource that you want Resolver to send query logs: an Amazon S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "CreatorRequestId",
        "c2jShape" : "CreatorRequestId",
        "deprecated" : false,
        "documentation" : "<p>A unique string that identifies the request that created the query logging configuration. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A unique string that identifies the request that created the query logging configuration. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.</p>\n@param creatorRequestId A unique string that identifies the request that created the query logging configuration. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCreatorRequestId",
        "getterDocumentation" : "/**<p>A unique string that identifies the request that created the query logging configuration. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.</p>\n@return A unique string that identifies the request that created the query logging configuration. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.*/",
        "getterMethodName" : "getCreatorRequestId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "CreatorRequestId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CreatorRequestId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CreatorRequestId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A unique string that identifies the request that created the query logging configuration. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.</p>\n@param creatorRequestId A unique string that identifies the request that created the query logging configuration. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.*/",
        "setterMethodName" : "setCreatorRequestId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "creatorRequestId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A unique string that identifies the request that created the query logging configuration. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.</p>\n@param creatorRequestId A unique string that identifies the request that created the query logging configuration. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "creatorRequestId",
          "variableType" : "String",
          "documentation" : "<p>A unique string that identifies the request that created the query logging configuration. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "CreationTime",
        "c2jShape" : "Rfc3339TimeString",
        "deprecated" : false,
        "documentation" : "<p>The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC).</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCreationTime",
        "getterDocumentation" : "/**<p>The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@return The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC).*/",
        "getterMethodName" : "getCreationTime",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "CreationTime",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CreationTime",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CreationTime",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC).*/",
        "setterMethodName" : "setCreationTime",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "creationTime",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "creationTime",
          "variableType" : "String",
          "documentation" : "<p>The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC).</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Arn" : {
          "c2jName" : "Arn",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>The ARN for the query logging configuration.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ARN for the query logging configuration.</p>\n@param arn The ARN for the query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withArn",
          "getterDocumentation" : "/**<p>The ARN for the query logging configuration.</p>\n@return The ARN for the query logging configuration.*/",
          "getterMethodName" : "getArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Arn",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Arn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Arn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ARN for the query logging configuration.</p>\n@param arn The ARN for the query logging configuration.*/",
          "setterMethodName" : "setArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ARN for the query logging configuration.</p>\n@param arn The ARN for the query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "<p>The ARN for the query logging configuration.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "AssociationCount" : {
          "c2jName" : "AssociationCount",
          "c2jShape" : "Count",
          "deprecated" : false,
          "documentation" : "<p>The number of VPCs that are associated with the query logging configuration.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The number of VPCs that are associated with the query logging configuration.</p>\n@param associationCount The number of VPCs that are associated with the query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAssociationCount",
          "getterDocumentation" : "/**<p>The number of VPCs that are associated with the query logging configuration.</p>\n@return The number of VPCs that are associated with the query logging configuration.*/",
          "getterMethodName" : "getAssociationCount",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "AssociationCount",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "AssociationCount",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "AssociationCount",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The number of VPCs that are associated with the query logging configuration.</p>\n@param associationCount The number of VPCs that are associated with the query logging configuration.*/",
          "setterMethodName" : "setAssociationCount",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "associationCount",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The number of VPCs that are associated with the query logging configuration.</p>\n@param associationCount The number of VPCs that are associated with the query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "associationCount",
            "variableType" : "Integer",
            "documentation" : "<p>The number of VPCs that are associated with the query logging configuration.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "CreationTime" : {
          "c2jName" : "CreationTime",
          "c2jShape" : "Rfc3339TimeString",
          "deprecated" : false,
          "documentation" : "<p>The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC).</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCreationTime",
          "getterDocumentation" : "/**<p>The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@return The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC).*/",
          "getterMethodName" : "getCreationTime",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "CreationTime",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CreationTime",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CreationTime",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC).*/",
          "setterMethodName" : "setCreationTime",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "creationTime",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "creationTime",
            "variableType" : "String",
            "documentation" : "<p>The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC).</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CreatorRequestId" : {
          "c2jName" : "CreatorRequestId",
          "c2jShape" : "CreatorRequestId",
          "deprecated" : false,
          "documentation" : "<p>A unique string that identifies the request that created the query logging configuration. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A unique string that identifies the request that created the query logging configuration. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.</p>\n@param creatorRequestId A unique string that identifies the request that created the query logging configuration. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCreatorRequestId",
          "getterDocumentation" : "/**<p>A unique string that identifies the request that created the query logging configuration. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.</p>\n@return A unique string that identifies the request that created the query logging configuration. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.*/",
          "getterMethodName" : "getCreatorRequestId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "CreatorRequestId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CreatorRequestId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CreatorRequestId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A unique string that identifies the request that created the query logging configuration. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.</p>\n@param creatorRequestId A unique string that identifies the request that created the query logging configuration. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.*/",
          "setterMethodName" : "setCreatorRequestId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "creatorRequestId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A unique string that identifies the request that created the query logging configuration. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.</p>\n@param creatorRequestId A unique string that identifies the request that created the query logging configuration. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "creatorRequestId",
            "variableType" : "String",
            "documentation" : "<p>A unique string that identifies the request that created the query logging configuration. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "DestinationArn" : {
          "c2jName" : "DestinationArn",
          "c2jShape" : "DestinationArn",
          "deprecated" : false,
          "documentation" : "<p>The ARN of the resource that you want Resolver to send query logs: an Amazon S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ARN of the resource that you want Resolver to send query logs: an Amazon S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.</p>\n@param destinationArn The ARN of the resource that you want Resolver to send query logs: an Amazon S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDestinationArn",
          "getterDocumentation" : "/**<p>The ARN of the resource that you want Resolver to send query logs: an Amazon S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.</p>\n@return The ARN of the resource that you want Resolver to send query logs: an Amazon S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.*/",
          "getterMethodName" : "getDestinationArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "DestinationArn",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "DestinationArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "DestinationArn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ARN of the resource that you want Resolver to send query logs: an Amazon S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.</p>\n@param destinationArn The ARN of the resource that you want Resolver to send query logs: an Amazon S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.*/",
          "setterMethodName" : "setDestinationArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "destinationArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ARN of the resource that you want Resolver to send query logs: an Amazon S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.</p>\n@param destinationArn The ARN of the resource that you want Resolver to send query logs: an Amazon S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "destinationArn",
            "variableType" : "String",
            "documentation" : "<p>The ARN of the resource that you want Resolver to send query logs: an Amazon S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Id" : {
          "c2jName" : "Id",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID for the query logging configuration.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID for the query logging configuration.</p>\n@param id The ID for the query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withId",
          "getterDocumentation" : "/**<p>The ID for the query logging configuration.</p>\n@return The ID for the query logging configuration.*/",
          "getterMethodName" : "getId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Id",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Id",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Id",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID for the query logging configuration.</p>\n@param id The ID for the query logging configuration.*/",
          "setterMethodName" : "setId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "id",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID for the query logging configuration.</p>\n@param id The ID for the query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "id",
            "variableType" : "String",
            "documentation" : "<p>The ID for the query logging configuration.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "ResolverQueryLogConfigName",
          "deprecated" : false,
          "documentation" : "<p>The name of the query logging configuration. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the query logging configuration. </p>\n@param name The name of the query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>The name of the query logging configuration. </p>\n@return The name of the query logging configuration.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Name",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the query logging configuration. </p>\n@param name The name of the query logging configuration.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the query logging configuration. </p>\n@param name The name of the query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>The name of the query logging configuration. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "OwnerId" : {
          "c2jName" : "OwnerId",
          "c2jShape" : "AccountId",
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID for the account that created the query logging configuration. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The AWS account ID for the account that created the query logging configuration. </p>\n@param ownerId The AWS account ID for the account that created the query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withOwnerId",
          "getterDocumentation" : "/**<p>The AWS account ID for the account that created the query logging configuration. </p>\n@return The AWS account ID for the account that created the query logging configuration.*/",
          "getterMethodName" : "getOwnerId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "OwnerId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "OwnerId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "OwnerId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The AWS account ID for the account that created the query logging configuration. </p>\n@param ownerId The AWS account ID for the account that created the query logging configuration.*/",
          "setterMethodName" : "setOwnerId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ownerId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The AWS account ID for the account that created the query logging configuration. </p>\n@param ownerId The AWS account ID for the account that created the query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ownerId",
            "variableType" : "String",
            "documentation" : "<p>The AWS account ID for the account that created the query logging configuration. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ShareStatus" : {
          "c2jName" : "ShareStatus",
          "c2jShape" : "ShareStatus",
          "deprecated" : false,
          "documentation" : "<p>An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).</p>",
          "endpointDiscoveryId" : false,
          "enumType" : "ShareStatus",
          "fluentSetterDocumentation" : "/**<p>An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).</p>\n@param shareStatus An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).\n@return Returns a reference to this object so that method calls can be chained together.\n@see ShareStatus*/",
          "fluentSetterMethodName" : "withShareStatus",
          "getterDocumentation" : "/**<p>An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).</p>\n@return An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).\n@see ShareStatus*/",
          "getterMethodName" : "getShareStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ShareStatus",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ShareStatus",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ShareStatus",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).</p>\n@param shareStatus An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).\n@see ShareStatus*/",
          "setterMethodName" : "setShareStatus",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "shareStatus",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).</p>\n@param shareStatus An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).\n@return Returns a reference to this object so that method calls can be chained together.\n@see ShareStatus*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "shareStatus",
            "variableType" : "String",
            "documentation" : "<p>An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Status" : {
          "c2jName" : "Status",
          "c2jShape" : "ResolverQueryLogConfigStatus",
          "deprecated" : false,
          "documentation" : "<p>The status of the specified query logging configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver can't deliver logs to the location that is specified in the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul>",
          "endpointDiscoveryId" : false,
          "enumType" : "ResolverQueryLogConfigStatus",
          "fluentSetterDocumentation" : "/**<p>The status of the specified query logging configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver can't deliver logs to the location that is specified in the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul>\n@param status The status of the specified query logging configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver can't deliver logs to the location that is specified in the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverQueryLogConfigStatus*/",
          "fluentSetterMethodName" : "withStatus",
          "getterDocumentation" : "/**<p>The status of the specified query logging configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver can't deliver logs to the location that is specified in the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul>\n@return The status of the specified query logging configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver can't deliver logs to the location that is specified in the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li>\n@see ResolverQueryLogConfigStatus*/",
          "getterMethodName" : "getStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Status",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Status",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Status",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The status of the specified query logging configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver can't deliver logs to the location that is specified in the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul>\n@param status The status of the specified query logging configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver can't deliver logs to the location that is specified in the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li>\n@see ResolverQueryLogConfigStatus*/",
          "setterMethodName" : "setStatus",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The status of the specified query logging configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver can't deliver logs to the location that is specified in the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul>\n@param status The status of the specified query logging configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver can't deliver logs to the location that is specified in the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverQueryLogConfigStatus*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "<p>The status of the specified query logging configuration. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver can't deliver logs to the location that is specified in the query logging configuration. Here are two common causes:</p> <ul> <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions don't allow sending logs to the destination.</p> </li> </ul> </li> </ul>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResolverQueryLogConfig",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResolverQueryLogConfig",
        "variableName" : "resolverQueryLogConfig",
        "variableType" : "ResolverQueryLogConfig",
        "documentation" : null,
        "simpleType" : "ResolverQueryLogConfig",
        "variableSetterType" : "ResolverQueryLogConfig"
      },
      "wrapper" : false
    },
    "ResolverQueryLogConfigAssociation" : {
      "c2jName" : "ResolverQueryLogConfigAssociation",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>In the response to an <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverQueryLogConfig.html\">AssociateResolverQueryLogConfig</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DisassociateResolverQueryLogConfig.html\">DisassociateResolverQueryLogConfig</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverQueryLogConfigAssociation.html\">GetResolverQueryLogConfigAssociation</a>, or <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigAssociations.html\">ListResolverQueryLogConfigAssociations</a>, request, a complex type that contains settings for a specified association between an Amazon VPC and a query logging configuration.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.model.ResolverQueryLogConfigAssociation",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Id",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the query logging association.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the query logging association.</p>\n@param id The ID of the query logging association.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withId",
        "getterDocumentation" : "/**<p>The ID of the query logging association.</p>\n@return The ID of the query logging association.*/",
        "getterMethodName" : "getId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Id",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Id",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Id",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the query logging association.</p>\n@param id The ID of the query logging association.*/",
        "setterMethodName" : "setId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "id",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the query logging association.</p>\n@param id The ID of the query logging association.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "id",
          "variableType" : "String",
          "documentation" : "<p>The ID of the query logging association.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ResolverQueryLogConfigId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the query logging configuration that a VPC is associated with.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the query logging configuration that a VPC is associated with.</p>\n@param resolverQueryLogConfigId The ID of the query logging configuration that a VPC is associated with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverQueryLogConfigId",
        "getterDocumentation" : "/**<p>The ID of the query logging configuration that a VPC is associated with.</p>\n@return The ID of the query logging configuration that a VPC is associated with.*/",
        "getterMethodName" : "getResolverQueryLogConfigId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverQueryLogConfigId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverQueryLogConfigId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverQueryLogConfigId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the query logging configuration that a VPC is associated with.</p>\n@param resolverQueryLogConfigId The ID of the query logging configuration that a VPC is associated with.*/",
        "setterMethodName" : "setResolverQueryLogConfigId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverQueryLogConfigId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the query logging configuration that a VPC is associated with.</p>\n@param resolverQueryLogConfigId The ID of the query logging configuration that a VPC is associated with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverQueryLogConfigId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the query logging configuration that a VPC is associated with.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ResourceId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the Amazon VPC that is associated with the query logging configuration.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the Amazon VPC that is associated with the query logging configuration.</p>\n@param resourceId The ID of the Amazon VPC that is associated with the query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceId",
        "getterDocumentation" : "/**<p>The ID of the Amazon VPC that is associated with the query logging configuration.</p>\n@return The ID of the Amazon VPC that is associated with the query logging configuration.*/",
        "getterMethodName" : "getResourceId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the Amazon VPC that is associated with the query logging configuration.</p>\n@param resourceId The ID of the Amazon VPC that is associated with the query logging configuration.*/",
        "setterMethodName" : "setResourceId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the Amazon VPC that is associated with the query logging configuration.</p>\n@param resourceId The ID of the Amazon VPC that is associated with the query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the Amazon VPC that is associated with the query logging configuration.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Status",
        "c2jShape" : "ResolverQueryLogConfigAssociationStatus",
        "deprecated" : false,
        "documentation" : "<p>The status of the specified query logging association. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association.</p> </li> </ul>",
        "endpointDiscoveryId" : false,
        "enumType" : "ResolverQueryLogConfigAssociationStatus",
        "fluentSetterDocumentation" : "/**<p>The status of the specified query logging association. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association.</p> </li> </ul>\n@param status The status of the specified query logging association. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association.</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverQueryLogConfigAssociationStatus*/",
        "fluentSetterMethodName" : "withStatus",
        "getterDocumentation" : "/**<p>The status of the specified query logging association. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association.</p> </li> </ul>\n@return The status of the specified query logging association. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association.</p> </li>\n@see ResolverQueryLogConfigAssociationStatus*/",
        "getterMethodName" : "getStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Status",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Status",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Status",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The status of the specified query logging association. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association.</p> </li> </ul>\n@param status The status of the specified query logging association. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association.</p> </li>\n@see ResolverQueryLogConfigAssociationStatus*/",
        "setterMethodName" : "setStatus",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The status of the specified query logging association. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association.</p> </li> </ul>\n@param status The status of the specified query logging association. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association.</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverQueryLogConfigAssociationStatus*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "<p>The status of the specified query logging association. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association.</p> </li> </ul>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Error",
        "c2jShape" : "ResolverQueryLogConfigAssociationError",
        "deprecated" : false,
        "documentation" : "<p>If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause:</p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If the value of <code>Status</code> is a value other than <code>FAILED</code>, <code>Error</code> is null. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : "ResolverQueryLogConfigAssociationError",
        "fluentSetterDocumentation" : "/**<p>If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause:</p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If the value of <code>Status</code> is a value other than <code>FAILED</code>, <code>Error</code> is null. </p>\n@param error If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause:</p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If the value of <code>Status</code> is a value other than <code>FAILED</code>, <code>Error</code> is null.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverQueryLogConfigAssociationError*/",
        "fluentSetterMethodName" : "withError",
        "getterDocumentation" : "/**<p>If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause:</p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If the value of <code>Status</code> is a value other than <code>FAILED</code>, <code>Error</code> is null. </p>\n@return If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause:</p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If the value of <code>Status</code> is a value other than <code>FAILED</code>, <code>Error</code> is null.\n@see ResolverQueryLogConfigAssociationError*/",
        "getterMethodName" : "getError",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Error",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Error",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Error",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause:</p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If the value of <code>Status</code> is a value other than <code>FAILED</code>, <code>Error</code> is null. </p>\n@param error If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause:</p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If the value of <code>Status</code> is a value other than <code>FAILED</code>, <code>Error</code> is null.\n@see ResolverQueryLogConfigAssociationError*/",
        "setterMethodName" : "setError",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "error",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause:</p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If the value of <code>Status</code> is a value other than <code>FAILED</code>, <code>Error</code> is null. </p>\n@param error If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause:</p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If the value of <code>Status</code> is a value other than <code>FAILED</code>, <code>Error</code> is null.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverQueryLogConfigAssociationError*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "error",
          "variableType" : "String",
          "documentation" : "<p>If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause:</p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If the value of <code>Status</code> is a value other than <code>FAILED</code>, <code>Error</code> is null. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ErrorMessage",
        "c2jShape" : "ResolverQueryLogConfigAssociationErrorMessage",
        "deprecated" : false,
        "documentation" : "<p>Contains additional information about the error. If the value or <code>Error</code> is null, the value of <code>ErrorMessage</code> also is null.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Contains additional information about the error. If the value or <code>Error</code> is null, the value of <code>ErrorMessage</code> also is null.</p>\n@param errorMessage Contains additional information about the error. If the value or <code>Error</code> is null, the value of <code>ErrorMessage</code> also is null.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withErrorMessage",
        "getterDocumentation" : "/**<p>Contains additional information about the error. If the value or <code>Error</code> is null, the value of <code>ErrorMessage</code> also is null.</p>\n@return Contains additional information about the error. If the value or <code>Error</code> is null, the value of <code>ErrorMessage</code> also is null.*/",
        "getterMethodName" : "getErrorMessage",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ErrorMessage",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ErrorMessage",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ErrorMessage",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Contains additional information about the error. If the value or <code>Error</code> is null, the value of <code>ErrorMessage</code> also is null.</p>\n@param errorMessage Contains additional information about the error. If the value or <code>Error</code> is null, the value of <code>ErrorMessage</code> also is null.*/",
        "setterMethodName" : "setErrorMessage",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "errorMessage",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Contains additional information about the error. If the value or <code>Error</code> is null, the value of <code>ErrorMessage</code> also is null.</p>\n@param errorMessage Contains additional information about the error. If the value or <code>Error</code> is null, the value of <code>ErrorMessage</code> also is null.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "errorMessage",
          "variableType" : "String",
          "documentation" : "<p>Contains additional information about the error. If the value or <code>Error</code> is null, the value of <code>ErrorMessage</code> also is null.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "CreationTime",
        "c2jShape" : "Rfc3339TimeString",
        "deprecated" : false,
        "documentation" : "<p>The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCreationTime",
        "getterDocumentation" : "/**<p>The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).</p>\n@return The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).*/",
        "getterMethodName" : "getCreationTime",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "CreationTime",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CreationTime",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CreationTime",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).*/",
        "setterMethodName" : "setCreationTime",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "creationTime",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "creationTime",
          "variableType" : "String",
          "documentation" : "<p>The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CreationTime" : {
          "c2jName" : "CreationTime",
          "c2jShape" : "Rfc3339TimeString",
          "deprecated" : false,
          "documentation" : "<p>The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCreationTime",
          "getterDocumentation" : "/**<p>The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).</p>\n@return The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).*/",
          "getterMethodName" : "getCreationTime",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "CreationTime",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CreationTime",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CreationTime",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).*/",
          "setterMethodName" : "setCreationTime",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "creationTime",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "creationTime",
            "variableType" : "String",
            "documentation" : "<p>The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Error" : {
          "c2jName" : "Error",
          "c2jShape" : "ResolverQueryLogConfigAssociationError",
          "deprecated" : false,
          "documentation" : "<p>If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause:</p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If the value of <code>Status</code> is a value other than <code>FAILED</code>, <code>Error</code> is null. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : "ResolverQueryLogConfigAssociationError",
          "fluentSetterDocumentation" : "/**<p>If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause:</p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If the value of <code>Status</code> is a value other than <code>FAILED</code>, <code>Error</code> is null. </p>\n@param error If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause:</p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If the value of <code>Status</code> is a value other than <code>FAILED</code>, <code>Error</code> is null.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverQueryLogConfigAssociationError*/",
          "fluentSetterMethodName" : "withError",
          "getterDocumentation" : "/**<p>If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause:</p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If the value of <code>Status</code> is a value other than <code>FAILED</code>, <code>Error</code> is null. </p>\n@return If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause:</p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If the value of <code>Status</code> is a value other than <code>FAILED</code>, <code>Error</code> is null.\n@see ResolverQueryLogConfigAssociationError*/",
          "getterMethodName" : "getError",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Error",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Error",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Error",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause:</p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If the value of <code>Status</code> is a value other than <code>FAILED</code>, <code>Error</code> is null. </p>\n@param error If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause:</p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If the value of <code>Status</code> is a value other than <code>FAILED</code>, <code>Error</code> is null.\n@see ResolverQueryLogConfigAssociationError*/",
          "setterMethodName" : "setError",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "error",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause:</p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If the value of <code>Status</code> is a value other than <code>FAILED</code>, <code>Error</code> is null. </p>\n@param error If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause:</p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If the value of <code>Status</code> is a value other than <code>FAILED</code>, <code>Error</code> is null.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverQueryLogConfigAssociationError*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "error",
            "variableType" : "String",
            "documentation" : "<p>If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause:</p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li> </ul> <p>If the value of <code>Status</code> is a value other than <code>FAILED</code>, <code>Error</code> is null. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ErrorMessage" : {
          "c2jName" : "ErrorMessage",
          "c2jShape" : "ResolverQueryLogConfigAssociationErrorMessage",
          "deprecated" : false,
          "documentation" : "<p>Contains additional information about the error. If the value or <code>Error</code> is null, the value of <code>ErrorMessage</code> also is null.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Contains additional information about the error. If the value or <code>Error</code> is null, the value of <code>ErrorMessage</code> also is null.</p>\n@param errorMessage Contains additional information about the error. If the value or <code>Error</code> is null, the value of <code>ErrorMessage</code> also is null.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withErrorMessage",
          "getterDocumentation" : "/**<p>Contains additional information about the error. If the value or <code>Error</code> is null, the value of <code>ErrorMessage</code> also is null.</p>\n@return Contains additional information about the error. If the value or <code>Error</code> is null, the value of <code>ErrorMessage</code> also is null.*/",
          "getterMethodName" : "getErrorMessage",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ErrorMessage",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ErrorMessage",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ErrorMessage",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Contains additional information about the error. If the value or <code>Error</code> is null, the value of <code>ErrorMessage</code> also is null.</p>\n@param errorMessage Contains additional information about the error. If the value or <code>Error</code> is null, the value of <code>ErrorMessage</code> also is null.*/",
          "setterMethodName" : "setErrorMessage",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "errorMessage",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Contains additional information about the error. If the value or <code>Error</code> is null, the value of <code>ErrorMessage</code> also is null.</p>\n@param errorMessage Contains additional information about the error. If the value or <code>Error</code> is null, the value of <code>ErrorMessage</code> also is null.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "errorMessage",
            "variableType" : "String",
            "documentation" : "<p>Contains additional information about the error. If the value or <code>Error</code> is null, the value of <code>ErrorMessage</code> also is null.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Id" : {
          "c2jName" : "Id",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the query logging association.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the query logging association.</p>\n@param id The ID of the query logging association.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withId",
          "getterDocumentation" : "/**<p>The ID of the query logging association.</p>\n@return The ID of the query logging association.*/",
          "getterMethodName" : "getId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Id",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Id",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Id",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the query logging association.</p>\n@param id The ID of the query logging association.*/",
          "setterMethodName" : "setId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "id",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the query logging association.</p>\n@param id The ID of the query logging association.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "id",
            "variableType" : "String",
            "documentation" : "<p>The ID of the query logging association.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResolverQueryLogConfigId" : {
          "c2jName" : "ResolverQueryLogConfigId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the query logging configuration that a VPC is associated with.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the query logging configuration that a VPC is associated with.</p>\n@param resolverQueryLogConfigId The ID of the query logging configuration that a VPC is associated with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverQueryLogConfigId",
          "getterDocumentation" : "/**<p>The ID of the query logging configuration that a VPC is associated with.</p>\n@return The ID of the query logging configuration that a VPC is associated with.*/",
          "getterMethodName" : "getResolverQueryLogConfigId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverQueryLogConfigId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverQueryLogConfigId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverQueryLogConfigId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the query logging configuration that a VPC is associated with.</p>\n@param resolverQueryLogConfigId The ID of the query logging configuration that a VPC is associated with.*/",
          "setterMethodName" : "setResolverQueryLogConfigId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverQueryLogConfigId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the query logging configuration that a VPC is associated with.</p>\n@param resolverQueryLogConfigId The ID of the query logging configuration that a VPC is associated with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverQueryLogConfigId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the query logging configuration that a VPC is associated with.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResourceId" : {
          "c2jName" : "ResourceId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the Amazon VPC that is associated with the query logging configuration.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the Amazon VPC that is associated with the query logging configuration.</p>\n@param resourceId The ID of the Amazon VPC that is associated with the query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceId",
          "getterDocumentation" : "/**<p>The ID of the Amazon VPC that is associated with the query logging configuration.</p>\n@return The ID of the Amazon VPC that is associated with the query logging configuration.*/",
          "getterMethodName" : "getResourceId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the Amazon VPC that is associated with the query logging configuration.</p>\n@param resourceId The ID of the Amazon VPC that is associated with the query logging configuration.*/",
          "setterMethodName" : "setResourceId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the Amazon VPC that is associated with the query logging configuration.</p>\n@param resourceId The ID of the Amazon VPC that is associated with the query logging configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the Amazon VPC that is associated with the query logging configuration.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Status" : {
          "c2jName" : "Status",
          "c2jShape" : "ResolverQueryLogConfigAssociationStatus",
          "deprecated" : false,
          "documentation" : "<p>The status of the specified query logging association. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association.</p> </li> </ul>",
          "endpointDiscoveryId" : false,
          "enumType" : "ResolverQueryLogConfigAssociationStatus",
          "fluentSetterDocumentation" : "/**<p>The status of the specified query logging association. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association.</p> </li> </ul>\n@param status The status of the specified query logging association. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association.</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverQueryLogConfigAssociationStatus*/",
          "fluentSetterMethodName" : "withStatus",
          "getterDocumentation" : "/**<p>The status of the specified query logging association. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association.</p> </li> </ul>\n@return The status of the specified query logging association. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association.</p> </li>\n@see ResolverQueryLogConfigAssociationStatus*/",
          "getterMethodName" : "getStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Status",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Status",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Status",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The status of the specified query logging association. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association.</p> </li> </ul>\n@param status The status of the specified query logging association. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association.</p> </li>\n@see ResolverQueryLogConfigAssociationStatus*/",
          "setterMethodName" : "setStatus",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The status of the specified query logging association. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association.</p> </li> </ul>\n@param status The status of the specified query logging association. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association.</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverQueryLogConfigAssociationStatus*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "<p>The status of the specified query logging association. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association.</p> </li> </ul>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResolverQueryLogConfigAssociation",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResolverQueryLogConfigAssociation",
        "variableName" : "resolverQueryLogConfigAssociation",
        "variableType" : "ResolverQueryLogConfigAssociation",
        "documentation" : null,
        "simpleType" : "ResolverQueryLogConfigAssociation",
        "variableSetterType" : "ResolverQueryLogConfigAssociation"
      },
      "wrapper" : false
    },
    "ResolverQueryLogConfigAssociationError" : {
      "c2jName" : "ResolverQueryLogConfigAssociationError",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : [ {
        "name" : "NONE",
        "value" : "NONE"
      }, {
        "name" : "DESTINATION_NOT_FOUND",
        "value" : "DESTINATION_NOT_FOUND"
      }, {
        "name" : "ACCESS_DENIED",
        "value" : "ACCESS_DENIED"
      }, {
        "name" : "INTERNAL_SERVICE_ERROR",
        "value" : "INTERNAL_SERVICE_ERROR"
      } ],
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.enum.ResolverQueryLogConfigAssociationError",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.route53resolver.enum",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResolverQueryLogConfigAssociationError",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResolverQueryLogConfigAssociationError",
        "variableName" : "resolverQueryLogConfigAssociationError",
        "variableType" : "ResolverQueryLogConfigAssociationError",
        "documentation" : null,
        "simpleType" : "ResolverQueryLogConfigAssociationError",
        "variableSetterType" : "ResolverQueryLogConfigAssociationError"
      },
      "wrapper" : false
    },
    "ResolverQueryLogConfigAssociationStatus" : {
      "c2jName" : "ResolverQueryLogConfigAssociationStatus",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : [ {
        "name" : "CREATING",
        "value" : "CREATING"
      }, {
        "name" : "ACTIVE",
        "value" : "ACTIVE"
      }, {
        "name" : "ACTION_NEEDED",
        "value" : "ACTION_NEEDED"
      }, {
        "name" : "DELETING",
        "value" : "DELETING"
      }, {
        "name" : "FAILED",
        "value" : "FAILED"
      } ],
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.enum.ResolverQueryLogConfigAssociationStatus",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.route53resolver.enum",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResolverQueryLogConfigAssociationStatus",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResolverQueryLogConfigAssociationStatus",
        "variableName" : "resolverQueryLogConfigAssociationStatus",
        "variableType" : "ResolverQueryLogConfigAssociationStatus",
        "documentation" : null,
        "simpleType" : "ResolverQueryLogConfigAssociationStatus",
        "variableSetterType" : "ResolverQueryLogConfigAssociationStatus"
      },
      "wrapper" : false
    },
    "ResolverQueryLogConfigStatus" : {
      "c2jName" : "ResolverQueryLogConfigStatus",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : [ {
        "name" : "CREATING",
        "value" : "CREATING"
      }, {
        "name" : "CREATED",
        "value" : "CREATED"
      }, {
        "name" : "DELETING",
        "value" : "DELETING"
      }, {
        "name" : "FAILED",
        "value" : "FAILED"
      } ],
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.enum.ResolverQueryLogConfigStatus",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.route53resolver.enum",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResolverQueryLogConfigStatus",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResolverQueryLogConfigStatus",
        "variableName" : "resolverQueryLogConfigStatus",
        "variableType" : "ResolverQueryLogConfigStatus",
        "documentation" : null,
        "simpleType" : "ResolverQueryLogConfigStatus",
        "variableSetterType" : "ResolverQueryLogConfigStatus"
      },
      "wrapper" : false
    },
    "ResolverRule" : {
      "c2jName" : "ResolverRule",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>For queries that originate in your VPC, detailed information about a Resolver rule, which specifies how to route DNS queries out of the VPC. The <code>ResolverRule</code> parameter appears in the response to a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverRule.html\">CreateResolverRule</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DeleteResolverRule.html\">DeleteResolverRule</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a>, or <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_UpdateResolverRule.html\">UpdateResolverRule</a> request.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.model.ResolverRule",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Id",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID that Resolver assigned to the Resolver rule when you created it.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID that Resolver assigned to the Resolver rule when you created it.</p>\n@param id The ID that Resolver assigned to the Resolver rule when you created it.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withId",
        "getterDocumentation" : "/**<p>The ID that Resolver assigned to the Resolver rule when you created it.</p>\n@return The ID that Resolver assigned to the Resolver rule when you created it.*/",
        "getterMethodName" : "getId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Id",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Id",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Id",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID that Resolver assigned to the Resolver rule when you created it.</p>\n@param id The ID that Resolver assigned to the Resolver rule when you created it.*/",
        "setterMethodName" : "setId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "id",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID that Resolver assigned to the Resolver rule when you created it.</p>\n@param id The ID that Resolver assigned to the Resolver rule when you created it.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "id",
          "variableType" : "String",
          "documentation" : "<p>The ID that Resolver assigned to the Resolver rule when you created it.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "CreatorRequestId",
        "c2jShape" : "CreatorRequestId",
        "deprecated" : false,
        "documentation" : "<p>A unique string that you specified when you created the Resolver rule. <code>CreatorRequestId</code> identifies the request and allows failed requests to be retried without the risk of executing the operation twice. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A unique string that you specified when you created the Resolver rule. <code>CreatorRequestId</code> identifies the request and allows failed requests to be retried without the risk of executing the operation twice. </p>\n@param creatorRequestId A unique string that you specified when you created the Resolver rule. <code>CreatorRequestId</code> identifies the request and allows failed requests to be retried without the risk of executing the operation twice.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCreatorRequestId",
        "getterDocumentation" : "/**<p>A unique string that you specified when you created the Resolver rule. <code>CreatorRequestId</code> identifies the request and allows failed requests to be retried without the risk of executing the operation twice. </p>\n@return A unique string that you specified when you created the Resolver rule. <code>CreatorRequestId</code> identifies the request and allows failed requests to be retried without the risk of executing the operation twice.*/",
        "getterMethodName" : "getCreatorRequestId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "CreatorRequestId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CreatorRequestId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CreatorRequestId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A unique string that you specified when you created the Resolver rule. <code>CreatorRequestId</code> identifies the request and allows failed requests to be retried without the risk of executing the operation twice. </p>\n@param creatorRequestId A unique string that you specified when you created the Resolver rule. <code>CreatorRequestId</code> identifies the request and allows failed requests to be retried without the risk of executing the operation twice.*/",
        "setterMethodName" : "setCreatorRequestId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "creatorRequestId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A unique string that you specified when you created the Resolver rule. <code>CreatorRequestId</code> identifies the request and allows failed requests to be retried without the risk of executing the operation twice. </p>\n@param creatorRequestId A unique string that you specified when you created the Resolver rule. <code>CreatorRequestId</code> identifies the request and allows failed requests to be retried without the risk of executing the operation twice.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "creatorRequestId",
          "variableType" : "String",
          "documentation" : "<p>A unique string that you specified when you created the Resolver rule. <code>CreatorRequestId</code> identifies the request and allows failed requests to be retried without the risk of executing the operation twice. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Arn",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>The ARN (Amazon Resource Name) for the Resolver rule specified by <code>Id</code>.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ARN (Amazon Resource Name) for the Resolver rule specified by <code>Id</code>.</p>\n@param arn The ARN (Amazon Resource Name) for the Resolver rule specified by <code>Id</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withArn",
        "getterDocumentation" : "/**<p>The ARN (Amazon Resource Name) for the Resolver rule specified by <code>Id</code>.</p>\n@return The ARN (Amazon Resource Name) for the Resolver rule specified by <code>Id</code>.*/",
        "getterMethodName" : "getArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Arn",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Arn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Arn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ARN (Amazon Resource Name) for the Resolver rule specified by <code>Id</code>.</p>\n@param arn The ARN (Amazon Resource Name) for the Resolver rule specified by <code>Id</code>.*/",
        "setterMethodName" : "setArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ARN (Amazon Resource Name) for the Resolver rule specified by <code>Id</code>.</p>\n@param arn The ARN (Amazon Resource Name) for the Resolver rule specified by <code>Id</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "<p>The ARN (Amazon Resource Name) for the Resolver rule specified by <code>Id</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "DomainName",
        "c2jShape" : "DomainName",
        "deprecated" : false,
        "documentation" : "<p>DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), the query is routed using the Resolver rule that contains the most specific domain name (www.example.com).</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), the query is routed using the Resolver rule that contains the most specific domain name (www.example.com).</p>\n@param domainName DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), the query is routed using the Resolver rule that contains the most specific domain name (www.example.com).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDomainName",
        "getterDocumentation" : "/**<p>DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), the query is routed using the Resolver rule that contains the most specific domain name (www.example.com).</p>\n@return DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), the query is routed using the Resolver rule that contains the most specific domain name (www.example.com).*/",
        "getterMethodName" : "getDomainName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "DomainName",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "DomainName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "DomainName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), the query is routed using the Resolver rule that contains the most specific domain name (www.example.com).</p>\n@param domainName DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), the query is routed using the Resolver rule that contains the most specific domain name (www.example.com).*/",
        "setterMethodName" : "setDomainName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "domainName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), the query is routed using the Resolver rule that contains the most specific domain name (www.example.com).</p>\n@param domainName DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), the query is routed using the Resolver rule that contains the most specific domain name (www.example.com).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "domainName",
          "variableType" : "String",
          "documentation" : "<p>DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), the query is routed using the Resolver rule that contains the most specific domain name (www.example.com).</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Status",
        "c2jShape" : "ResolverRuleStatus",
        "deprecated" : false,
        "documentation" : "<p>A code that specifies the current status of the Resolver rule.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : "ResolverRuleStatus",
        "fluentSetterDocumentation" : "/**<p>A code that specifies the current status of the Resolver rule.</p>\n@param status A code that specifies the current status of the Resolver rule.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverRuleStatus*/",
        "fluentSetterMethodName" : "withStatus",
        "getterDocumentation" : "/**<p>A code that specifies the current status of the Resolver rule.</p>\n@return A code that specifies the current status of the Resolver rule.\n@see ResolverRuleStatus*/",
        "getterMethodName" : "getStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Status",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Status",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Status",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A code that specifies the current status of the Resolver rule.</p>\n@param status A code that specifies the current status of the Resolver rule.\n@see ResolverRuleStatus*/",
        "setterMethodName" : "setStatus",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A code that specifies the current status of the Resolver rule.</p>\n@param status A code that specifies the current status of the Resolver rule.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverRuleStatus*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "<p>A code that specifies the current status of the Resolver rule.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "StatusMessage",
        "c2jShape" : "StatusMessage",
        "deprecated" : false,
        "documentation" : "<p>A detailed description of the status of a Resolver rule.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A detailed description of the status of a Resolver rule.</p>\n@param statusMessage A detailed description of the status of a Resolver rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withStatusMessage",
        "getterDocumentation" : "/**<p>A detailed description of the status of a Resolver rule.</p>\n@return A detailed description of the status of a Resolver rule.*/",
        "getterMethodName" : "getStatusMessage",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "StatusMessage",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "StatusMessage",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "StatusMessage",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A detailed description of the status of a Resolver rule.</p>\n@param statusMessage A detailed description of the status of a Resolver rule.*/",
        "setterMethodName" : "setStatusMessage",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "statusMessage",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A detailed description of the status of a Resolver rule.</p>\n@param statusMessage A detailed description of the status of a Resolver rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "statusMessage",
          "variableType" : "String",
          "documentation" : "<p>A detailed description of the status of a Resolver rule.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "RuleType",
        "c2jShape" : "RuleTypeOption",
        "deprecated" : false,
        "documentation" : "<p>When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : "RuleTypeOption",
        "fluentSetterDocumentation" : "/**<p>When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.</p>\n@param ruleType When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see RuleTypeOption*/",
        "fluentSetterMethodName" : "withRuleType",
        "getterDocumentation" : "/**<p>When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.</p>\n@return When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.\n@see RuleTypeOption*/",
        "getterMethodName" : "getRuleType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "RuleType",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "RuleType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RuleType",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.</p>\n@param ruleType When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.\n@see RuleTypeOption*/",
        "setterMethodName" : "setRuleType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ruleType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.</p>\n@param ruleType When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see RuleTypeOption*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ruleType",
          "variableType" : "String",
          "documentation" : "<p>When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Name",
        "c2jShape" : "Name",
        "deprecated" : false,
        "documentation" : "<p>The name for the Resolver rule, which you specified when you created the Resolver rule.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name for the Resolver rule, which you specified when you created the Resolver rule.</p>\n@param name The name for the Resolver rule, which you specified when you created the Resolver rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>The name for the Resolver rule, which you specified when you created the Resolver rule.</p>\n@return The name for the Resolver rule, which you specified when you created the Resolver rule.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Name",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name for the Resolver rule, which you specified when you created the Resolver rule.</p>\n@param name The name for the Resolver rule, which you specified when you created the Resolver rule.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name for the Resolver rule, which you specified when you created the Resolver rule.</p>\n@param name The name for the Resolver rule, which you specified when you created the Resolver rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>The name for the Resolver rule, which you specified when you created the Resolver rule.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "TargetIps",
        "c2jShape" : "TargetList",
        "deprecated" : false,
        "documentation" : "<p>An array that contains the IP addresses and ports that an outbound endpoint forwards DNS queries to. Typically, these are the IP addresses of DNS resolvers on your network. Specify IPv4 addresses. IPv6 is not supported.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An array that contains the IP addresses and ports that an outbound endpoint forwards DNS queries to. Typically, these are the IP addresses of DNS resolvers on your network. Specify IPv4 addresses. IPv6 is not supported.</p>\n@param targetIps An array that contains the IP addresses and ports that an outbound endpoint forwards DNS queries to. Typically, these are the IP addresses of DNS resolvers on your network. Specify IPv4 addresses. IPv6 is not supported.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTargetIps",
        "getterDocumentation" : "/**<p>An array that contains the IP addresses and ports that an outbound endpoint forwards DNS queries to. Typically, these are the IP addresses of DNS resolvers on your network. Specify IPv4 addresses. IPv6 is not supported.</p>\n@return An array that contains the IP addresses and ports that an outbound endpoint forwards DNS queries to. Typically, these are the IP addresses of DNS resolvers on your network. Specify IPv4 addresses. IPv6 is not supported.*/",
        "getterMethodName" : "getTargetIps",
        "getterModel" : {
          "returnType" : "java.util.List<TargetAddress>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TargetIps",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TargetIps",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "TargetAddress",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "TargetAddress",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "TargetAddress",
              "variableName" : "member",
              "variableType" : "TargetAddress",
              "documentation" : "",
              "simpleType" : "TargetAddress",
              "variableSetterType" : "TargetAddress"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "TargetAddress",
              "variableName" : "member",
              "variableType" : "TargetAddress",
              "documentation" : "",
              "simpleType" : "TargetAddress",
              "variableSetterType" : "TargetAddress"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "TargetAddress",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "TargetAddress",
          "templateImplType" : "java.util.ArrayList<TargetAddress>",
          "templateType" : "java.util.List<TargetAddress>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "TargetIps",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>An array that contains the IP addresses and ports that an outbound endpoint forwards DNS queries to. Typically, these are the IP addresses of DNS resolvers on your network. Specify IPv4 addresses. IPv6 is not supported.</p>\n@param targetIps An array that contains the IP addresses and ports that an outbound endpoint forwards DNS queries to. Typically, these are the IP addresses of DNS resolvers on your network. Specify IPv4 addresses. IPv6 is not supported.*/",
        "setterMethodName" : "setTargetIps",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<TargetAddress>",
          "variableName" : "targetIps",
          "variableType" : "java.util.List<TargetAddress>",
          "documentation" : "",
          "simpleType" : "List<TargetAddress>",
          "variableSetterType" : "java.util.Collection<TargetAddress>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An array that contains the IP addresses and ports that an outbound endpoint forwards DNS queries to. Typically, these are the IP addresses of DNS resolvers on your network. Specify IPv4 addresses. IPv6 is not supported.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTargetIps(java.util.Collection)} or {@link #withTargetIps(java.util.Collection)} if you want to override the existing values.</p>\n@param targetIps An array that contains the IP addresses and ports that an outbound endpoint forwards DNS queries to. Typically, these are the IP addresses of DNS resolvers on your network. Specify IPv4 addresses. IPv6 is not supported.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<TargetAddress>",
          "variableName" : "targetIps",
          "variableType" : "java.util.List<TargetAddress>",
          "documentation" : "<p>An array that contains the IP addresses and ports that an outbound endpoint forwards DNS queries to. Typically, these are the IP addresses of DNS resolvers on your network. Specify IPv4 addresses. IPv6 is not supported.</p>",
          "simpleType" : "List<TargetAddress>",
          "variableSetterType" : "java.util.Collection<TargetAddress>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ResolverEndpointId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the endpoint that the rule is associated with.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the endpoint that the rule is associated with.</p>\n@param resolverEndpointId The ID of the endpoint that the rule is associated with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverEndpointId",
        "getterDocumentation" : "/**<p>The ID of the endpoint that the rule is associated with.</p>\n@return The ID of the endpoint that the rule is associated with.*/",
        "getterMethodName" : "getResolverEndpointId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverEndpointId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverEndpointId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverEndpointId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the endpoint that the rule is associated with.</p>\n@param resolverEndpointId The ID of the endpoint that the rule is associated with.*/",
        "setterMethodName" : "setResolverEndpointId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverEndpointId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the endpoint that the rule is associated with.</p>\n@param resolverEndpointId The ID of the endpoint that the rule is associated with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverEndpointId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the endpoint that the rule is associated with.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "OwnerId",
        "c2jShape" : "AccountId",
        "deprecated" : false,
        "documentation" : "<p>When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.</p>\n@param ownerId When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withOwnerId",
        "getterDocumentation" : "/**<p>When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.</p>\n@return When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.*/",
        "getterMethodName" : "getOwnerId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "OwnerId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "OwnerId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "OwnerId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.</p>\n@param ownerId When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.*/",
        "setterMethodName" : "setOwnerId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ownerId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.</p>\n@param ownerId When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ownerId",
          "variableType" : "String",
          "documentation" : "<p>When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ShareStatus",
        "c2jShape" : "ShareStatus",
        "deprecated" : false,
        "documentation" : "<p>Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : "ShareStatus",
        "fluentSetterDocumentation" : "/**<p>Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.</p>\n@param shareStatus Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ShareStatus*/",
        "fluentSetterMethodName" : "withShareStatus",
        "getterDocumentation" : "/**<p>Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.</p>\n@return Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.\n@see ShareStatus*/",
        "getterMethodName" : "getShareStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ShareStatus",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ShareStatus",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ShareStatus",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.</p>\n@param shareStatus Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.\n@see ShareStatus*/",
        "setterMethodName" : "setShareStatus",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "shareStatus",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.</p>\n@param shareStatus Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ShareStatus*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "shareStatus",
          "variableType" : "String",
          "documentation" : "<p>Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "CreationTime",
        "c2jShape" : "Rfc3339TimeString",
        "deprecated" : false,
        "documentation" : "<p>The date and time that the Resolver rule was created, in Unix time format and Coordinated Universal Time (UTC).</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date and time that the Resolver rule was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the Resolver rule was created, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCreationTime",
        "getterDocumentation" : "/**<p>The date and time that the Resolver rule was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@return The date and time that the Resolver rule was created, in Unix time format and Coordinated Universal Time (UTC).*/",
        "getterMethodName" : "getCreationTime",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "CreationTime",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CreationTime",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CreationTime",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The date and time that the Resolver rule was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the Resolver rule was created, in Unix time format and Coordinated Universal Time (UTC).*/",
        "setterMethodName" : "setCreationTime",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "creationTime",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date and time that the Resolver rule was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the Resolver rule was created, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "creationTime",
          "variableType" : "String",
          "documentation" : "<p>The date and time that the Resolver rule was created, in Unix time format and Coordinated Universal Time (UTC).</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ModificationTime",
        "c2jShape" : "Rfc3339TimeString",
        "deprecated" : false,
        "documentation" : "<p>The date and time that the Resolver rule was last updated, in Unix time format and Coordinated Universal Time (UTC).</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date and time that the Resolver rule was last updated, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param modificationTime The date and time that the Resolver rule was last updated, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withModificationTime",
        "getterDocumentation" : "/**<p>The date and time that the Resolver rule was last updated, in Unix time format and Coordinated Universal Time (UTC).</p>\n@return The date and time that the Resolver rule was last updated, in Unix time format and Coordinated Universal Time (UTC).*/",
        "getterMethodName" : "getModificationTime",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ModificationTime",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ModificationTime",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ModificationTime",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The date and time that the Resolver rule was last updated, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param modificationTime The date and time that the Resolver rule was last updated, in Unix time format and Coordinated Universal Time (UTC).*/",
        "setterMethodName" : "setModificationTime",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "modificationTime",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date and time that the Resolver rule was last updated, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param modificationTime The date and time that the Resolver rule was last updated, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "modificationTime",
          "variableType" : "String",
          "documentation" : "<p>The date and time that the Resolver rule was last updated, in Unix time format and Coordinated Universal Time (UTC).</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Arn" : {
          "c2jName" : "Arn",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>The ARN (Amazon Resource Name) for the Resolver rule specified by <code>Id</code>.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ARN (Amazon Resource Name) for the Resolver rule specified by <code>Id</code>.</p>\n@param arn The ARN (Amazon Resource Name) for the Resolver rule specified by <code>Id</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withArn",
          "getterDocumentation" : "/**<p>The ARN (Amazon Resource Name) for the Resolver rule specified by <code>Id</code>.</p>\n@return The ARN (Amazon Resource Name) for the Resolver rule specified by <code>Id</code>.*/",
          "getterMethodName" : "getArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Arn",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Arn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Arn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ARN (Amazon Resource Name) for the Resolver rule specified by <code>Id</code>.</p>\n@param arn The ARN (Amazon Resource Name) for the Resolver rule specified by <code>Id</code>.*/",
          "setterMethodName" : "setArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ARN (Amazon Resource Name) for the Resolver rule specified by <code>Id</code>.</p>\n@param arn The ARN (Amazon Resource Name) for the Resolver rule specified by <code>Id</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "<p>The ARN (Amazon Resource Name) for the Resolver rule specified by <code>Id</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CreationTime" : {
          "c2jName" : "CreationTime",
          "c2jShape" : "Rfc3339TimeString",
          "deprecated" : false,
          "documentation" : "<p>The date and time that the Resolver rule was created, in Unix time format and Coordinated Universal Time (UTC).</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date and time that the Resolver rule was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the Resolver rule was created, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCreationTime",
          "getterDocumentation" : "/**<p>The date and time that the Resolver rule was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@return The date and time that the Resolver rule was created, in Unix time format and Coordinated Universal Time (UTC).*/",
          "getterMethodName" : "getCreationTime",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "CreationTime",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CreationTime",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CreationTime",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The date and time that the Resolver rule was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the Resolver rule was created, in Unix time format and Coordinated Universal Time (UTC).*/",
          "setterMethodName" : "setCreationTime",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "creationTime",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date and time that the Resolver rule was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the Resolver rule was created, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "creationTime",
            "variableType" : "String",
            "documentation" : "<p>The date and time that the Resolver rule was created, in Unix time format and Coordinated Universal Time (UTC).</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CreatorRequestId" : {
          "c2jName" : "CreatorRequestId",
          "c2jShape" : "CreatorRequestId",
          "deprecated" : false,
          "documentation" : "<p>A unique string that you specified when you created the Resolver rule. <code>CreatorRequestId</code> identifies the request and allows failed requests to be retried without the risk of executing the operation twice. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A unique string that you specified when you created the Resolver rule. <code>CreatorRequestId</code> identifies the request and allows failed requests to be retried without the risk of executing the operation twice. </p>\n@param creatorRequestId A unique string that you specified when you created the Resolver rule. <code>CreatorRequestId</code> identifies the request and allows failed requests to be retried without the risk of executing the operation twice.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCreatorRequestId",
          "getterDocumentation" : "/**<p>A unique string that you specified when you created the Resolver rule. <code>CreatorRequestId</code> identifies the request and allows failed requests to be retried without the risk of executing the operation twice. </p>\n@return A unique string that you specified when you created the Resolver rule. <code>CreatorRequestId</code> identifies the request and allows failed requests to be retried without the risk of executing the operation twice.*/",
          "getterMethodName" : "getCreatorRequestId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "CreatorRequestId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CreatorRequestId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CreatorRequestId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A unique string that you specified when you created the Resolver rule. <code>CreatorRequestId</code> identifies the request and allows failed requests to be retried without the risk of executing the operation twice. </p>\n@param creatorRequestId A unique string that you specified when you created the Resolver rule. <code>CreatorRequestId</code> identifies the request and allows failed requests to be retried without the risk of executing the operation twice.*/",
          "setterMethodName" : "setCreatorRequestId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "creatorRequestId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A unique string that you specified when you created the Resolver rule. <code>CreatorRequestId</code> identifies the request and allows failed requests to be retried without the risk of executing the operation twice. </p>\n@param creatorRequestId A unique string that you specified when you created the Resolver rule. <code>CreatorRequestId</code> identifies the request and allows failed requests to be retried without the risk of executing the operation twice.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "creatorRequestId",
            "variableType" : "String",
            "documentation" : "<p>A unique string that you specified when you created the Resolver rule. <code>CreatorRequestId</code> identifies the request and allows failed requests to be retried without the risk of executing the operation twice. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "DomainName" : {
          "c2jName" : "DomainName",
          "c2jShape" : "DomainName",
          "deprecated" : false,
          "documentation" : "<p>DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), the query is routed using the Resolver rule that contains the most specific domain name (www.example.com).</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), the query is routed using the Resolver rule that contains the most specific domain name (www.example.com).</p>\n@param domainName DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), the query is routed using the Resolver rule that contains the most specific domain name (www.example.com).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDomainName",
          "getterDocumentation" : "/**<p>DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), the query is routed using the Resolver rule that contains the most specific domain name (www.example.com).</p>\n@return DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), the query is routed using the Resolver rule that contains the most specific domain name (www.example.com).*/",
          "getterMethodName" : "getDomainName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "DomainName",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "DomainName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "DomainName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), the query is routed using the Resolver rule that contains the most specific domain name (www.example.com).</p>\n@param domainName DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), the query is routed using the Resolver rule that contains the most specific domain name (www.example.com).*/",
          "setterMethodName" : "setDomainName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "domainName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), the query is routed using the Resolver rule that contains the most specific domain name (www.example.com).</p>\n@param domainName DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), the query is routed using the Resolver rule that contains the most specific domain name (www.example.com).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "domainName",
            "variableType" : "String",
            "documentation" : "<p>DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com and www.example.com), the query is routed using the Resolver rule that contains the most specific domain name (www.example.com).</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Id" : {
          "c2jName" : "Id",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID that Resolver assigned to the Resolver rule when you created it.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID that Resolver assigned to the Resolver rule when you created it.</p>\n@param id The ID that Resolver assigned to the Resolver rule when you created it.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withId",
          "getterDocumentation" : "/**<p>The ID that Resolver assigned to the Resolver rule when you created it.</p>\n@return The ID that Resolver assigned to the Resolver rule when you created it.*/",
          "getterMethodName" : "getId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Id",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Id",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Id",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID that Resolver assigned to the Resolver rule when you created it.</p>\n@param id The ID that Resolver assigned to the Resolver rule when you created it.*/",
          "setterMethodName" : "setId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "id",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID that Resolver assigned to the Resolver rule when you created it.</p>\n@param id The ID that Resolver assigned to the Resolver rule when you created it.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "id",
            "variableType" : "String",
            "documentation" : "<p>The ID that Resolver assigned to the Resolver rule when you created it.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ModificationTime" : {
          "c2jName" : "ModificationTime",
          "c2jShape" : "Rfc3339TimeString",
          "deprecated" : false,
          "documentation" : "<p>The date and time that the Resolver rule was last updated, in Unix time format and Coordinated Universal Time (UTC).</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date and time that the Resolver rule was last updated, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param modificationTime The date and time that the Resolver rule was last updated, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withModificationTime",
          "getterDocumentation" : "/**<p>The date and time that the Resolver rule was last updated, in Unix time format and Coordinated Universal Time (UTC).</p>\n@return The date and time that the Resolver rule was last updated, in Unix time format and Coordinated Universal Time (UTC).*/",
          "getterMethodName" : "getModificationTime",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ModificationTime",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ModificationTime",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ModificationTime",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The date and time that the Resolver rule was last updated, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param modificationTime The date and time that the Resolver rule was last updated, in Unix time format and Coordinated Universal Time (UTC).*/",
          "setterMethodName" : "setModificationTime",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "modificationTime",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date and time that the Resolver rule was last updated, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param modificationTime The date and time that the Resolver rule was last updated, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "modificationTime",
            "variableType" : "String",
            "documentation" : "<p>The date and time that the Resolver rule was last updated, in Unix time format and Coordinated Universal Time (UTC).</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "Name",
          "deprecated" : false,
          "documentation" : "<p>The name for the Resolver rule, which you specified when you created the Resolver rule.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name for the Resolver rule, which you specified when you created the Resolver rule.</p>\n@param name The name for the Resolver rule, which you specified when you created the Resolver rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>The name for the Resolver rule, which you specified when you created the Resolver rule.</p>\n@return The name for the Resolver rule, which you specified when you created the Resolver rule.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Name",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name for the Resolver rule, which you specified when you created the Resolver rule.</p>\n@param name The name for the Resolver rule, which you specified when you created the Resolver rule.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name for the Resolver rule, which you specified when you created the Resolver rule.</p>\n@param name The name for the Resolver rule, which you specified when you created the Resolver rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>The name for the Resolver rule, which you specified when you created the Resolver rule.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "OwnerId" : {
          "c2jName" : "OwnerId",
          "c2jShape" : "AccountId",
          "deprecated" : false,
          "documentation" : "<p>When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.</p>\n@param ownerId When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withOwnerId",
          "getterDocumentation" : "/**<p>When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.</p>\n@return When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.*/",
          "getterMethodName" : "getOwnerId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "OwnerId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "OwnerId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "OwnerId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.</p>\n@param ownerId When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.*/",
          "setterMethodName" : "setOwnerId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ownerId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.</p>\n@param ownerId When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ownerId",
            "variableType" : "String",
            "documentation" : "<p>When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResolverEndpointId" : {
          "c2jName" : "ResolverEndpointId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the endpoint that the rule is associated with.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the endpoint that the rule is associated with.</p>\n@param resolverEndpointId The ID of the endpoint that the rule is associated with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverEndpointId",
          "getterDocumentation" : "/**<p>The ID of the endpoint that the rule is associated with.</p>\n@return The ID of the endpoint that the rule is associated with.*/",
          "getterMethodName" : "getResolverEndpointId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverEndpointId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverEndpointId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverEndpointId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the endpoint that the rule is associated with.</p>\n@param resolverEndpointId The ID of the endpoint that the rule is associated with.*/",
          "setterMethodName" : "setResolverEndpointId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverEndpointId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the endpoint that the rule is associated with.</p>\n@param resolverEndpointId The ID of the endpoint that the rule is associated with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverEndpointId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the endpoint that the rule is associated with.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RuleType" : {
          "c2jName" : "RuleType",
          "c2jShape" : "RuleTypeOption",
          "deprecated" : false,
          "documentation" : "<p>When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : "RuleTypeOption",
          "fluentSetterDocumentation" : "/**<p>When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.</p>\n@param ruleType When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see RuleTypeOption*/",
          "fluentSetterMethodName" : "withRuleType",
          "getterDocumentation" : "/**<p>When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.</p>\n@return When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.\n@see RuleTypeOption*/",
          "getterMethodName" : "getRuleType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "RuleType",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "RuleType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RuleType",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.</p>\n@param ruleType When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.\n@see RuleTypeOption*/",
          "setterMethodName" : "setRuleType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ruleType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.</p>\n@param ruleType When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see RuleTypeOption*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ruleType",
            "variableType" : "String",
            "documentation" : "<p>When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p> <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p> <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ShareStatus" : {
          "c2jName" : "ShareStatus",
          "c2jShape" : "ShareStatus",
          "deprecated" : false,
          "documentation" : "<p>Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : "ShareStatus",
          "fluentSetterDocumentation" : "/**<p>Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.</p>\n@param shareStatus Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ShareStatus*/",
          "fluentSetterMethodName" : "withShareStatus",
          "getterDocumentation" : "/**<p>Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.</p>\n@return Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.\n@see ShareStatus*/",
          "getterMethodName" : "getShareStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ShareStatus",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ShareStatus",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ShareStatus",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.</p>\n@param shareStatus Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.\n@see ShareStatus*/",
          "setterMethodName" : "setShareStatus",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "shareStatus",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.</p>\n@param shareStatus Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ShareStatus*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "shareStatus",
            "variableType" : "String",
            "documentation" : "<p>Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Status" : {
          "c2jName" : "Status",
          "c2jShape" : "ResolverRuleStatus",
          "deprecated" : false,
          "documentation" : "<p>A code that specifies the current status of the Resolver rule.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : "ResolverRuleStatus",
          "fluentSetterDocumentation" : "/**<p>A code that specifies the current status of the Resolver rule.</p>\n@param status A code that specifies the current status of the Resolver rule.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverRuleStatus*/",
          "fluentSetterMethodName" : "withStatus",
          "getterDocumentation" : "/**<p>A code that specifies the current status of the Resolver rule.</p>\n@return A code that specifies the current status of the Resolver rule.\n@see ResolverRuleStatus*/",
          "getterMethodName" : "getStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Status",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Status",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Status",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A code that specifies the current status of the Resolver rule.</p>\n@param status A code that specifies the current status of the Resolver rule.\n@see ResolverRuleStatus*/",
          "setterMethodName" : "setStatus",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A code that specifies the current status of the Resolver rule.</p>\n@param status A code that specifies the current status of the Resolver rule.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverRuleStatus*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "<p>A code that specifies the current status of the Resolver rule.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "StatusMessage" : {
          "c2jName" : "StatusMessage",
          "c2jShape" : "StatusMessage",
          "deprecated" : false,
          "documentation" : "<p>A detailed description of the status of a Resolver rule.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A detailed description of the status of a Resolver rule.</p>\n@param statusMessage A detailed description of the status of a Resolver rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withStatusMessage",
          "getterDocumentation" : "/**<p>A detailed description of the status of a Resolver rule.</p>\n@return A detailed description of the status of a Resolver rule.*/",
          "getterMethodName" : "getStatusMessage",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "StatusMessage",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "StatusMessage",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "StatusMessage",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A detailed description of the status of a Resolver rule.</p>\n@param statusMessage A detailed description of the status of a Resolver rule.*/",
          "setterMethodName" : "setStatusMessage",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "statusMessage",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A detailed description of the status of a Resolver rule.</p>\n@param statusMessage A detailed description of the status of a Resolver rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "statusMessage",
            "variableType" : "String",
            "documentation" : "<p>A detailed description of the status of a Resolver rule.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TargetIps" : {
          "c2jName" : "TargetIps",
          "c2jShape" : "TargetList",
          "deprecated" : false,
          "documentation" : "<p>An array that contains the IP addresses and ports that an outbound endpoint forwards DNS queries to. Typically, these are the IP addresses of DNS resolvers on your network. Specify IPv4 addresses. IPv6 is not supported.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An array that contains the IP addresses and ports that an outbound endpoint forwards DNS queries to. Typically, these are the IP addresses of DNS resolvers on your network. Specify IPv4 addresses. IPv6 is not supported.</p>\n@param targetIps An array that contains the IP addresses and ports that an outbound endpoint forwards DNS queries to. Typically, these are the IP addresses of DNS resolvers on your network. Specify IPv4 addresses. IPv6 is not supported.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTargetIps",
          "getterDocumentation" : "/**<p>An array that contains the IP addresses and ports that an outbound endpoint forwards DNS queries to. Typically, these are the IP addresses of DNS resolvers on your network. Specify IPv4 addresses. IPv6 is not supported.</p>\n@return An array that contains the IP addresses and ports that an outbound endpoint forwards DNS queries to. Typically, these are the IP addresses of DNS resolvers on your network. Specify IPv4 addresses. IPv6 is not supported.*/",
          "getterMethodName" : "getTargetIps",
          "getterModel" : {
            "returnType" : "java.util.List<TargetAddress>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TargetIps",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TargetIps",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "TargetAddress",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "TargetAddress",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "TargetAddress",
                "variableName" : "member",
                "variableType" : "TargetAddress",
                "documentation" : "",
                "simpleType" : "TargetAddress",
                "variableSetterType" : "TargetAddress"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "TargetAddress",
                "variableName" : "member",
                "variableType" : "TargetAddress",
                "documentation" : "",
                "simpleType" : "TargetAddress",
                "variableSetterType" : "TargetAddress"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "TargetAddress",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "TargetAddress",
            "templateImplType" : "java.util.ArrayList<TargetAddress>",
            "templateType" : "java.util.List<TargetAddress>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "TargetIps",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>An array that contains the IP addresses and ports that an outbound endpoint forwards DNS queries to. Typically, these are the IP addresses of DNS resolvers on your network. Specify IPv4 addresses. IPv6 is not supported.</p>\n@param targetIps An array that contains the IP addresses and ports that an outbound endpoint forwards DNS queries to. Typically, these are the IP addresses of DNS resolvers on your network. Specify IPv4 addresses. IPv6 is not supported.*/",
          "setterMethodName" : "setTargetIps",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<TargetAddress>",
            "variableName" : "targetIps",
            "variableType" : "java.util.List<TargetAddress>",
            "documentation" : "",
            "simpleType" : "List<TargetAddress>",
            "variableSetterType" : "java.util.Collection<TargetAddress>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An array that contains the IP addresses and ports that an outbound endpoint forwards DNS queries to. Typically, these are the IP addresses of DNS resolvers on your network. Specify IPv4 addresses. IPv6 is not supported.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTargetIps(java.util.Collection)} or {@link #withTargetIps(java.util.Collection)} if you want to override the existing values.</p>\n@param targetIps An array that contains the IP addresses and ports that an outbound endpoint forwards DNS queries to. Typically, these are the IP addresses of DNS resolvers on your network. Specify IPv4 addresses. IPv6 is not supported.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<TargetAddress>",
            "variableName" : "targetIps",
            "variableType" : "java.util.List<TargetAddress>",
            "documentation" : "<p>An array that contains the IP addresses and ports that an outbound endpoint forwards DNS queries to. Typically, these are the IP addresses of DNS resolvers on your network. Specify IPv4 addresses. IPv6 is not supported.</p>",
            "simpleType" : "List<TargetAddress>",
            "variableSetterType" : "java.util.Collection<TargetAddress>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResolverRule",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResolverRule",
        "variableName" : "resolverRule",
        "variableType" : "ResolverRule",
        "documentation" : null,
        "simpleType" : "ResolverRule",
        "variableSetterType" : "ResolverRule"
      },
      "wrapper" : false
    },
    "ResolverRuleAssociation" : {
      "c2jName" : "ResolverRuleAssociation",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>In the response to an <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverRule.html\">AssociateResolverRule</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DisassociateResolverRule.html\">DisassociateResolverRule</a>, or <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> request, provides information about an association between a Resolver rule and a VPC. The association determines which DNS queries that originate in the VPC are forwarded to your network. </p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.model.ResolverRuleAssociation",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Id",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the association between a Resolver rule and a VPC. Resolver assigns this value when you submit an <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverRule.html\">AssociateResolverRule</a> request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the association between a Resolver rule and a VPC. Resolver assigns this value when you submit an <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverRule.html\">AssociateResolverRule</a> request.</p>\n@param id The ID of the association between a Resolver rule and a VPC. Resolver assigns this value when you submit an <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverRule.html\">AssociateResolverRule</a> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withId",
        "getterDocumentation" : "/**<p>The ID of the association between a Resolver rule and a VPC. Resolver assigns this value when you submit an <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverRule.html\">AssociateResolverRule</a> request.</p>\n@return The ID of the association between a Resolver rule and a VPC. Resolver assigns this value when you submit an <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverRule.html\">AssociateResolverRule</a> request.*/",
        "getterMethodName" : "getId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Id",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Id",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Id",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the association between a Resolver rule and a VPC. Resolver assigns this value when you submit an <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverRule.html\">AssociateResolverRule</a> request.</p>\n@param id The ID of the association between a Resolver rule and a VPC. Resolver assigns this value when you submit an <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverRule.html\">AssociateResolverRule</a> request.*/",
        "setterMethodName" : "setId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "id",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the association between a Resolver rule and a VPC. Resolver assigns this value when you submit an <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverRule.html\">AssociateResolverRule</a> request.</p>\n@param id The ID of the association between a Resolver rule and a VPC. Resolver assigns this value when you submit an <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverRule.html\">AssociateResolverRule</a> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "id",
          "variableType" : "String",
          "documentation" : "<p>The ID of the association between a Resolver rule and a VPC. Resolver assigns this value when you submit an <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverRule.html\">AssociateResolverRule</a> request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ResolverRuleId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the Resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the Resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.</p>\n@param resolverRuleId The ID of the Resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverRuleId",
        "getterDocumentation" : "/**<p>The ID of the Resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.</p>\n@return The ID of the Resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.*/",
        "getterMethodName" : "getResolverRuleId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverRuleId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverRuleId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverRuleId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the Resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.</p>\n@param resolverRuleId The ID of the Resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.*/",
        "setterMethodName" : "setResolverRuleId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverRuleId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the Resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.</p>\n@param resolverRuleId The ID of the Resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverRuleId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the Resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Name",
        "c2jShape" : "Name",
        "deprecated" : false,
        "documentation" : "<p>The name of an association between a Resolver rule and a VPC.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of an association between a Resolver rule and a VPC.</p>\n@param name The name of an association between a Resolver rule and a VPC.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>The name of an association between a Resolver rule and a VPC.</p>\n@return The name of an association between a Resolver rule and a VPC.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Name",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of an association between a Resolver rule and a VPC.</p>\n@param name The name of an association between a Resolver rule and a VPC.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of an association between a Resolver rule and a VPC.</p>\n@param name The name of an association between a Resolver rule and a VPC.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>The name of an association between a Resolver rule and a VPC.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "VPCId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the VPC that you associated the Resolver rule with.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the VPC that you associated the Resolver rule with.</p>\n@param vPCId The ID of the VPC that you associated the Resolver rule with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withVPCId",
        "getterDocumentation" : "/**<p>The ID of the VPC that you associated the Resolver rule with.</p>\n@return The ID of the VPC that you associated the Resolver rule with.*/",
        "getterMethodName" : "getVPCId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "VPCId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "VPCId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "VPCId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the VPC that you associated the Resolver rule with.</p>\n@param vPCId The ID of the VPC that you associated the Resolver rule with.*/",
        "setterMethodName" : "setVPCId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "vPCId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the VPC that you associated the Resolver rule with.</p>\n@param vPCId The ID of the VPC that you associated the Resolver rule with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "vPCId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the VPC that you associated the Resolver rule with.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Status",
        "c2jShape" : "ResolverRuleAssociationStatus",
        "deprecated" : false,
        "documentation" : "<p>A code that specifies the current status of the association between a Resolver rule and a VPC.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : "ResolverRuleAssociationStatus",
        "fluentSetterDocumentation" : "/**<p>A code that specifies the current status of the association between a Resolver rule and a VPC.</p>\n@param status A code that specifies the current status of the association between a Resolver rule and a VPC.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverRuleAssociationStatus*/",
        "fluentSetterMethodName" : "withStatus",
        "getterDocumentation" : "/**<p>A code that specifies the current status of the association between a Resolver rule and a VPC.</p>\n@return A code that specifies the current status of the association between a Resolver rule and a VPC.\n@see ResolverRuleAssociationStatus*/",
        "getterMethodName" : "getStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Status",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Status",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Status",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A code that specifies the current status of the association between a Resolver rule and a VPC.</p>\n@param status A code that specifies the current status of the association between a Resolver rule and a VPC.\n@see ResolverRuleAssociationStatus*/",
        "setterMethodName" : "setStatus",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A code that specifies the current status of the association between a Resolver rule and a VPC.</p>\n@param status A code that specifies the current status of the association between a Resolver rule and a VPC.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverRuleAssociationStatus*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "<p>A code that specifies the current status of the association between a Resolver rule and a VPC.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "StatusMessage",
        "c2jShape" : "StatusMessage",
        "deprecated" : false,
        "documentation" : "<p>A detailed description of the status of the association between a Resolver rule and a VPC.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A detailed description of the status of the association between a Resolver rule and a VPC.</p>\n@param statusMessage A detailed description of the status of the association between a Resolver rule and a VPC.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withStatusMessage",
        "getterDocumentation" : "/**<p>A detailed description of the status of the association between a Resolver rule and a VPC.</p>\n@return A detailed description of the status of the association between a Resolver rule and a VPC.*/",
        "getterMethodName" : "getStatusMessage",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "StatusMessage",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "StatusMessage",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "StatusMessage",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A detailed description of the status of the association between a Resolver rule and a VPC.</p>\n@param statusMessage A detailed description of the status of the association between a Resolver rule and a VPC.*/",
        "setterMethodName" : "setStatusMessage",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "statusMessage",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A detailed description of the status of the association between a Resolver rule and a VPC.</p>\n@param statusMessage A detailed description of the status of the association between a Resolver rule and a VPC.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "statusMessage",
          "variableType" : "String",
          "documentation" : "<p>A detailed description of the status of the association between a Resolver rule and a VPC.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Id" : {
          "c2jName" : "Id",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the association between a Resolver rule and a VPC. Resolver assigns this value when you submit an <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverRule.html\">AssociateResolverRule</a> request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the association between a Resolver rule and a VPC. Resolver assigns this value when you submit an <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverRule.html\">AssociateResolverRule</a> request.</p>\n@param id The ID of the association between a Resolver rule and a VPC. Resolver assigns this value when you submit an <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverRule.html\">AssociateResolverRule</a> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withId",
          "getterDocumentation" : "/**<p>The ID of the association between a Resolver rule and a VPC. Resolver assigns this value when you submit an <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverRule.html\">AssociateResolverRule</a> request.</p>\n@return The ID of the association between a Resolver rule and a VPC. Resolver assigns this value when you submit an <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverRule.html\">AssociateResolverRule</a> request.*/",
          "getterMethodName" : "getId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Id",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Id",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Id",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the association between a Resolver rule and a VPC. Resolver assigns this value when you submit an <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverRule.html\">AssociateResolverRule</a> request.</p>\n@param id The ID of the association between a Resolver rule and a VPC. Resolver assigns this value when you submit an <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverRule.html\">AssociateResolverRule</a> request.*/",
          "setterMethodName" : "setId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "id",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the association between a Resolver rule and a VPC. Resolver assigns this value when you submit an <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverRule.html\">AssociateResolverRule</a> request.</p>\n@param id The ID of the association between a Resolver rule and a VPC. Resolver assigns this value when you submit an <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverRule.html\">AssociateResolverRule</a> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "id",
            "variableType" : "String",
            "documentation" : "<p>The ID of the association between a Resolver rule and a VPC. Resolver assigns this value when you submit an <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverRule.html\">AssociateResolverRule</a> request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "Name",
          "deprecated" : false,
          "documentation" : "<p>The name of an association between a Resolver rule and a VPC.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of an association between a Resolver rule and a VPC.</p>\n@param name The name of an association between a Resolver rule and a VPC.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>The name of an association between a Resolver rule and a VPC.</p>\n@return The name of an association between a Resolver rule and a VPC.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Name",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of an association between a Resolver rule and a VPC.</p>\n@param name The name of an association between a Resolver rule and a VPC.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of an association between a Resolver rule and a VPC.</p>\n@param name The name of an association between a Resolver rule and a VPC.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>The name of an association between a Resolver rule and a VPC.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResolverRuleId" : {
          "c2jName" : "ResolverRuleId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the Resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the Resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.</p>\n@param resolverRuleId The ID of the Resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverRuleId",
          "getterDocumentation" : "/**<p>The ID of the Resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.</p>\n@return The ID of the Resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.*/",
          "getterMethodName" : "getResolverRuleId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverRuleId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverRuleId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverRuleId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the Resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.</p>\n@param resolverRuleId The ID of the Resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.*/",
          "setterMethodName" : "setResolverRuleId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverRuleId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the Resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.</p>\n@param resolverRuleId The ID of the Resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverRuleId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the Resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Status" : {
          "c2jName" : "Status",
          "c2jShape" : "ResolverRuleAssociationStatus",
          "deprecated" : false,
          "documentation" : "<p>A code that specifies the current status of the association between a Resolver rule and a VPC.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : "ResolverRuleAssociationStatus",
          "fluentSetterDocumentation" : "/**<p>A code that specifies the current status of the association between a Resolver rule and a VPC.</p>\n@param status A code that specifies the current status of the association between a Resolver rule and a VPC.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverRuleAssociationStatus*/",
          "fluentSetterMethodName" : "withStatus",
          "getterDocumentation" : "/**<p>A code that specifies the current status of the association between a Resolver rule and a VPC.</p>\n@return A code that specifies the current status of the association between a Resolver rule and a VPC.\n@see ResolverRuleAssociationStatus*/",
          "getterMethodName" : "getStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Status",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Status",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Status",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A code that specifies the current status of the association between a Resolver rule and a VPC.</p>\n@param status A code that specifies the current status of the association between a Resolver rule and a VPC.\n@see ResolverRuleAssociationStatus*/",
          "setterMethodName" : "setStatus",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A code that specifies the current status of the association between a Resolver rule and a VPC.</p>\n@param status A code that specifies the current status of the association between a Resolver rule and a VPC.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverRuleAssociationStatus*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "<p>A code that specifies the current status of the association between a Resolver rule and a VPC.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "StatusMessage" : {
          "c2jName" : "StatusMessage",
          "c2jShape" : "StatusMessage",
          "deprecated" : false,
          "documentation" : "<p>A detailed description of the status of the association between a Resolver rule and a VPC.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A detailed description of the status of the association between a Resolver rule and a VPC.</p>\n@param statusMessage A detailed description of the status of the association between a Resolver rule and a VPC.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withStatusMessage",
          "getterDocumentation" : "/**<p>A detailed description of the status of the association between a Resolver rule and a VPC.</p>\n@return A detailed description of the status of the association between a Resolver rule and a VPC.*/",
          "getterMethodName" : "getStatusMessage",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "StatusMessage",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "StatusMessage",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "StatusMessage",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A detailed description of the status of the association between a Resolver rule and a VPC.</p>\n@param statusMessage A detailed description of the status of the association between a Resolver rule and a VPC.*/",
          "setterMethodName" : "setStatusMessage",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "statusMessage",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A detailed description of the status of the association between a Resolver rule and a VPC.</p>\n@param statusMessage A detailed description of the status of the association between a Resolver rule and a VPC.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "statusMessage",
            "variableType" : "String",
            "documentation" : "<p>A detailed description of the status of the association between a Resolver rule and a VPC.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "VPCId" : {
          "c2jName" : "VPCId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the VPC that you associated the Resolver rule with.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the VPC that you associated the Resolver rule with.</p>\n@param vPCId The ID of the VPC that you associated the Resolver rule with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withVPCId",
          "getterDocumentation" : "/**<p>The ID of the VPC that you associated the Resolver rule with.</p>\n@return The ID of the VPC that you associated the Resolver rule with.*/",
          "getterMethodName" : "getVPCId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "VPCId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "VPCId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "VPCId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the VPC that you associated the Resolver rule with.</p>\n@param vPCId The ID of the VPC that you associated the Resolver rule with.*/",
          "setterMethodName" : "setVPCId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "vPCId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the VPC that you associated the Resolver rule with.</p>\n@param vPCId The ID of the VPC that you associated the Resolver rule with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "vPCId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the VPC that you associated the Resolver rule with.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResolverRuleAssociation",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResolverRuleAssociation",
        "variableName" : "resolverRuleAssociation",
        "variableType" : "ResolverRuleAssociation",
        "documentation" : null,
        "simpleType" : "ResolverRuleAssociation",
        "variableSetterType" : "ResolverRuleAssociation"
      },
      "wrapper" : false
    },
    "ResolverRuleAssociationStatus" : {
      "c2jName" : "ResolverRuleAssociationStatus",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : [ {
        "name" : "CREATING",
        "value" : "CREATING"
      }, {
        "name" : "COMPLETE",
        "value" : "COMPLETE"
      }, {
        "name" : "DELETING",
        "value" : "DELETING"
      }, {
        "name" : "FAILED",
        "value" : "FAILED"
      }, {
        "name" : "OVERRIDDEN",
        "value" : "OVERRIDDEN"
      } ],
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.enum.ResolverRuleAssociationStatus",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.route53resolver.enum",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResolverRuleAssociationStatus",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResolverRuleAssociationStatus",
        "variableName" : "resolverRuleAssociationStatus",
        "variableType" : "ResolverRuleAssociationStatus",
        "documentation" : null,
        "simpleType" : "ResolverRuleAssociationStatus",
        "variableSetterType" : "ResolverRuleAssociationStatus"
      },
      "wrapper" : false
    },
    "ResolverRuleConfig" : {
      "c2jName" : "ResolverRuleConfig",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>In an <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_UpdateResolverRule.html\">UpdateResolverRule</a> request, information about the changes that you want to make.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.model.ResolverRuleConfig",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Name",
        "c2jShape" : "Name",
        "deprecated" : false,
        "documentation" : "<p>The new name for the Resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The new name for the Resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console. </p>\n@param name The new name for the Resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>The new name for the Resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console. </p>\n@return The new name for the Resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Name",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The new name for the Resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console. </p>\n@param name The new name for the Resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The new name for the Resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console. </p>\n@param name The new name for the Resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>The new name for the Resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "TargetIps",
        "c2jShape" : "TargetList",
        "deprecated" : false,
        "documentation" : "<p>For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.</p>\n@param targetIps For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTargetIps",
        "getterDocumentation" : "/**<p>For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.</p>\n@return For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.*/",
        "getterMethodName" : "getTargetIps",
        "getterModel" : {
          "returnType" : "java.util.List<TargetAddress>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TargetIps",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TargetIps",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "TargetAddress",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "TargetAddress",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "TargetAddress",
              "variableName" : "member",
              "variableType" : "TargetAddress",
              "documentation" : "",
              "simpleType" : "TargetAddress",
              "variableSetterType" : "TargetAddress"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "TargetAddress",
              "variableName" : "member",
              "variableType" : "TargetAddress",
              "documentation" : "",
              "simpleType" : "TargetAddress",
              "variableSetterType" : "TargetAddress"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "TargetAddress",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "TargetAddress",
          "templateImplType" : "java.util.ArrayList<TargetAddress>",
          "templateType" : "java.util.List<TargetAddress>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "TargetIps",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.</p>\n@param targetIps For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.*/",
        "setterMethodName" : "setTargetIps",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<TargetAddress>",
          "variableName" : "targetIps",
          "variableType" : "java.util.List<TargetAddress>",
          "documentation" : "",
          "simpleType" : "List<TargetAddress>",
          "variableSetterType" : "java.util.Collection<TargetAddress>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTargetIps(java.util.Collection)} or {@link #withTargetIps(java.util.Collection)} if you want to override the existing values.</p>\n@param targetIps For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<TargetAddress>",
          "variableName" : "targetIps",
          "variableType" : "java.util.List<TargetAddress>",
          "documentation" : "<p>For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.</p>",
          "simpleType" : "List<TargetAddress>",
          "variableSetterType" : "java.util.Collection<TargetAddress>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ResolverEndpointId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the new outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the new outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>\n@param resolverEndpointId The ID of the new outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverEndpointId",
        "getterDocumentation" : "/**<p>The ID of the new outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>\n@return The ID of the new outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.*/",
        "getterMethodName" : "getResolverEndpointId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverEndpointId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverEndpointId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverEndpointId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the new outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>\n@param resolverEndpointId The ID of the new outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.*/",
        "setterMethodName" : "setResolverEndpointId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverEndpointId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the new outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>\n@param resolverEndpointId The ID of the new outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverEndpointId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the new outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "Name",
          "deprecated" : false,
          "documentation" : "<p>The new name for the Resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The new name for the Resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console. </p>\n@param name The new name for the Resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>The new name for the Resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console. </p>\n@return The new name for the Resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Name",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The new name for the Resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console. </p>\n@param name The new name for the Resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The new name for the Resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console. </p>\n@param name The new name for the Resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>The new name for the Resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResolverEndpointId" : {
          "c2jName" : "ResolverEndpointId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the new outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the new outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>\n@param resolverEndpointId The ID of the new outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverEndpointId",
          "getterDocumentation" : "/**<p>The ID of the new outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>\n@return The ID of the new outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.*/",
          "getterMethodName" : "getResolverEndpointId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverEndpointId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverEndpointId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverEndpointId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the new outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>\n@param resolverEndpointId The ID of the new outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.*/",
          "setterMethodName" : "setResolverEndpointId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverEndpointId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the new outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>\n@param resolverEndpointId The ID of the new outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverEndpointId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the new outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TargetIps" : {
          "c2jName" : "TargetIps",
          "c2jShape" : "TargetList",
          "deprecated" : false,
          "documentation" : "<p>For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.</p>\n@param targetIps For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTargetIps",
          "getterDocumentation" : "/**<p>For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.</p>\n@return For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.*/",
          "getterMethodName" : "getTargetIps",
          "getterModel" : {
            "returnType" : "java.util.List<TargetAddress>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TargetIps",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TargetIps",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "TargetAddress",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "TargetAddress",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "TargetAddress",
                "variableName" : "member",
                "variableType" : "TargetAddress",
                "documentation" : "",
                "simpleType" : "TargetAddress",
                "variableSetterType" : "TargetAddress"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "TargetAddress",
                "variableName" : "member",
                "variableType" : "TargetAddress",
                "documentation" : "",
                "simpleType" : "TargetAddress",
                "variableSetterType" : "TargetAddress"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "TargetAddress",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "TargetAddress",
            "templateImplType" : "java.util.ArrayList<TargetAddress>",
            "templateType" : "java.util.List<TargetAddress>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "TargetIps",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.</p>\n@param targetIps For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.*/",
          "setterMethodName" : "setTargetIps",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<TargetAddress>",
            "variableName" : "targetIps",
            "variableType" : "java.util.List<TargetAddress>",
            "documentation" : "",
            "simpleType" : "List<TargetAddress>",
            "variableSetterType" : "java.util.Collection<TargetAddress>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTargetIps(java.util.Collection)} or {@link #withTargetIps(java.util.Collection)} if you want to override the existing values.</p>\n@param targetIps For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<TargetAddress>",
            "variableName" : "targetIps",
            "variableType" : "java.util.List<TargetAddress>",
            "documentation" : "<p>For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.</p>",
            "simpleType" : "List<TargetAddress>",
            "variableSetterType" : "java.util.Collection<TargetAddress>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResolverRuleConfig",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResolverRuleConfig",
        "variableName" : "resolverRuleConfig",
        "variableType" : "ResolverRuleConfig",
        "documentation" : null,
        "simpleType" : "ResolverRuleConfig",
        "variableSetterType" : "ResolverRuleConfig"
      },
      "wrapper" : false
    },
    "ResolverRuleStatus" : {
      "c2jName" : "ResolverRuleStatus",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : [ {
        "name" : "COMPLETE",
        "value" : "COMPLETE"
      }, {
        "name" : "DELETING",
        "value" : "DELETING"
      }, {
        "name" : "UPDATING",
        "value" : "UPDATING"
      }, {
        "name" : "FAILED",
        "value" : "FAILED"
      } ],
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.enum.ResolverRuleStatus",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.route53resolver.enum",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResolverRuleStatus",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResolverRuleStatus",
        "variableName" : "resolverRuleStatus",
        "variableType" : "ResolverRuleStatus",
        "documentation" : null,
        "simpleType" : "ResolverRuleStatus",
        "variableSetterType" : "ResolverRuleStatus"
      },
      "wrapper" : false
    },
    "ResourceExistsException" : {
      "c2jName" : "ResourceExistsException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The resource that you tried to create already exists.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : "ResourceExistsException",
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.exception.ResourceExistsException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResourceType",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.</p>\n@param resourceType For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceType",
        "getterDocumentation" : "/**<p>For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.</p>\n@return For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.*/",
        "getterMethodName" : "getResourceType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceType",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceType",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.</p>\n@param resourceType For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.*/",
        "setterMethodName" : "setResourceType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.</p>\n@param resourceType For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceType",
          "variableType" : "String",
          "documentation" : "<p>For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResourceType" : {
          "c2jName" : "ResourceType",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.</p>\n@param resourceType For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceType",
          "getterDocumentation" : "/**<p>For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.</p>\n@return For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.*/",
          "getterMethodName" : "getResourceType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceType",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceType",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.</p>\n@param resourceType For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.*/",
          "setterMethodName" : "setResourceType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.</p>\n@param resourceType For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceType",
            "variableType" : "String",
            "documentation" : "<p>For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.exception",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResourceExistsException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResourceExistsException",
        "variableName" : "resourceExistsException",
        "variableType" : "ResourceExistsException",
        "documentation" : null,
        "simpleType" : "ResourceExistsException",
        "variableSetterType" : "ResourceExistsException"
      },
      "wrapper" : false
    },
    "ResourceInUseException" : {
      "c2jName" : "ResourceInUseException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The resource that you tried to update or delete is currently in use.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : "ResourceInUseException",
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.exception.ResourceInUseException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResourceType",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.</p>\n@param resourceType For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceType",
        "getterDocumentation" : "/**<p>For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.</p>\n@return For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.*/",
        "getterMethodName" : "getResourceType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceType",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceType",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.</p>\n@param resourceType For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.*/",
        "setterMethodName" : "setResourceType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.</p>\n@param resourceType For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceType",
          "variableType" : "String",
          "documentation" : "<p>For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResourceType" : {
          "c2jName" : "ResourceType",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.</p>\n@param resourceType For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceType",
          "getterDocumentation" : "/**<p>For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.</p>\n@return For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.*/",
          "getterMethodName" : "getResourceType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceType",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceType",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.</p>\n@param resourceType For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.*/",
          "setterMethodName" : "setResourceType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.</p>\n@param resourceType For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceType",
            "variableType" : "String",
            "documentation" : "<p>For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.exception",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResourceInUseException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResourceInUseException",
        "variableName" : "resourceInUseException",
        "variableType" : "ResourceInUseException",
        "documentation" : null,
        "simpleType" : "ResourceInUseException",
        "variableSetterType" : "ResourceInUseException"
      },
      "wrapper" : false
    },
    "ResourceNotFoundException" : {
      "c2jName" : "ResourceNotFoundException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified resource doesn't exist.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : "ResourceNotFoundException",
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.exception.ResourceNotFoundException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResourceType",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>\n@param resourceType For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceType",
        "getterDocumentation" : "/**<p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>\n@return For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.*/",
        "getterMethodName" : "getResourceType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceType",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceType",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>\n@param resourceType For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.*/",
        "setterMethodName" : "setResourceType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>\n@param resourceType For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceType",
          "variableType" : "String",
          "documentation" : "<p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResourceType" : {
          "c2jName" : "ResourceType",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>\n@param resourceType For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceType",
          "getterDocumentation" : "/**<p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>\n@return For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.*/",
          "getterMethodName" : "getResourceType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceType",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceType",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>\n@param resourceType For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.*/",
          "setterMethodName" : "setResourceType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>\n@param resourceType For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceType",
            "variableType" : "String",
            "documentation" : "<p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.exception",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResourceNotFoundException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResourceNotFoundException",
        "variableName" : "resourceNotFoundException",
        "variableType" : "ResourceNotFoundException",
        "documentation" : null,
        "simpleType" : "ResourceNotFoundException",
        "variableSetterType" : "ResourceNotFoundException"
      },
      "wrapper" : false
    },
    "ResourceUnavailableException" : {
      "c2jName" : "ResourceUnavailableException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified resource isn't available.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : "ResourceUnavailableException",
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.exception.ResourceUnavailableException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResourceType",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.</p>\n@param resourceType For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceType",
        "getterDocumentation" : "/**<p>For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.</p>\n@return For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.*/",
        "getterMethodName" : "getResourceType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceType",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceType",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.</p>\n@param resourceType For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.*/",
        "setterMethodName" : "setResourceType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.</p>\n@param resourceType For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceType",
          "variableType" : "String",
          "documentation" : "<p>For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResourceType" : {
          "c2jName" : "ResourceType",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.</p>\n@param resourceType For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceType",
          "getterDocumentation" : "/**<p>For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.</p>\n@return For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.*/",
          "getterMethodName" : "getResourceType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceType",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceType",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.</p>\n@param resourceType For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.*/",
          "setterMethodName" : "setResourceType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.</p>\n@param resourceType For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceType",
            "variableType" : "String",
            "documentation" : "<p>For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.exception",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResourceUnavailableException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResourceUnavailableException",
        "variableName" : "resourceUnavailableException",
        "variableType" : "ResourceUnavailableException",
        "documentation" : null,
        "simpleType" : "ResourceUnavailableException",
        "variableSetterType" : "ResourceUnavailableException"
      },
      "wrapper" : false
    },
    "RuleTypeOption" : {
      "c2jName" : "RuleTypeOption",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : [ {
        "name" : "FORWARD",
        "value" : "FORWARD"
      }, {
        "name" : "SYSTEM",
        "value" : "SYSTEM"
      }, {
        "name" : "RECURSIVE",
        "value" : "RECURSIVE"
      } ],
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.enum.RuleTypeOption",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.route53resolver.enum",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RuleTypeOption",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "RuleTypeOption",
        "variableName" : "ruleTypeOption",
        "variableType" : "RuleTypeOption",
        "documentation" : null,
        "simpleType" : "RuleTypeOption",
        "variableSetterType" : "RuleTypeOption"
      },
      "wrapper" : false
    },
    "ShareStatus" : {
      "c2jName" : "ShareStatus",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : [ {
        "name" : "NOT_SHARED",
        "value" : "NOT_SHARED"
      }, {
        "name" : "SHARED_WITH_ME",
        "value" : "SHARED_WITH_ME"
      }, {
        "name" : "SHARED_BY_ME",
        "value" : "SHARED_BY_ME"
      } ],
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.enum.ShareStatus",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.route53resolver.enum",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ShareStatus",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ShareStatus",
        "variableName" : "shareStatus",
        "variableType" : "ShareStatus",
        "documentation" : null,
        "simpleType" : "ShareStatus",
        "variableSetterType" : "ShareStatus"
      },
      "wrapper" : false
    },
    "SortOrder" : {
      "c2jName" : "SortOrder",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : [ {
        "name" : "ASCENDING",
        "value" : "ASCENDING"
      }, {
        "name" : "DESCENDING",
        "value" : "DESCENDING"
      } ],
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.enum.SortOrder",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.route53resolver.enum",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "SortOrder",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "SortOrder",
        "variableName" : "sortOrder",
        "variableType" : "SortOrder",
        "documentation" : null,
        "simpleType" : "SortOrder",
        "variableSetterType" : "SortOrder"
      },
      "wrapper" : false
    },
    "Tag" : {
      "c2jName" : "Tag",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>One tag that you want to add to the specified resource. A tag consists of a <code>Key</code> (a name for the tag) and a <code>Value</code>.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.model.Tag",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Key",
        "c2jShape" : "TagKey",
        "deprecated" : false,
        "documentation" : "<p>The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.</p>\n@param key The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withKey",
        "getterDocumentation" : "/**<p>The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.</p>\n@return The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.*/",
        "getterMethodName" : "getKey",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Key",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Key",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Key",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.</p>\n@param key The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.*/",
        "setterMethodName" : "setKey",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "key",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.</p>\n@param key The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "key",
          "variableType" : "String",
          "documentation" : "<p>The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Value",
        "c2jShape" : "TagValue",
        "deprecated" : false,
        "documentation" : "<p>The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.</p>\n@param value The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withValue",
        "getterDocumentation" : "/**<p>The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.</p>\n@return The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.*/",
        "getterMethodName" : "getValue",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Value",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Value",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Value",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.</p>\n@param value The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.*/",
        "setterMethodName" : "setValue",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "value",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.</p>\n@param value The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "value",
          "variableType" : "String",
          "documentation" : "<p>The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Key" : {
          "c2jName" : "Key",
          "c2jShape" : "TagKey",
          "deprecated" : false,
          "documentation" : "<p>The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.</p>\n@param key The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withKey",
          "getterDocumentation" : "/**<p>The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.</p>\n@return The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.*/",
          "getterMethodName" : "getKey",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Key",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Key",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Key",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.</p>\n@param key The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.*/",
          "setterMethodName" : "setKey",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "key",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.</p>\n@param key The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "key",
            "variableType" : "String",
            "documentation" : "<p>The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Value" : {
          "c2jName" : "Value",
          "c2jShape" : "TagValue",
          "deprecated" : false,
          "documentation" : "<p>The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.</p>\n@param value The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withValue",
          "getterDocumentation" : "/**<p>The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.</p>\n@return The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.*/",
          "getterMethodName" : "getValue",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Value",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Value",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Value",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.</p>\n@param value The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.*/",
          "setterMethodName" : "setValue",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "value",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.</p>\n@param value The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "value",
            "variableType" : "String",
            "documentation" : "<p>The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Key", "Value" ],
      "shapeName" : "Tag",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "Tag",
        "variableName" : "tag",
        "variableType" : "Tag",
        "documentation" : null,
        "simpleType" : "Tag",
        "variableSetterType" : "Tag"
      },
      "wrapper" : false
    },
    "TagResourceRequest" : {
      "c2jName" : "TagResourceRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.request.TagResourceRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "TagResource",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.TagResource",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResourceArn",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li> </ul>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li> </ul>\n@param resourceArn The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceArn",
        "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li> </ul>\n@return The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li>*/",
        "getterMethodName" : "getResourceArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceArn",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceArn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li> </ul>\n@param resourceArn The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li>*/",
        "setterMethodName" : "setResourceArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li> </ul>\n@param resourceArn The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceArn",
          "variableType" : "String",
          "documentation" : "<p>The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li> </ul>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Tags",
        "c2jShape" : "TagList",
        "deprecated" : false,
        "documentation" : "<p>The tags that you want to add to the specified resource.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The tags that you want to add to the specified resource.</p>\n@param tags The tags that you want to add to the specified resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTags",
        "getterDocumentation" : "/**<p>The tags that you want to add to the specified resource.</p>\n@return The tags that you want to add to the specified resource.*/",
        "getterMethodName" : "getTags",
        "getterModel" : {
          "returnType" : "java.util.List<Tag>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Tags",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Tags",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Tag",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Tag",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Tag",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Tag",
          "templateImplType" : "java.util.ArrayList<Tag>",
          "templateType" : "java.util.List<Tag>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Tags",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The tags that you want to add to the specified resource.</p>\n@param tags The tags that you want to add to the specified resource.*/",
        "setterMethodName" : "setTags",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The tags that you want to add to the specified resource.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags The tags that you want to add to the specified resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "<p>The tags that you want to add to the specified resource.</p>",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResourceArn" : {
          "c2jName" : "ResourceArn",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li> </ul>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li> </ul>\n@param resourceArn The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceArn",
          "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li> </ul>\n@return The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li>*/",
          "getterMethodName" : "getResourceArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceArn",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceArn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li> </ul>\n@param resourceArn The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li>*/",
          "setterMethodName" : "setResourceArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li> </ul>\n@param resourceArn The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceArn",
            "variableType" : "String",
            "documentation" : "<p>The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li> </ul>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Tags" : {
          "c2jName" : "Tags",
          "c2jShape" : "TagList",
          "deprecated" : false,
          "documentation" : "<p>The tags that you want to add to the specified resource.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The tags that you want to add to the specified resource.</p>\n@param tags The tags that you want to add to the specified resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTags",
          "getterDocumentation" : "/**<p>The tags that you want to add to the specified resource.</p>\n@return The tags that you want to add to the specified resource.*/",
          "getterMethodName" : "getTags",
          "getterModel" : {
            "returnType" : "java.util.List<Tag>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Tags",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Tags",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Tag",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Tag",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Tag",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Tag",
            "templateImplType" : "java.util.ArrayList<Tag>",
            "templateType" : "java.util.List<Tag>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Tags",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The tags that you want to add to the specified resource.</p>\n@param tags The tags that you want to add to the specified resource.*/",
          "setterMethodName" : "setTags",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The tags that you want to add to the specified resource.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags The tags that you want to add to the specified resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "<p>The tags that you want to add to the specified resource.</p>",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResourceArn", "Tags" ],
      "shapeName" : "TagResourceRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "TagResourceRequest",
        "variableName" : "tagResourceRequest",
        "variableType" : "TagResourceRequest",
        "documentation" : null,
        "simpleType" : "TagResourceRequest",
        "variableSetterType" : "TagResourceRequest"
      },
      "wrapper" : false
    },
    "TagResourceResult" : {
      "c2jName" : "TagResourceResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.response.TagResourceResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.route53resolver.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "TagResourceResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "TagResourceResult",
        "variableName" : "tagResourceResult",
        "variableType" : "TagResourceResult",
        "documentation" : null,
        "simpleType" : "TagResourceResult",
        "variableSetterType" : "TagResourceResult"
      },
      "wrapper" : false
    },
    "TargetAddress" : {
      "c2jName" : "TargetAddress",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverRule.html\">CreateResolverRule</a> request, an array of the IPs that you want to forward DNS queries to.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.model.TargetAddress",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Ip",
        "c2jShape" : "Ip",
        "deprecated" : false,
        "documentation" : "<p>One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.</p>\n@param ip One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withIp",
        "getterDocumentation" : "/**<p>One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.</p>\n@return One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.*/",
        "getterMethodName" : "getIp",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Ip",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Ip",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Ip",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.</p>\n@param ip One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.*/",
        "setterMethodName" : "setIp",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ip",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.</p>\n@param ip One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ip",
          "variableType" : "String",
          "documentation" : "<p>One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Port",
        "c2jShape" : "Port",
        "deprecated" : false,
        "documentation" : "<p>The port at <code>Ip</code> that you want to forward DNS queries to.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The port at <code>Ip</code> that you want to forward DNS queries to.</p>\n@param port The port at <code>Ip</code> that you want to forward DNS queries to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPort",
        "getterDocumentation" : "/**<p>The port at <code>Ip</code> that you want to forward DNS queries to.</p>\n@return The port at <code>Ip</code> that you want to forward DNS queries to.*/",
        "getterMethodName" : "getPort",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Port",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Port",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "Port",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The port at <code>Ip</code> that you want to forward DNS queries to.</p>\n@param port The port at <code>Ip</code> that you want to forward DNS queries to.*/",
        "setterMethodName" : "setPort",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "port",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The port at <code>Ip</code> that you want to forward DNS queries to.</p>\n@param port The port at <code>Ip</code> that you want to forward DNS queries to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "port",
          "variableType" : "Integer",
          "documentation" : "<p>The port at <code>Ip</code> that you want to forward DNS queries to.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Ip" : {
          "c2jName" : "Ip",
          "c2jShape" : "Ip",
          "deprecated" : false,
          "documentation" : "<p>One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.</p>\n@param ip One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withIp",
          "getterDocumentation" : "/**<p>One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.</p>\n@return One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.*/",
          "getterMethodName" : "getIp",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Ip",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Ip",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Ip",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.</p>\n@param ip One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.*/",
          "setterMethodName" : "setIp",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ip",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.</p>\n@param ip One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ip",
            "variableType" : "String",
            "documentation" : "<p>One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Port" : {
          "c2jName" : "Port",
          "c2jShape" : "Port",
          "deprecated" : false,
          "documentation" : "<p>The port at <code>Ip</code> that you want to forward DNS queries to.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The port at <code>Ip</code> that you want to forward DNS queries to.</p>\n@param port The port at <code>Ip</code> that you want to forward DNS queries to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPort",
          "getterDocumentation" : "/**<p>The port at <code>Ip</code> that you want to forward DNS queries to.</p>\n@return The port at <code>Ip</code> that you want to forward DNS queries to.*/",
          "getterMethodName" : "getPort",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Port",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Port",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "Port",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The port at <code>Ip</code> that you want to forward DNS queries to.</p>\n@param port The port at <code>Ip</code> that you want to forward DNS queries to.*/",
          "setterMethodName" : "setPort",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "port",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The port at <code>Ip</code> that you want to forward DNS queries to.</p>\n@param port The port at <code>Ip</code> that you want to forward DNS queries to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "port",
            "variableType" : "Integer",
            "documentation" : "<p>The port at <code>Ip</code> that you want to forward DNS queries to.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Ip" ],
      "shapeName" : "TargetAddress",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "TargetAddress",
        "variableName" : "targetAddress",
        "variableType" : "TargetAddress",
        "documentation" : null,
        "simpleType" : "TargetAddress",
        "variableSetterType" : "TargetAddress"
      },
      "wrapper" : false
    },
    "ThrottlingException" : {
      "c2jName" : "ThrottlingException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : "ThrottlingException",
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.exception.ThrottlingException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.route53resolver.exception",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ThrottlingException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ThrottlingException",
        "variableName" : "throttlingException",
        "variableType" : "ThrottlingException",
        "documentation" : null,
        "simpleType" : "ThrottlingException",
        "variableSetterType" : "ThrottlingException"
      },
      "wrapper" : false
    },
    "UnknownResourceException" : {
      "c2jName" : "UnknownResourceException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified resource doesn't exist.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : "UnknownResourceException",
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.exception.UnknownResourceException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.route53resolver.exception",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "UnknownResourceException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UnknownResourceException",
        "variableName" : "unknownResourceException",
        "variableType" : "UnknownResourceException",
        "documentation" : null,
        "simpleType" : "UnknownResourceException",
        "variableSetterType" : "UnknownResourceException"
      },
      "wrapper" : false
    },
    "UntagResourceRequest" : {
      "c2jName" : "UntagResourceRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.request.UntagResourceRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "UntagResource",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.UntagResource",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResourceArn",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li> </ul>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li> </ul>\n@param resourceArn The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceArn",
        "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li> </ul>\n@return The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li>*/",
        "getterMethodName" : "getResourceArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceArn",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceArn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li> </ul>\n@param resourceArn The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li>*/",
        "setterMethodName" : "setResourceArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li> </ul>\n@param resourceArn The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceArn",
          "variableType" : "String",
          "documentation" : "<p>The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li> </ul>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "TagKeys",
        "c2jShape" : "TagKeyList",
        "deprecated" : false,
        "documentation" : "<p>The tags that you want to remove to the specified resource.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The tags that you want to remove to the specified resource.</p>\n@param tagKeys The tags that you want to remove to the specified resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTagKeys",
        "getterDocumentation" : "/**<p>The tags that you want to remove to the specified resource.</p>\n@return The tags that you want to remove to the specified resource.*/",
        "getterMethodName" : "getTagKeys",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TagKeys",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TagKeys",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "TagKey",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "TagKeys",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The tags that you want to remove to the specified resource.</p>\n@param tagKeys The tags that you want to remove to the specified resource.*/",
        "setterMethodName" : "setTagKeys",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "tagKeys",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The tags that you want to remove to the specified resource.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTagKeys(java.util.Collection)} or {@link #withTagKeys(java.util.Collection)} if you want to override the existing values.</p>\n@param tagKeys The tags that you want to remove to the specified resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "tagKeys",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>The tags that you want to remove to the specified resource.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResourceArn" : {
          "c2jName" : "ResourceArn",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li> </ul>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li> </ul>\n@param resourceArn The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceArn",
          "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li> </ul>\n@return The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li>*/",
          "getterMethodName" : "getResourceArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceArn",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceArn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li> </ul>\n@param resourceArn The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li>*/",
          "setterMethodName" : "setResourceArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li> </ul>\n@param resourceArn The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceArn",
            "variableType" : "String",
            "documentation" : "<p>The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\">GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\">GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\">GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\">ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\">ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\">ListResolverRules</a> </p> </li> </ul>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TagKeys" : {
          "c2jName" : "TagKeys",
          "c2jShape" : "TagKeyList",
          "deprecated" : false,
          "documentation" : "<p>The tags that you want to remove to the specified resource.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The tags that you want to remove to the specified resource.</p>\n@param tagKeys The tags that you want to remove to the specified resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTagKeys",
          "getterDocumentation" : "/**<p>The tags that you want to remove to the specified resource.</p>\n@return The tags that you want to remove to the specified resource.*/",
          "getterMethodName" : "getTagKeys",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TagKeys",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TagKeys",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "TagKey",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "TagKeys",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The tags that you want to remove to the specified resource.</p>\n@param tagKeys The tags that you want to remove to the specified resource.*/",
          "setterMethodName" : "setTagKeys",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "tagKeys",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The tags that you want to remove to the specified resource.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTagKeys(java.util.Collection)} or {@link #withTagKeys(java.util.Collection)} if you want to override the existing values.</p>\n@param tagKeys The tags that you want to remove to the specified resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "tagKeys",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>The tags that you want to remove to the specified resource.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResourceArn", "TagKeys" ],
      "shapeName" : "UntagResourceRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UntagResourceRequest",
        "variableName" : "untagResourceRequest",
        "variableType" : "UntagResourceRequest",
        "documentation" : null,
        "simpleType" : "UntagResourceRequest",
        "variableSetterType" : "UntagResourceRequest"
      },
      "wrapper" : false
    },
    "UntagResourceResult" : {
      "c2jName" : "UntagResourceResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.response.UntagResourceResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.route53resolver.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "UntagResourceResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UntagResourceResult",
        "variableName" : "untagResourceResult",
        "variableType" : "UntagResourceResult",
        "documentation" : null,
        "simpleType" : "UntagResourceResult",
        "variableSetterType" : "UntagResourceResult"
      },
      "wrapper" : false
    },
    "UpdateResolverDnssecConfigRequest" : {
      "c2jName" : "UpdateResolverDnssecConfigRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.request.UpdateResolverDnssecConfigRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "UpdateResolverDnssecConfig",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.UpdateResolverDnssecConfig",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResourceId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the virtual private cloud (VPC) that you're updating the DNSSEC validation status for.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the virtual private cloud (VPC) that you're updating the DNSSEC validation status for.</p>\n@param resourceId The ID of the virtual private cloud (VPC) that you're updating the DNSSEC validation status for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceId",
        "getterDocumentation" : "/**<p>The ID of the virtual private cloud (VPC) that you're updating the DNSSEC validation status for.</p>\n@return The ID of the virtual private cloud (VPC) that you're updating the DNSSEC validation status for.*/",
        "getterMethodName" : "getResourceId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the virtual private cloud (VPC) that you're updating the DNSSEC validation status for.</p>\n@param resourceId The ID of the virtual private cloud (VPC) that you're updating the DNSSEC validation status for.*/",
        "setterMethodName" : "setResourceId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the virtual private cloud (VPC) that you're updating the DNSSEC validation status for.</p>\n@param resourceId The ID of the virtual private cloud (VPC) that you're updating the DNSSEC validation status for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the virtual private cloud (VPC) that you're updating the DNSSEC validation status for.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Validation",
        "c2jShape" : "Validation",
        "deprecated" : false,
        "documentation" : "<p>The new value that you are specifying for DNSSEC validation for the VPC. The value can be <code>ENABLE</code> or <code>DISABLE</code>. Be aware that it can take time for a validation status change to be completed.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : "Validation",
        "fluentSetterDocumentation" : "/**<p>The new value that you are specifying for DNSSEC validation for the VPC. The value can be <code>ENABLE</code> or <code>DISABLE</code>. Be aware that it can take time for a validation status change to be completed.</p>\n@param validation The new value that you are specifying for DNSSEC validation for the VPC. The value can be <code>ENABLE</code> or <code>DISABLE</code>. Be aware that it can take time for a validation status change to be completed.\n@return Returns a reference to this object so that method calls can be chained together.\n@see Validation*/",
        "fluentSetterMethodName" : "withValidation",
        "getterDocumentation" : "/**<p>The new value that you are specifying for DNSSEC validation for the VPC. The value can be <code>ENABLE</code> or <code>DISABLE</code>. Be aware that it can take time for a validation status change to be completed.</p>\n@return The new value that you are specifying for DNSSEC validation for the VPC. The value can be <code>ENABLE</code> or <code>DISABLE</code>. Be aware that it can take time for a validation status change to be completed.\n@see Validation*/",
        "getterMethodName" : "getValidation",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Validation",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Validation",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Validation",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The new value that you are specifying for DNSSEC validation for the VPC. The value can be <code>ENABLE</code> or <code>DISABLE</code>. Be aware that it can take time for a validation status change to be completed.</p>\n@param validation The new value that you are specifying for DNSSEC validation for the VPC. The value can be <code>ENABLE</code> or <code>DISABLE</code>. Be aware that it can take time for a validation status change to be completed.\n@see Validation*/",
        "setterMethodName" : "setValidation",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "validation",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The new value that you are specifying for DNSSEC validation for the VPC. The value can be <code>ENABLE</code> or <code>DISABLE</code>. Be aware that it can take time for a validation status change to be completed.</p>\n@param validation The new value that you are specifying for DNSSEC validation for the VPC. The value can be <code>ENABLE</code> or <code>DISABLE</code>. Be aware that it can take time for a validation status change to be completed.\n@return Returns a reference to this object so that method calls can be chained together.\n@see Validation*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "validation",
          "variableType" : "String",
          "documentation" : "<p>The new value that you are specifying for DNSSEC validation for the VPC. The value can be <code>ENABLE</code> or <code>DISABLE</code>. Be aware that it can take time for a validation status change to be completed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResourceId" : {
          "c2jName" : "ResourceId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the virtual private cloud (VPC) that you're updating the DNSSEC validation status for.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the virtual private cloud (VPC) that you're updating the DNSSEC validation status for.</p>\n@param resourceId The ID of the virtual private cloud (VPC) that you're updating the DNSSEC validation status for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceId",
          "getterDocumentation" : "/**<p>The ID of the virtual private cloud (VPC) that you're updating the DNSSEC validation status for.</p>\n@return The ID of the virtual private cloud (VPC) that you're updating the DNSSEC validation status for.*/",
          "getterMethodName" : "getResourceId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the virtual private cloud (VPC) that you're updating the DNSSEC validation status for.</p>\n@param resourceId The ID of the virtual private cloud (VPC) that you're updating the DNSSEC validation status for.*/",
          "setterMethodName" : "setResourceId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the virtual private cloud (VPC) that you're updating the DNSSEC validation status for.</p>\n@param resourceId The ID of the virtual private cloud (VPC) that you're updating the DNSSEC validation status for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the virtual private cloud (VPC) that you're updating the DNSSEC validation status for.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Validation" : {
          "c2jName" : "Validation",
          "c2jShape" : "Validation",
          "deprecated" : false,
          "documentation" : "<p>The new value that you are specifying for DNSSEC validation for the VPC. The value can be <code>ENABLE</code> or <code>DISABLE</code>. Be aware that it can take time for a validation status change to be completed.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : "Validation",
          "fluentSetterDocumentation" : "/**<p>The new value that you are specifying for DNSSEC validation for the VPC. The value can be <code>ENABLE</code> or <code>DISABLE</code>. Be aware that it can take time for a validation status change to be completed.</p>\n@param validation The new value that you are specifying for DNSSEC validation for the VPC. The value can be <code>ENABLE</code> or <code>DISABLE</code>. Be aware that it can take time for a validation status change to be completed.\n@return Returns a reference to this object so that method calls can be chained together.\n@see Validation*/",
          "fluentSetterMethodName" : "withValidation",
          "getterDocumentation" : "/**<p>The new value that you are specifying for DNSSEC validation for the VPC. The value can be <code>ENABLE</code> or <code>DISABLE</code>. Be aware that it can take time for a validation status change to be completed.</p>\n@return The new value that you are specifying for DNSSEC validation for the VPC. The value can be <code>ENABLE</code> or <code>DISABLE</code>. Be aware that it can take time for a validation status change to be completed.\n@see Validation*/",
          "getterMethodName" : "getValidation",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Validation",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Validation",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Validation",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The new value that you are specifying for DNSSEC validation for the VPC. The value can be <code>ENABLE</code> or <code>DISABLE</code>. Be aware that it can take time for a validation status change to be completed.</p>\n@param validation The new value that you are specifying for DNSSEC validation for the VPC. The value can be <code>ENABLE</code> or <code>DISABLE</code>. Be aware that it can take time for a validation status change to be completed.\n@see Validation*/",
          "setterMethodName" : "setValidation",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "validation",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The new value that you are specifying for DNSSEC validation for the VPC. The value can be <code>ENABLE</code> or <code>DISABLE</code>. Be aware that it can take time for a validation status change to be completed.</p>\n@param validation The new value that you are specifying for DNSSEC validation for the VPC. The value can be <code>ENABLE</code> or <code>DISABLE</code>. Be aware that it can take time for a validation status change to be completed.\n@return Returns a reference to this object so that method calls can be chained together.\n@see Validation*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "validation",
            "variableType" : "String",
            "documentation" : "<p>The new value that you are specifying for DNSSEC validation for the VPC. The value can be <code>ENABLE</code> or <code>DISABLE</code>. Be aware that it can take time for a validation status change to be completed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResourceId", "Validation" ],
      "shapeName" : "UpdateResolverDnssecConfigRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UpdateResolverDnssecConfigRequest",
        "variableName" : "updateResolverDnssecConfigRequest",
        "variableType" : "UpdateResolverDnssecConfigRequest",
        "documentation" : null,
        "simpleType" : "UpdateResolverDnssecConfigRequest",
        "variableSetterType" : "UpdateResolverDnssecConfigRequest"
      },
      "wrapper" : false
    },
    "UpdateResolverDnssecConfigResult" : {
      "c2jName" : "UpdateResolverDnssecConfigResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.response.UpdateResolverDnssecConfigResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResolverDNSSECConfig",
        "c2jShape" : "ResolverDnssecConfig",
        "deprecated" : false,
        "documentation" : "<p>A complex type that contains settings for the specified DNSSEC configuration.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A complex type that contains settings for the specified DNSSEC configuration.</p>\n@param resolverDNSSECConfig A complex type that contains settings for the specified DNSSEC configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverDNSSECConfig",
        "getterDocumentation" : "/**<p>A complex type that contains settings for the specified DNSSEC configuration.</p>\n@return A complex type that contains settings for the specified DNSSEC configuration.*/",
        "getterMethodName" : "getResolverDNSSECConfig",
        "getterModel" : {
          "returnType" : "ResolverDnssecConfig",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverDNSSECConfig",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverDNSSECConfig",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ResolverDNSSECConfig",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A complex type that contains settings for the specified DNSSEC configuration.</p>\n@param resolverDNSSECConfig A complex type that contains settings for the specified DNSSEC configuration.*/",
        "setterMethodName" : "setResolverDNSSECConfig",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverDnssecConfig",
          "variableName" : "resolverDNSSECConfig",
          "variableType" : "ResolverDnssecConfig",
          "documentation" : "",
          "simpleType" : "ResolverDnssecConfig",
          "variableSetterType" : "ResolverDnssecConfig"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A complex type that contains settings for the specified DNSSEC configuration.</p>\n@param resolverDNSSECConfig A complex type that contains settings for the specified DNSSEC configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverDnssecConfig",
          "variableName" : "resolverDNSSECConfig",
          "variableType" : "ResolverDnssecConfig",
          "documentation" : "<p>A complex type that contains settings for the specified DNSSEC configuration.</p>",
          "simpleType" : "ResolverDnssecConfig",
          "variableSetterType" : "ResolverDnssecConfig"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverDNSSECConfig" : {
          "c2jName" : "ResolverDNSSECConfig",
          "c2jShape" : "ResolverDnssecConfig",
          "deprecated" : false,
          "documentation" : "<p>A complex type that contains settings for the specified DNSSEC configuration.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A complex type that contains settings for the specified DNSSEC configuration.</p>\n@param resolverDNSSECConfig A complex type that contains settings for the specified DNSSEC configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverDNSSECConfig",
          "getterDocumentation" : "/**<p>A complex type that contains settings for the specified DNSSEC configuration.</p>\n@return A complex type that contains settings for the specified DNSSEC configuration.*/",
          "getterMethodName" : "getResolverDNSSECConfig",
          "getterModel" : {
            "returnType" : "ResolverDnssecConfig",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverDNSSECConfig",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverDNSSECConfig",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ResolverDNSSECConfig",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A complex type that contains settings for the specified DNSSEC configuration.</p>\n@param resolverDNSSECConfig A complex type that contains settings for the specified DNSSEC configuration.*/",
          "setterMethodName" : "setResolverDNSSECConfig",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverDnssecConfig",
            "variableName" : "resolverDNSSECConfig",
            "variableType" : "ResolverDnssecConfig",
            "documentation" : "",
            "simpleType" : "ResolverDnssecConfig",
            "variableSetterType" : "ResolverDnssecConfig"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A complex type that contains settings for the specified DNSSEC configuration.</p>\n@param resolverDNSSECConfig A complex type that contains settings for the specified DNSSEC configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverDnssecConfig",
            "variableName" : "resolverDNSSECConfig",
            "variableType" : "ResolverDnssecConfig",
            "documentation" : "<p>A complex type that contains settings for the specified DNSSEC configuration.</p>",
            "simpleType" : "ResolverDnssecConfig",
            "variableSetterType" : "ResolverDnssecConfig"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "UpdateResolverDnssecConfigResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UpdateResolverDnssecConfigResult",
        "variableName" : "updateResolverDnssecConfigResult",
        "variableType" : "UpdateResolverDnssecConfigResult",
        "documentation" : null,
        "simpleType" : "UpdateResolverDnssecConfigResult",
        "variableSetterType" : "UpdateResolverDnssecConfigResult"
      },
      "wrapper" : false
    },
    "UpdateResolverEndpointRequest" : {
      "c2jName" : "UpdateResolverEndpointRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.request.UpdateResolverEndpointRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "UpdateResolverEndpoint",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.UpdateResolverEndpoint",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResolverEndpointId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the Resolver endpoint that you want to update.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to update.</p>\n@param resolverEndpointId The ID of the Resolver endpoint that you want to update.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverEndpointId",
        "getterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to update.</p>\n@return The ID of the Resolver endpoint that you want to update.*/",
        "getterMethodName" : "getResolverEndpointId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverEndpointId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverEndpointId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverEndpointId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to update.</p>\n@param resolverEndpointId The ID of the Resolver endpoint that you want to update.*/",
        "setterMethodName" : "setResolverEndpointId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverEndpointId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to update.</p>\n@param resolverEndpointId The ID of the Resolver endpoint that you want to update.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverEndpointId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the Resolver endpoint that you want to update.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Name",
        "c2jShape" : "Name",
        "deprecated" : false,
        "documentation" : "<p>The name of the Resolver endpoint that you want to update.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the Resolver endpoint that you want to update.</p>\n@param name The name of the Resolver endpoint that you want to update.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>The name of the Resolver endpoint that you want to update.</p>\n@return The name of the Resolver endpoint that you want to update.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Name",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the Resolver endpoint that you want to update.</p>\n@param name The name of the Resolver endpoint that you want to update.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the Resolver endpoint that you want to update.</p>\n@param name The name of the Resolver endpoint that you want to update.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>The name of the Resolver endpoint that you want to update.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "Name",
          "deprecated" : false,
          "documentation" : "<p>The name of the Resolver endpoint that you want to update.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the Resolver endpoint that you want to update.</p>\n@param name The name of the Resolver endpoint that you want to update.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>The name of the Resolver endpoint that you want to update.</p>\n@return The name of the Resolver endpoint that you want to update.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Name",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the Resolver endpoint that you want to update.</p>\n@param name The name of the Resolver endpoint that you want to update.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the Resolver endpoint that you want to update.</p>\n@param name The name of the Resolver endpoint that you want to update.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>The name of the Resolver endpoint that you want to update.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResolverEndpointId" : {
          "c2jName" : "ResolverEndpointId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the Resolver endpoint that you want to update.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to update.</p>\n@param resolverEndpointId The ID of the Resolver endpoint that you want to update.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverEndpointId",
          "getterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to update.</p>\n@return The ID of the Resolver endpoint that you want to update.*/",
          "getterMethodName" : "getResolverEndpointId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverEndpointId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverEndpointId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverEndpointId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to update.</p>\n@param resolverEndpointId The ID of the Resolver endpoint that you want to update.*/",
          "setterMethodName" : "setResolverEndpointId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverEndpointId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the Resolver endpoint that you want to update.</p>\n@param resolverEndpointId The ID of the Resolver endpoint that you want to update.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverEndpointId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the Resolver endpoint that you want to update.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResolverEndpointId" ],
      "shapeName" : "UpdateResolverEndpointRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UpdateResolverEndpointRequest",
        "variableName" : "updateResolverEndpointRequest",
        "variableType" : "UpdateResolverEndpointRequest",
        "documentation" : null,
        "simpleType" : "UpdateResolverEndpointRequest",
        "variableSetterType" : "UpdateResolverEndpointRequest"
      },
      "wrapper" : false
    },
    "UpdateResolverEndpointResult" : {
      "c2jName" : "UpdateResolverEndpointResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.response.UpdateResolverEndpointResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResolverEndpoint",
        "c2jShape" : "ResolverEndpoint",
        "deprecated" : false,
        "documentation" : "<p>The response to an <code>UpdateResolverEndpoint</code> request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The response to an <code>UpdateResolverEndpoint</code> request.</p>\n@param resolverEndpoint The response to an <code>UpdateResolverEndpoint</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverEndpoint",
        "getterDocumentation" : "/**<p>The response to an <code>UpdateResolverEndpoint</code> request.</p>\n@return The response to an <code>UpdateResolverEndpoint</code> request.*/",
        "getterMethodName" : "getResolverEndpoint",
        "getterModel" : {
          "returnType" : "ResolverEndpoint",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverEndpoint",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverEndpoint",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ResolverEndpoint",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The response to an <code>UpdateResolverEndpoint</code> request.</p>\n@param resolverEndpoint The response to an <code>UpdateResolverEndpoint</code> request.*/",
        "setterMethodName" : "setResolverEndpoint",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverEndpoint",
          "variableName" : "resolverEndpoint",
          "variableType" : "ResolverEndpoint",
          "documentation" : "",
          "simpleType" : "ResolverEndpoint",
          "variableSetterType" : "ResolverEndpoint"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The response to an <code>UpdateResolverEndpoint</code> request.</p>\n@param resolverEndpoint The response to an <code>UpdateResolverEndpoint</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverEndpoint",
          "variableName" : "resolverEndpoint",
          "variableType" : "ResolverEndpoint",
          "documentation" : "<p>The response to an <code>UpdateResolverEndpoint</code> request.</p>",
          "simpleType" : "ResolverEndpoint",
          "variableSetterType" : "ResolverEndpoint"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverEndpoint" : {
          "c2jName" : "ResolverEndpoint",
          "c2jShape" : "ResolverEndpoint",
          "deprecated" : false,
          "documentation" : "<p>The response to an <code>UpdateResolverEndpoint</code> request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The response to an <code>UpdateResolverEndpoint</code> request.</p>\n@param resolverEndpoint The response to an <code>UpdateResolverEndpoint</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverEndpoint",
          "getterDocumentation" : "/**<p>The response to an <code>UpdateResolverEndpoint</code> request.</p>\n@return The response to an <code>UpdateResolverEndpoint</code> request.*/",
          "getterMethodName" : "getResolverEndpoint",
          "getterModel" : {
            "returnType" : "ResolverEndpoint",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverEndpoint",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverEndpoint",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ResolverEndpoint",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The response to an <code>UpdateResolverEndpoint</code> request.</p>\n@param resolverEndpoint The response to an <code>UpdateResolverEndpoint</code> request.*/",
          "setterMethodName" : "setResolverEndpoint",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverEndpoint",
            "variableName" : "resolverEndpoint",
            "variableType" : "ResolverEndpoint",
            "documentation" : "",
            "simpleType" : "ResolverEndpoint",
            "variableSetterType" : "ResolverEndpoint"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The response to an <code>UpdateResolverEndpoint</code> request.</p>\n@param resolverEndpoint The response to an <code>UpdateResolverEndpoint</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverEndpoint",
            "variableName" : "resolverEndpoint",
            "variableType" : "ResolverEndpoint",
            "documentation" : "<p>The response to an <code>UpdateResolverEndpoint</code> request.</p>",
            "simpleType" : "ResolverEndpoint",
            "variableSetterType" : "ResolverEndpoint"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "UpdateResolverEndpointResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UpdateResolverEndpointResult",
        "variableName" : "updateResolverEndpointResult",
        "variableType" : "UpdateResolverEndpointResult",
        "documentation" : null,
        "simpleType" : "UpdateResolverEndpointResult",
        "variableSetterType" : "UpdateResolverEndpointResult"
      },
      "wrapper" : false
    },
    "UpdateResolverRuleRequest" : {
      "c2jName" : "UpdateResolverRuleRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.request.UpdateResolverRuleRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "UpdateResolverRule",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.UpdateResolverRule",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResolverRuleId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the Resolver rule that you want to update.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the Resolver rule that you want to update.</p>\n@param resolverRuleId The ID of the Resolver rule that you want to update.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverRuleId",
        "getterDocumentation" : "/**<p>The ID of the Resolver rule that you want to update.</p>\n@return The ID of the Resolver rule that you want to update.*/",
        "getterMethodName" : "getResolverRuleId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverRuleId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverRuleId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverRuleId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the Resolver rule that you want to update.</p>\n@param resolverRuleId The ID of the Resolver rule that you want to update.*/",
        "setterMethodName" : "setResolverRuleId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverRuleId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the Resolver rule that you want to update.</p>\n@param resolverRuleId The ID of the Resolver rule that you want to update.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverRuleId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the Resolver rule that you want to update.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Config",
        "c2jShape" : "ResolverRuleConfig",
        "deprecated" : false,
        "documentation" : "<p>The new settings for the Resolver rule.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The new settings for the Resolver rule.</p>\n@param config The new settings for the Resolver rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withConfig",
        "getterDocumentation" : "/**<p>The new settings for the Resolver rule.</p>\n@return The new settings for the Resolver rule.*/",
        "getterMethodName" : "getConfig",
        "getterModel" : {
          "returnType" : "ResolverRuleConfig",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Config",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Config",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Config",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The new settings for the Resolver rule.</p>\n@param config The new settings for the Resolver rule.*/",
        "setterMethodName" : "setConfig",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverRuleConfig",
          "variableName" : "config",
          "variableType" : "ResolverRuleConfig",
          "documentation" : "",
          "simpleType" : "ResolverRuleConfig",
          "variableSetterType" : "ResolverRuleConfig"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The new settings for the Resolver rule.</p>\n@param config The new settings for the Resolver rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverRuleConfig",
          "variableName" : "config",
          "variableType" : "ResolverRuleConfig",
          "documentation" : "<p>The new settings for the Resolver rule.</p>",
          "simpleType" : "ResolverRuleConfig",
          "variableSetterType" : "ResolverRuleConfig"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Config" : {
          "c2jName" : "Config",
          "c2jShape" : "ResolverRuleConfig",
          "deprecated" : false,
          "documentation" : "<p>The new settings for the Resolver rule.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The new settings for the Resolver rule.</p>\n@param config The new settings for the Resolver rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withConfig",
          "getterDocumentation" : "/**<p>The new settings for the Resolver rule.</p>\n@return The new settings for the Resolver rule.*/",
          "getterMethodName" : "getConfig",
          "getterModel" : {
            "returnType" : "ResolverRuleConfig",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Config",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Config",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Config",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The new settings for the Resolver rule.</p>\n@param config The new settings for the Resolver rule.*/",
          "setterMethodName" : "setConfig",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverRuleConfig",
            "variableName" : "config",
            "variableType" : "ResolverRuleConfig",
            "documentation" : "",
            "simpleType" : "ResolverRuleConfig",
            "variableSetterType" : "ResolverRuleConfig"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The new settings for the Resolver rule.</p>\n@param config The new settings for the Resolver rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverRuleConfig",
            "variableName" : "config",
            "variableType" : "ResolverRuleConfig",
            "documentation" : "<p>The new settings for the Resolver rule.</p>",
            "simpleType" : "ResolverRuleConfig",
            "variableSetterType" : "ResolverRuleConfig"
          },
          "xmlNameSpaceUri" : null
        },
        "ResolverRuleId" : {
          "c2jName" : "ResolverRuleId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the Resolver rule that you want to update.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the Resolver rule that you want to update.</p>\n@param resolverRuleId The ID of the Resolver rule that you want to update.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverRuleId",
          "getterDocumentation" : "/**<p>The ID of the Resolver rule that you want to update.</p>\n@return The ID of the Resolver rule that you want to update.*/",
          "getterMethodName" : "getResolverRuleId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverRuleId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverRuleId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverRuleId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the Resolver rule that you want to update.</p>\n@param resolverRuleId The ID of the Resolver rule that you want to update.*/",
          "setterMethodName" : "setResolverRuleId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverRuleId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the Resolver rule that you want to update.</p>\n@param resolverRuleId The ID of the Resolver rule that you want to update.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverRuleId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the Resolver rule that you want to update.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResolverRuleId", "Config" ],
      "shapeName" : "UpdateResolverRuleRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UpdateResolverRuleRequest",
        "variableName" : "updateResolverRuleRequest",
        "variableType" : "UpdateResolverRuleRequest",
        "documentation" : null,
        "simpleType" : "UpdateResolverRuleRequest",
        "variableSetterType" : "UpdateResolverRuleRequest"
      },
      "wrapper" : false
    },
    "UpdateResolverRuleResult" : {
      "c2jName" : "UpdateResolverRuleResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.response.UpdateResolverRuleResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResolverRule",
        "c2jShape" : "ResolverRule",
        "deprecated" : false,
        "documentation" : "<p>The response to an <code>UpdateResolverRule</code> request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The response to an <code>UpdateResolverRule</code> request.</p>\n@param resolverRule The response to an <code>UpdateResolverRule</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverRule",
        "getterDocumentation" : "/**<p>The response to an <code>UpdateResolverRule</code> request.</p>\n@return The response to an <code>UpdateResolverRule</code> request.*/",
        "getterMethodName" : "getResolverRule",
        "getterModel" : {
          "returnType" : "ResolverRule",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverRule",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverRule",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ResolverRule",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The response to an <code>UpdateResolverRule</code> request.</p>\n@param resolverRule The response to an <code>UpdateResolverRule</code> request.*/",
        "setterMethodName" : "setResolverRule",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverRule",
          "variableName" : "resolverRule",
          "variableType" : "ResolverRule",
          "documentation" : "",
          "simpleType" : "ResolverRule",
          "variableSetterType" : "ResolverRule"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The response to an <code>UpdateResolverRule</code> request.</p>\n@param resolverRule The response to an <code>UpdateResolverRule</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverRule",
          "variableName" : "resolverRule",
          "variableType" : "ResolverRule",
          "documentation" : "<p>The response to an <code>UpdateResolverRule</code> request.</p>",
          "simpleType" : "ResolverRule",
          "variableSetterType" : "ResolverRule"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverRule" : {
          "c2jName" : "ResolverRule",
          "c2jShape" : "ResolverRule",
          "deprecated" : false,
          "documentation" : "<p>The response to an <code>UpdateResolverRule</code> request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The response to an <code>UpdateResolverRule</code> request.</p>\n@param resolverRule The response to an <code>UpdateResolverRule</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverRule",
          "getterDocumentation" : "/**<p>The response to an <code>UpdateResolverRule</code> request.</p>\n@return The response to an <code>UpdateResolverRule</code> request.*/",
          "getterMethodName" : "getResolverRule",
          "getterModel" : {
            "returnType" : "ResolverRule",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverRule",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverRule",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ResolverRule",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The response to an <code>UpdateResolverRule</code> request.</p>\n@param resolverRule The response to an <code>UpdateResolverRule</code> request.*/",
          "setterMethodName" : "setResolverRule",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverRule",
            "variableName" : "resolverRule",
            "variableType" : "ResolverRule",
            "documentation" : "",
            "simpleType" : "ResolverRule",
            "variableSetterType" : "ResolverRule"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The response to an <code>UpdateResolverRule</code> request.</p>\n@param resolverRule The response to an <code>UpdateResolverRule</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverRule",
            "variableName" : "resolverRule",
            "variableType" : "ResolverRule",
            "documentation" : "<p>The response to an <code>UpdateResolverRule</code> request.</p>",
            "simpleType" : "ResolverRule",
            "variableSetterType" : "ResolverRule"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.route53resolver.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "UpdateResolverRuleResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UpdateResolverRuleResult",
        "variableName" : "updateResolverRuleResult",
        "variableType" : "UpdateResolverRuleResult",
        "documentation" : null,
        "simpleType" : "UpdateResolverRuleResult",
        "variableSetterType" : "UpdateResolverRuleResult"
      },
      "wrapper" : false
    },
    "Validation" : {
      "c2jName" : "Validation",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : [ {
        "name" : "ENABLE",
        "value" : "ENABLE"
      }, {
        "name" : "DISABLE",
        "value" : "DISABLE"
      } ],
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.route53resolver.enum.Validation",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.route53resolver.enum",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Validation",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "Validation",
        "variableName" : "validation",
        "variableType" : "Validation",
        "documentation" : null,
        "simpleType" : "Validation",
        "variableSetterType" : "Validation"
      },
      "wrapper" : false
    }
  },
  "clientConfigFactory" : "ClientConfigurationFactory",
  "examples" : {
    "examples" : { },
    "version" : "1.0"
  },
  "exceptionUnmarshallerImpl" : null,
  "fileHeader" : "/*\n * Copyright 2016-2021 Amazon.com, Inc. or its affiliates. All Rights\n * Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */",
  "hasWaiters" : false,
  "sdkBaseResponseFqcn" : "com.amazonaws.AmazonWebServiceResult<com.amazonaws.ResponseMetadata>",
  "sdkModeledExceptionBaseClassName" : "AmazonRoute53ResolverException",
  "sdkModeledExceptionBaseFqcn" : "com.amazonaws.services.route53resolver.model.AmazonRoute53ResolverException",
  "serviceBaseExceptionFqcn" : "com.amazonaws.AmazonServiceException",
  "transformPackage" : "com.amazonaws.services.route53resolver.model.transform"
}